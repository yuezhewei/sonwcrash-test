<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="20">
  <HTTPTask id="61" hostname="192.168.109.1" path="/bugfree/assets/c4a5a759/jquery.ztree.js" url="http://192.168.109.1:8032/bugfree/assets/c4a5a759/jquery.ztree.js" ip="192.168.109.1" port="8032" connectionId="14" origin="Primary" frame="1" startTime="1070135" endTime="1070151">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Accept" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzE5Mi4xNjguMTA5LjE6ODAzMi9idWdmcmVlL2luZGV4LnBocC9idWcvbGlzdC8x</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOSk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTkyLjE2OC4xMDkuMTo4MDMy</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MV9wcm9kdWN0PTdjNzBkOGJhYmY2YzI2MjIyODliZGRkMmQyMDk3YzJkODkwNjg2N2NzJTNBMSUzQSUyMjElMjIlM0I7IHBhZ2VTaXplPTJkZDdiNGIyNjBmMTUxM2E3M2I4NWI1MTExNGZiNTNlZjNkOGQwNTZzJTNBMiUzQSUyMjIwJTIyJTNCOyBhYy1jb29raWU9JTVCJTdCJTIyZGF0YSUyMiUzQSU1QiUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglMjIlMkMlMjIlNUN1N2NmYiU1Q3U3ZWRmJTVDdTdiYTElNUN1NzQwNiU1Q3U1NDU4JTVCYWRtaW4lNUQlMjIlNUQlMkMlMjJ2YWx1ZSUyMiUzQSUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglMjIlMkMlMjJyZXN1bHQlMjIlM0ElMjIlNUN1N2NmYiU1Q3U3ZWRmJTVDdTdiYTElNUN1NzQwNiU1Q3U1NDU4JTIyJTdEJTVEOyBQSFBTRVNTSUQ9Z2x2NThnajFnbXBxZmhwMGwwZ3NjZm9mbjc7IGxhbmd1YWdlPTMzMTQyMTkxYzhhODk1YjUwOWNhMmZiNmY2Y2M1OTdhMzEyNWYxNThzJTNBNSUzQSUyMnpoX2NuJTIyJTNC</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9idWdmcmVlL2Fzc2V0cy9jNGE1YTc1OS9qcXVlcnkuenRyZWUuanMgSFRUUC8xLjENCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vMTkyLjE2OC4xMDkuMTo4MDMyL2J1Z2ZyZWUvaW5kZXgucGhwL2J1Zy9saXN0LzENCkFjY2VwdC1MYW5ndWFnZTogemgtQ04NClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3MjkpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkhvc3Q6IDE5Mi4xNjguMTA5LjE6ODAzMg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KQ29va2llOiAxX3Byb2R1Y3Q9N2M3MGQ4YmFiZjZjMjYyMjI4OWJkZGQyZDIwOTdjMmQ4OTA2ODY3Y3MlM0ExJTNBJTIyMSUyMiUzQjsgcGFnZVNpemU9MmRkN2I0YjI2MGYxNTEzYTczYjg1YjUxMTE0ZmI1M2VmM2Q4ZDA1NnMlM0EyJTNBJTIyMjAlMjIlM0I7IGFjLWNvb2tpZT0lNUIlN0IlMjJkYXRhJTIyJTNBJTVCJTIyJTVDdTdjZmIlNUN1N2VkZiU1Q3U3YmExJTVDdTc0MDYlNUN1NTQ1OCUyMiUyQyUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglNUJhZG1pbiU1RCUyMiU1RCUyQyUyMnZhbHVlJTIyJTNBJTIyJTVDdTdjZmIlNUN1N2VkZiU1Q3U3YmExJTVDdTc0MDYlNUN1NTQ1OCUyMiUyQyUyMnJlc3VsdCUyMiUzQSUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglMjIlN0QlNUQ7IFBIUFNFU1NJRD1nbHY1OGdqMWdtcHFmaHAwbDBnc2Nmb2ZuNzsgbGFuZ3VhZ2U9MzMxNDIxOTFjOGE4OTViNTA5Y2EyZmI2ZjZjYzU5N2EzMTI1ZjE1OHMlM0E1JTNBJTIyemhfY24lMjIlM0INCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="1_product" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>N2M3MGQ4YmFiZjZjMjYyMjI4OWJkZGQyZDIwOTdjMmQ4OTA2ODY3Y3MlM0ExJTNBJTIyMSUyMiUzQg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="pageSize" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MmRkN2I0YjI2MGYxNTEzYTczYjg1YjUxMTE0ZmI1M2VmM2Q4ZDA1NnMlM0EyJTNBJTIyMjAlMjIlM0I=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ac-cookie" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JTVCJTdCJTIyZGF0YSUyMiUzQSU1QiUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglMjIlMkMlMjIlNUN1N2NmYiU1Q3U3ZWRmJTVDdTdiYTElNUN1NzQwNiU1Q3U1NDU4JTVCYWRtaW4lNUQlMjIlNUQlMkMlMjJ2YWx1ZSUyMiUzQSUyMiU1Q3U3Y2ZiJTVDdTdlZGYlNUN1N2JhMSU1Q3U3NDA2JTVDdTU0NTglMjIlMkMlMjJyZXN1bHQlMjIlM0ElMjIlNUN1N2NmYiU1Q3U3ZWRmJTVDdTdiYTElNUN1NzQwNiU1Q3U1NDU4JTIyJTdEJTVE</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="PHPSESSID" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z2x2NThnajFnbXBxZmhwMGwwZ3NjZm9mbjc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="language" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzMxNDIxOTFjOGE4OTViNTA5Y2EyZmI2ZjZjYzU5N2EzMTI1ZjE1OHMlM0E1JTNBJTIyemhfY24lMjIlM0I=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Date" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNyBNYXkgMjAxOSAwNjoyMDozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QXBhY2hlLzIuNC42IChXaW4zMikgUEhQLzUuNS4x</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyMCBNYXIgMjAxOCAwMTo0MDowOSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjE1NWJmLTU2N2NlMjc5YzhlMGYtZ3ppcCI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTc4MDU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Keep-Alive" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGltZW91dD01LCBtYXg9OTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBNb24sIDI3IE1heSAyMDE5IDA2OjIwOjMxIEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjYgKFdpbjMyKSBQSFAvNS41LjENCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMjAgTWFyIDIwMTggMDE6NDA6MDkgR01UDQpFVGFnOiAiMTU1YmYtNTY3Y2UyNzljOGUwZi1nemlwIg0KQWNjZXB0LVJhbmdlczogYnl0ZXMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29udGVudC1MZW5ndGg6IDE3ODA1DQpLZWVwLUFsaXZlOiB0aW1lb3V0PTUsIG1heD05OA0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>LyoNCiAqIEpRdWVyeSB6VHJlZSAyLjYuMDENCiAqIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9qcXVlcnl0cmVlLw0KICoNCiAqIENvcHlyaWdodCAoYykgMjAxMCBIdW50ZXIueiAoYmFieTY2Ni5jbikNCiAqDQogKiBMaWNlbnNlZCBzYW1lIGFzIGpxdWVyeSAtIHVuZGVyIHRoZSB0ZXJtcyBvZiBlaXRoZXIgdGhlIE1JVCBMaWNlbnNlIG9yIHRoZSBHUEwgVmVyc2lvbiAyIExpY2Vuc2UNCiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwDQogKiBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvZ3BsLmh0bWwNCiAqDQogKiBlbWFpbDogaHVudGVyLnpAMjYzLm5ldA0KICogRGF0ZTogMjAxMS0wNi0yOQ0KICovDQoNCihmdW5jdGlvbigkKSB7DQoNCgl2YXIgWlRSRUVfTk9ERUNSRUFURUQgPSAiWlRSRUVfTk9ERUNSRUFURUQiOw0KCXZhciBaVFJFRV9DTElDSyA9ICJaVFJFRV9DTElDSyI7DQoJdmFyIFpUUkVFX0NIQU5HRSA9ICJaVFJFRV9DSEFOR0UiOw0KCXZhciBaVFJFRV9SRU5BTUUgPSAiWlRSRUVfUkVOQU1FIjsNCgl2YXIgWlRSRUVfUkVNT1ZFID0gIlpUUkVFX1JFTU9WRSI7DQoJdmFyIFpUUkVFX0RSQUcgPSAiWlRSRUVfRFJBRyI7DQoJdmFyIFpUUkVFX0RST1AgPSAiWlRSRUVfRFJPUCI7DQoJdmFyIFpUUkVFX0VYUEFORCA9ICJaVFJFRV9FWFBBTkQiOw0KCXZhciBaVFJFRV9DT0xMQVBTRSA9ICJaVFJFRV9DT0xMQVBTRSI7DQoJdmFyIFpUUkVFX0FTWU5DX1NVQ0NFU1MgPSAiWlRSRUVfQVNZTkNfU1VDQ0VTUyI7DQoJdmFyIFpUUkVFX0FTWU5DX0VSUk9SID0gIlpUUkVFX0FTWU5DX0VSUk9SIjsNCg0KCXZhciBJRE1hcmtfU3dpdGNoID0gIl9zd2l0Y2giOw0KCXZhciBJRE1hcmtfSWNvbiA9ICJfaWNvIjsNCgl2YXIgSURNYXJrX1NwYW4gPSAiX3NwYW4iOw0KCXZhciBJRE1hcmtfSW5wdXQgPSAiX2lucHV0IjsNCgl2YXIgSURNYXJrX0NoZWNrID0gIl9jaGVjayI7DQoJdmFyIElETWFya19FZGl0ID0gIl9lZGl0IjsNCgl2YXIgSURNYXJrX1JlbW92ZSA9ICJfcmVtb3ZlIjsNCgl2YXIgSURNYXJrX1VsID0gIl91bCI7DQoJdmFyIElETWFya19BID0gIl9hIjsNCg0KCXZhciBMaW5lTWFya19Sb290ID0gInJvb3QiOw0KCXZhciBMaW5lTWFya19Sb290cyA9ICJyb290cyI7DQoJdmFyIExpbmVNYXJrX0NlbnRlciA9ICJjZW50ZXIiOw0KCXZhciBMaW5lTWFya19Cb3R0b20gPSAiYm90dG9tIjsNCgl2YXIgTGluZU1hcmtfTm9MaW5lID0gIm5vTGluZSI7DQoJdmFyIExpbmVNYXJrX0xpbmUgPSAibGluZSI7DQoNCgl2YXIgRm9sZGVyTWFya19PcGVuID0gIm9wZW4iOw0KCXZhciBGb2xkZXJNYXJrX0Nsb3NlID0gImNsb3NlIjsNCgl2YXIgRm9sZGVyTWFya19Eb2N1ID0gImRvY3UiOw0KDQoJdmFyIENsYXNzX0N1clNlbGVjdGVkTm9kZSA9ICJjdXJTZWxlY3RlZE5vZGUiOw0KCXZhciBDbGFzc19DdXJTZWxlY3RlZE5vZGVfRWRpdCA9ICJjdXJTZWxlY3RlZE5vZGVfRWRpdCI7DQoJdmFyIENsYXNzX1RtcFRhcmdldFRyZWUgPSAidG1wVGFyZ2V0VHJlZSI7DQoJdmFyIENsYXNzX1RtcFRhcmdldE5vZGUgPSAidG1wVGFyZ2V0Tm9kZSI7DQoNCgl2YXIgQ2hlY2tfU3R5bGVfQm94ID0gImNoZWNrYm94IjsNCgl2YXIgQ2hlY2tfU3R5bGVfUmFkaW8gPSAicmFkaW8iOw0KCXZhciBDaGVja0JveF9EZWZhdWx0ID0gImNoayI7DQoJdmFyIENoZWNrQm94X0ZhbHNlID0gImZhbHNlIjsNCgl2YXIgQ2hlY2tCb3hfVHJ1ZSA9ICJ0cnVlIjsNCgl2YXIgQ2hlY2tCb3hfRnVsbCA9ICJmdWxsIjsNCgl2YXIgQ2hlY2tCb3hfUGFydCA9ICJwYXJ0IjsNCgl2YXIgQ2hlY2tCb3hfRm9jdXMgPSAiZm9jdXMiOw0KCXZhciBSYWRpb19UeXBlX0FsbCA9ICJhbGwiOw0KCXZhciBSYWRpb19UeXBlX0xldmVsID0gImxldmVsIjsNCg0KCXZhciBNb3ZlVHlwZV9Jbm5lciA9ICJpbm5lciI7DQoJdmFyIE1vdmVUeXBlX0JlZm9yZSA9ICJiZWZvcmUiOw0KCXZhciBNb3ZlVHlwZV9BZnRlciA9ICJhZnRlciI7DQoJdmFyIE1pbk1vdmVTaXplID0gIjUiOw0KDQoJdmFyIHNldHRpbmdzID0gbmV3IEFycmF5KCk7DQoJdmFyIHpUcmVlSWQgPSAwOw0KCXZhciB6VHJlZU5vZGVDYWNoZSA9IFtdOw0KDQoJLy96VHJlZeaehOmAoOWHveaVsA0KCSQuZm4uelRyZWUgPSBmdW5jdGlvbih6VHJlZVNldHRpbmcsIHpUcmVlTm9kZXMpIHsNCg0KCQl2YXIgc2V0dGluZyA9IHsNCgkJCS8vVHJlZSDllK/kuIDmoIfor4bvvIzkuLtVTOeahElEDQoJCQl0cmVlT2JqSWQ6ICIiLA0KCQkJdHJlZU9iajogbnVsbCwNCgkJCS8v5piv5ZCm5pi+56S6Q2hlY2tCb3gNCgkJCWNoZWNrYWJsZTogZmFsc2UsDQoJCQkvL+aYr+WQpuWcqOe8lui+keeKtuaAgQ0KCQkJZWRpdGFibGU6IGZhbHNlLA0KCQkJLy/nvJbovpHnirbmgIHmmK/lkKbmmL7npLrkv67mlLnmjInpkq4NCgkJCWVkaXRfcmVuYW1lQnRuOnRydWUsDQoJCQkvL+e8lui+keeKtuaAgeaYr+WQpuaYvuekuuWIoOmZpOiKgueCueaMiemSrg0KCQkJZWRpdF9yZW1vdmVCdG46dHJ1ZSwNCgkJCS8v5piv5ZCm5pi+56S65qCR55qE57q/DQoJCQlzaG93TGluZTogdHJ1ZSwNCgkJCS8v5piv5ZCm5pi+56S65Zu+5qCHDQoJCQlzaG93SWNvbjogdHJ1ZSwNCgkJCS8v5piv5ZCm6ZSB5a6a54i26IqC54K554q25oCBDQoJCQlrZWVwUGFyZW50OiBmYWxzZSwNCgkJCS8v5piv5ZCm6ZSB5a6a5Y+25a2Q6IqC54K554q25oCBDQoJCQlrZWVwTGVhZjogZmFsc2UsDQoJCQkvL+W9k+WJjeiiq+mAieaLqeeahFRyZWVOb2RlDQoJCQljdXJUcmVlTm9kZTogbnVsbCwNCgkJCS8v5b2T5YmN5q2j6KKr57yW6L6R55qEVHJlZU5vZGUNCgkJCWN1ckVkaXRUcmVlTm9kZTogbnVsbCwNCgkJCS8v5piv5ZCm5aSE5LqO5ouW5ou95pyf6Ze0IDA6IG5vdCBEcmFnOyAxOiBkb2luZyBEcmFnDQoJCQlkcmFnU3RhdHVzOiAwLA0KCQkJZHJhZ05vZGVTaG93QmVmb3JlOiBmYWxzZSwNCgkJCS8v5ouW5ou95pON5L2c5o6n5Yi2IG1vdmUgb3IgY29weQ0KCQkJZHJhZ0NvcHk6IGZhbHNlLA0KCQkJZHJhZ01vdmU6IHRydWUsDQoJCQkvL+mAieaLqUNoZWNrQm94IOaIliBSYWRpbw0KCQkJY2hlY2tTdHlsZTogQ2hlY2tfU3R5bGVfQm94LA0KCQkJLy9jaGVja0JveOeCueWHu+WQjuW9seWTjeeItuWtkOiKgueCueiuvue9ru+8iGNoZWNrU3R5bGU9Q2hlY2tfU3R5bGVfUmFkaW/ml7bml6DmlYjvvIkNCgkJCWNoZWNrVHlwZTogew0KCQkJCSJZIjogInBzIiwNCgkJCQkiTiI6ICJwcyINCgkJCX0sDQoJCQkvL3JhZGlvIOacgOWkp+S4quaVsOmZkOWItuexu+Wei++8jOavj+S4gOe6p+iKgueCuemZkOWItiDmiJYg5pW05qO1VHJlZeeahOWFqOmDqOiKgueCuemZkOWItu+8iGNoZWNrU3R5bGU9Q2hlY2tfU3R5bGVfQm945pe25peg5pWI77yJDQoJCQljaGVja1JhZGlvVHlwZTpSYWRpb19UeXBlX0xldmVsLA0KCQkJLy9jaGVja1JhZGlvVHlwZSA9IFJhZGlvX1R5cGVfQWxsIOaXtu+8jOS/neWtmOiiq+mAieaLqeiKgueCueeahOWghuagiA0KCQkJY2hlY2tSYWRpb0NoZWNrZWRMaXN0OltdLA0KCQkJLy/mmK/lkKblvILmraXojrflj5boioLngrnmlbDmja4NCgkJCWFzeW5jOiBmYWxzZSwNCgkJCS8v6I635Y+W6IqC54K55pWw5o2u55qEVVJM5Zyw5Z2ADQoJCQlhc3luY1VybDogIiIsDQoJCQkvL+iOt+WPluiKgueCueaVsOaNruaXtu+8jOW/hemhu+eahOaVsOaNruWQjeensO+8jOS+i+Wmgu+8mmlk44CBbmFtZQ0KCQkJYXN5bmNQYXJhbTogW10sDQoJCQkvL+WFtuWug+WPguaVsA0KCQkJYXN5bmNQYXJhbU90aGVyOiBbXSwNCgkJCS8v5byC5q2l5Yqg6L296I635Y+W5pWw5o2u77yM6ZKI5a+55pWw5o2u6L+b6KGM6aKE5aSE55CG55qE5Ye95pWwDQoJCQlhc3luY0RhdGFGaWx0ZXI6IG51bGwsDQoJCQkvL+eugOWNlUFycmF55pWw57uE6L2s5o2i5Li6SlNPTuW1jOWll+aVsOaNruWPguaVsA0KCQkJaXNTaW1wbGVEYXRhOiBmYWxzZSwNCgkJCXRyZWVOb2RlS2V5OiAiIiwNCgkJCXRyZWVOb2RlUGFyZW50S2V5OiAiIiwNCgkJCXJvb3RQSUQ6IG51bGwsDQoJCQkvL+eUqOaIt+iHquWumuS5ieWQjeensOWIlw0KCQkJbmFtZUNvbDogIm5hbWUiLA0KCQkJLy/nlKjmiLfoh6rlrprkuYnlrZDoioLngrnliJcNCgkJCW5vZGVzQ29sOiAibm9kZXMiLA0KCQkJLy/nlKjmiLfoh6rlrprkuYljaGVja2Vk5YiXDQoJCQljaGVja2VkQ29sOiAiY2hlY2tlZCIsDQoJCQkvL+aKmOWPoOOAgeWxleW8gOeJueaViOmAn+W6pg0KCQkJZXhwYW5kU3BlZWQ6ICJmYXN0IiwNCgkJCS8v5oqY5Y+g44CB5bGV5byAVHJpZ2dlcuW8gOWFsw0KCQkJZXhwYW5kVHJpZ2dlckZsYWc6ZmFsc2UsDQoJCQkvL2hvdmVyIOWinuWKoOaMiemSruaOpeWPow0KCQkJYWRkSG92ZXJEb206bnVsbCwNCgkJCS8vaG92ZXIg5Yig6Zmk5oyJ6ZKu5o6l5Y+jDQoJCQlyZW1vdmVIb3ZlckRvbTpudWxsLA0KCQkJLy/msLjkuYXoh6rlrprkuYnmmL7npLrmjqfku7bmlrnms5UNCgkJCWFkZERpeURvbTpudWxsLA0KCQkJLy/lrZfkvZPkuKrmgKfljJbmoLflvI/mjqXlj6MNCgkJCWZvbnRDc3M6e30sDQoNCgkJCXJvb3Q6IHsNCgkJCQlpc1Jvb3Q6IHRydWUsDQoJCQkJbm9kZXM6IFtdDQoJCQl9LA0KCQkJLy9ldmVudCBGdW5jdGlvbg0KCQkJY2FsbGJhY2s6IHsNCgkJCQliZWZvcmVBc3luYzpudWxsLA0KCQkJCWJlZm9yZUNsaWNrOm51bGwsDQoJCQkJYmVmb3JlUmlnaHRDbGljazpudWxsLA0KCQkJCWJlZm9yZU1vdXNlRG93bjpudWxsLA0KCQkJCWJlZm9yZU1vdXNlVXA6bnVsbCwNCgkJCQliZWZvcmVDaGFuZ2U6bnVsbCwNCgkJCQliZWZvcmVEcmFnOm51bGwsDQoJCQkJYmVmb3JlRHJvcDpudWxsLA0KCQkJCWJlZm9yZVJlbmFtZTpudWxsLA0KCQkJCWJlZm9yZVJlbW92ZTpudWxsLA0KCQkJCWJlZm9yZUV4cGFuZDpudWxsLA0KCQkJCWJlZm9yZUNvbGxhcHNlOm51bGwsDQoJCQkJY29uZmlybURyYWdPcGVuOm51bGwsDQoJCQkJY29uZmlybVJlbmFtZTpudWxsLA0KDQoJCQkJbm9kZUNyZWF0ZWQ6bnVsbCwNCgkJCQljbGljazpudWxsLA0KCQkJCXJpZ2h0Q2xpY2s6bnVsbCwNCgkJCQltb3VzZURvd246bnVsbCwNCgkJCQltb3VzZVVwOm51bGwsDQoJCQkJY2hhbmdlOm51bGwsDQoJCQkJZHJhZzpudWxsLA0KCQkJCWRyb3A6bnVsbCwNCgkJCQlyZW5hbWU6bnVsbCwNCgkJCQlyZW1vdmU6bnVsbCwNCgkJCQlleHBhbmQ6bnVsbCwNCgkJCQljb2xsYXBzZTpudWxsLA0KCQkJCWFzeW5jQ29uZmlybURhdGE6bnVsbCwNCgkJCQlhc3luY1N1Y2Nlc3M6bnVsbCwNCgkJCQlhc3luY0Vycm9yOm51bGwNCgkJCX0NCgkJfTsNCg0KCQlpZiAoelRyZWVTZXR0aW5nKSB7DQoJCQl2YXIgdG1wX2NoZWNrVHlwZSA9IHpUcmVlU2V0dGluZy5jaGVja1R5cGU7DQoJCQl6VHJlZVNldHRpbmcuY2hlY2tUeXBlID0gdW5kZWZpbmVkOw0KCQkJdmFyIHRtcF9jYWxsYmFjayA9IHpUcmVlU2V0dGluZy5jYWxsYmFjazsNCgkJCXpUcmVlU2V0dGluZy5jYWxsYmFjayA9IHVuZGVmaW5lZDsNCgkJCXZhciB0bXBfcm9vdCA9IHpUcmVlU2V0dGluZy5yb290Ow0KCQkJelRyZWVTZXR0aW5nLnJvb3QgPSB1bmRlZmluZWQ7DQoNCgkJCSQuZXh0ZW5kKHNldHRpbmcsIHpUcmVlU2V0dGluZyk7DQoNCgkJCXpUcmVlU2V0dGluZy5jaGVja1R5cGUgPSB0bXBfY2hlY2tUeXBlOw0KCQkJJC5leHRlbmQodHJ1ZSwgc2V0dGluZy5jaGVja1R5cGUsIHRtcF9jaGVja1R5cGUpOw0KCQkJelRyZWVTZXR0aW5nLmNhbGxiYWNrID0gdG1wX2NhbGxiYWNrOw0KCQkJJC5leHRlbmQoc2V0dGluZy5jYWxsYmFjaywgdG1wX2NhbGxiYWNrKTsNCgkJCXpUcmVlU2V0dGluZy5yb290ID0gdG1wX3Jvb3Q7DQoJCQkkLmV4dGVuZChzZXR0aW5nLnJvb3QsIHRtcF9yb290KTsNCgkJfQ0KDQoJCXNldHRpbmcudHJlZU9iaklkID0gdGhpcy5hdHRyKCJpZCIpOw0KCQlzZXR0aW5nLnRyZWVPYmogPSB0aGlzOw0KCQlzZXR0aW5nLnJvb3QudElkID0gLTE7DQoJCXNldHRpbmcucm9vdC5uYW1lID0gIlpUUkVFIFJPT1QiOw0KCQlzZXR0aW5nLnJvb3QuaXNSb290ID0gdHJ1ZTsNCgkJc2V0dGluZy5jaGVja1JhZGlvQ2hlY2tlZExpc3QgPSBbXTsNCgkJc2V0dGluZy5jdXJUcmVlTm9kZSA9IG51bGw7DQoJCXNldHRpbmcuY3VyRWRpdFRyZWVOb2RlID0gbnVsbDsNCgkJc2V0dGluZy5kcmFnTm9kZVNob3dCZWZvcmUgPSBmYWxzZTsNCgkJc2V0dGluZy5kcmFnU3RhdHVzID0gMDsNCgkJc2V0dGluZy5leHBhbmRUcmlnZ2VyRmxhZyA9IGZhbHNlOw0KCQlpZiAoIXNldHRpbmcucm9vdFtzZXR0aW5nLm5vZGVzQ29sXSkgc2V0dGluZy5yb290W3NldHRpbmcubm9kZXNDb2xdPSBbXTsNCg0KCQlpZiAoelRyZWVOb2Rlcykgew0KCQkJc2V0dGluZy5yb290W3NldHRpbmcubm9kZXNDb2xdID0gelRyZWVOb2RlczsNCgkJfQ0KCQlpZiAoc2V0dGluZy5pc1NpbXBsZURhdGEpIHsNCgkJCXNldHRpbmcucm9vdFtzZXR0aW5nLm5vZGVzQ29sXSA9IHRyYW5zZm9ybVRvelRyZWVGb3JtYXQoc2V0dGluZywgc2V0dGluZy5yb290W3NldHRpbmcubm9kZXNDb2xdKTsNCgkJfQ0KCQlzZXR0aW5nc1tzZXR0aW5nLnRyZWVPYmpJZF0gPSBzZXR0aW5nOw0KDQoJCXNldHRpbmcudHJlZU9iai5lbXB0eSgpOw0KCQl6VHJlZU5vZGVDYWNoZVtzZXR0aW5nLnRyZWVPYmpJZF0gPSBbXTsNCgkJYmluZFRyZWVOb2RlcyhzZXR0aW5nLCB0aGlzKTsNCgkJaWYgKHNldHRpbmcucm9vdFtzZXR0aW5nLm5vZGVzQ29sXSAmJiBzZXR0aW5nLnJvb3Rbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID4gMCkgew0KCQkJaW5pdFRyZWVOb2RlcyhzZXR0aW5nLCAwLCBzZXR0aW5nLnJvb3Rbc2V0dGluZy5ub2Rlc0NvbF0pOw0KCQl9IGVsc2UgaWYgKHNldHRpbmcuYXN5bmMgJiYgc2V0dGluZy5hc3luY1VybCAmJiBzZXR0aW5nLmFzeW5jVXJsLmxlbmd0aCA+IDApIHsNCgkJCWFzeW5jR2V0Tm9kZShzZXR0aW5nKTsNCgkJfQ0KDQoJCXJldHVybiBuZXcgelRyZWVQbHVnaW4oKS5pbml0KHRoaXMpOw0KCX07DQoNCgkvL+e7keWumuS6i+S7tg0KCWZ1bmN0aW9uIGJpbmRUcmVlTm9kZXMoc2V0dGluZywgdHJlZU9iaikgew0KCQl2YXIgZXZlbnRQYXJhbSA9IHt0cmVlT2JqSWQ6IHNldHRpbmcudHJlZU9iaklkfTsNCgkJc2V0dGluZy50cmVlT2JqLnVuYmluZCgnY2xpY2snLCBldmVudFByb3h5KTsNCgkJc2V0dGluZy50cmVlT2JqLmJpbmQoJ2NsaWNrJywgZXZlbnRQYXJhbSwgZXZlbnRQcm94eSk7DQoJCXNldHRpbmcudHJlZU9iai51bmJpbmQoJ2RibGNsaWNrJywgZXZlbnRQcm94eSk7DQoJCXNldHRpbmcudHJlZU9iai5iaW5kKCdkYmxjbGljaycsIGV2ZW50UGFyYW0sIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmoudW5iaW5kKCdtb3VzZW92ZXInLCBldmVudFByb3h5KTsNCgkJc2V0dGluZy50cmVlT2JqLmJpbmQoJ21vdXNlb3ZlcicsIGV2ZW50UGFyYW0sIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmoudW5iaW5kKCdtb3VzZW91dCcsIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmouYmluZCgnbW91c2VvdXQnLCBldmVudFBhcmFtLCBldmVudFByb3h5KTsNCgkJc2V0dGluZy50cmVlT2JqLnVuYmluZCgnbW91c2Vkb3duJywgZXZlbnRQcm94eSk7DQoJCXNldHRpbmcudHJlZU9iai5iaW5kKCdtb3VzZWRvd24nLCBldmVudFBhcmFtLCBldmVudFByb3h5KTsNCgkJc2V0dGluZy50cmVlT2JqLnVuYmluZCgnbW91c2V1cCcsIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmouYmluZCgnbW91c2V1cCcsIGV2ZW50UGFyYW0sIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmoudW5iaW5kKCdjb250ZXh0bWVudScsIGV2ZW50UHJveHkpOw0KCQlzZXR0aW5nLnRyZWVPYmouYmluZCgnY29udGV4dG1lbnUnLCBldmVudFBhcmFtLCBldmVudFByb3h5KTsNCg0KCQl0cmVlT2JqLnVuYmluZChaVFJFRV9OT0RFQ1JFQVRFRCk7DQoJCXRyZWVPYmouYmluZChaVFJFRV9OT0RFQ1JFQVRFRCwgZnVuY3Rpb24gKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7DQoJCQl0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLm5vZGVDcmVhdGVkLCBbZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGVdKTsNCgkJfSk7DQoNCgkJdHJlZU9iai51bmJpbmQoWlRSRUVfQ0xJQ0spOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfQ0xJQ0ssIGZ1bmN0aW9uIChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkgew0KCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5jbGljaywgW2V2ZW50LCB0cmVlSWQsIHRyZWVOb2RlXSk7DQoJCX0pOw0KDQoJCXRyZWVPYmoudW5iaW5kKFpUUkVFX0NIQU5HRSk7DQoJCXRyZWVPYmouYmluZChaVFJFRV9DSEFOR0UsIGZ1bmN0aW9uIChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkgew0KCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5jaGFuZ2UsIFtldmVudCwgdHJlZUlkLCB0cmVlTm9kZV0pOw0KCQl9KTsNCg0KCQl0cmVlT2JqLnVuYmluZChaVFJFRV9SRU5BTUUpOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfUkVOQU1FLCBmdW5jdGlvbiAoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHsNCgkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2sucmVuYW1lLCBbZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGVdKTsNCgkJfSk7DQoNCgkJdHJlZU9iai51bmJpbmQoWlRSRUVfUkVNT1ZFKTsNCgkJdHJlZU9iai5iaW5kKFpUUkVFX1JFTU9WRSwgZnVuY3Rpb24gKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7DQoJCQl0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLnJlbW92ZSwgW2V2ZW50LCB0cmVlSWQsIHRyZWVOb2RlXSk7DQoJCX0pOw0KDQoJCXRyZWVPYmoudW5iaW5kKFpUUkVFX0RSQUcpOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfRFJBRywgZnVuY3Rpb24gKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7DQoJCQl0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmRyYWcsIFtldmVudCwgdHJlZUlkLCB0cmVlTm9kZV0pOw0KCQl9KTsNCg0KCQl0cmVlT2JqLnVuYmluZChaVFJFRV9EUk9QKTsNCgkJdHJlZU9iai5iaW5kKFpUUkVFX0RST1AsIGZ1bmN0aW9uIChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgdGFyZ2V0Tm9kZSwgbW92ZVR5cGUpIHsNCgkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suZHJvcCwgW2V2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCB0YXJnZXROb2RlLCBtb3ZlVHlwZV0pOw0KCQl9KTsNCg0KCQl0cmVlT2JqLnVuYmluZChaVFJFRV9FWFBBTkQpOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfRVhQQU5ELCBmdW5jdGlvbiAoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHsNCgkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suZXhwYW5kLCBbZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGVdKTsNCgkJfSk7DQoNCgkJdHJlZU9iai51bmJpbmQoWlRSRUVfQ09MTEFQU0UpOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfQ09MTEFQU0UsIGZ1bmN0aW9uIChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkgew0KCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5jb2xsYXBzZSwgW2V2ZW50LCB0cmVlSWQsIHRyZWVOb2RlXSk7DQoJCX0pOw0KDQoJCXRyZWVPYmoudW5iaW5kKFpUUkVFX0FTWU5DX1NVQ0NFU1MpOw0KCQl0cmVlT2JqLmJpbmQoWlRSRUVfQVNZTkNfU1VDQ0VTUywgZnVuY3Rpb24gKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCBtc2cpIHsNCgkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYXN5bmNTdWNjZXNzLCBbZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZ10pOw0KCQl9KTsNCg0KCQl0cmVlT2JqLnVuYmluZChaVFJFRV9BU1lOQ19FUlJPUik7DQoJCXRyZWVPYmouYmluZChaVFJFRV9BU1lOQ19FUlJPUiwgZnVuY3Rpb24gKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCBYTUxIdHRwUmVxdWVzdCwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHsNCgkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYXN5bmNFcnJvciwgW2V2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCBYTUxIdHRwUmVxdWVzdCwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd25dKTsNCgkJfSk7DQoJfQ0KDQoJLy/liJ3lp4vljJblubbmmL7npLroioLngrlKc29u5a+56LGhDQoJZnVuY3Rpb24gaW5pdFRyZWVOb2RlcyhzZXR0aW5nLCBsZXZlbCwgdHJlZU5vZGVzLCBwYXJlbnROb2RlKSB7DQoJCWlmICghdHJlZU5vZGVzKSByZXR1cm47DQoNCgkJdmFyIHpUcmVlSHRtbCA9IGFwcGVuZFRyZWVOb2RlcyhzZXR0aW5nLCBsZXZlbCwgdHJlZU5vZGVzLCBwYXJlbnROb2RlKTsNCgkJaWYgKCFwYXJlbnROb2RlKSB7DQoJCQlzZXR0aW5nLnRyZWVPYmouYXBwZW5kKHpUcmVlSHRtbC5qb2luKCcnKSk7DQoJCX0gZWxzZSB7DQoJCQkkKCIjIiArIHBhcmVudE5vZGUudElkICsgSURNYXJrX1VsKS5hcHBlbmQoelRyZWVIdG1sLmpvaW4oJycpKTsNCgkJfQ0KCQlyZXBhaXJQYXJlbnRDaGtDbGFzc1dpdGhTZWxmKHNldHRpbmcsIHBhcmVudE5vZGUpOw0KCQljcmVhdGVDYWxsYmFjayhzZXR0aW5nLCB0cmVlTm9kZXMpOw0KCX0NCg0KCWZ1bmN0aW9uIGNyZWF0ZUNhbGxiYWNrKHNldHRpbmcsIHRyZWVOb2Rlcykgew0KCQlmb3IgKHZhciBpID0gMCwgbCA9IHRyZWVOb2Rlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCXZhciBub2RlID0gdHJlZU5vZGVzW2ldOw0KCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5hZGREaXlEb20sIFtzZXR0aW5nLnRyZWVPYmpJZCwgbm9kZV0pOw0KCQkJLy/op6blj5Fub2RlQ3JlYXRlZOS6i+S7tg0KCQkJc2V0dGluZy50cmVlT2JqLnRyaWdnZXIoWlRSRUVfTk9ERUNSRUFURUQsIFtzZXR0aW5nLnRyZWVPYmpJZCwgbm9kZV0pOw0KCQkJaWYgKG5vZGVbc2V0dGluZy5ub2Rlc0NvbF0gJiYgbm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPiAwKSB7DQoJCQkJY3JlYXRlQ2FsbGJhY2soc2V0dGluZywgbm9kZVtzZXR0aW5nLm5vZGVzQ29sXSwgbm9kZSk7DQoJCQl9DQoJCX0NCgl9DQoNCglmdW5jdGlvbiBhcHBlbmRUcmVlTm9kZXMoc2V0dGluZywgbGV2ZWwsIHRyZWVOb2RlcywgcGFyZW50Tm9kZSkgew0KCQlpZiAoIXRyZWVOb2RlcykgcmV0dXJuIFtdOw0KCQl2YXIgaHRtbCA9IFtdOw0KCQlmb3IgKHZhciBpID0gMCwgbCA9IHRyZWVOb2Rlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCXZhciBub2RlID0gdHJlZU5vZGVzW2ldOw0KCQkJbm9kZS5sZXZlbCA9IGxldmVsOw0KCQkJbm9kZS50SWQgPSBzZXR0aW5nLnRyZWVPYmpJZCArICJfIiArICgrK3pUcmVlSWQpOw0KCQkJbm9kZS5wYXJlbnROb2RlID0gcGFyZW50Tm9kZTsNCgkJCW5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA9ICEhbm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdOw0KCQkJbm9kZS5jaGVja2VkT2xkID0gbm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdOw0KCQkJbm9kZS5jaGVja19Gb2N1cyA9IGZhbHNlOw0KCQkJbm9kZS5jaGVja19UcnVlX0Z1bGwgPSB0cnVlOw0KCQkJbm9kZS5jaGVja19GYWxzZV9GdWxsID0gdHJ1ZTsNCgkJCW5vZGUuZWRpdE5hbWVTdGF0dXMgPSBmYWxzZTsNCgkJCW5vZGUuaXNBamF4aW5nID0gbnVsbDsNCgkJCWFkZENhY2hlKHNldHRpbmcsIG5vZGUpOw0KCQkJZml4UGFyZW50S2V5VmFsdWUoc2V0dGluZywgbm9kZSk7DQoNCgkJCXZhciB0bXBQYXJlbnROb2RlID0gKHBhcmVudE5vZGUpID8gcGFyZW50Tm9kZTogc2V0dGluZy5yb290Ow0KCQkJLy/lhYHorrjlnKjpnZ7nqbroioLngrnkuIrlop7liqDoioLngrkNCgkJCW5vZGUuaXNGaXJzdE5vZGUgPSAodG1wUGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPT0gdHJlZU5vZGVzLmxlbmd0aCkgJiYgKGkgPT0gMCk7DQoJCQlub2RlLmlzTGFzdE5vZGUgPSAoaSA9PSAodHJlZU5vZGVzLmxlbmd0aCAtIDEpKTsNCg0KCQkJaWYgKG5vZGVbc2V0dGluZy5ub2Rlc0NvbF0gJiYgbm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPiAwKSB7DQoJCQkJbm9kZS5vcGVuID0gKG5vZGUub3BlbikgPyB0cnVlOiBmYWxzZTsNCgkJCQlub2RlLmlzUGFyZW50ID0gdHJ1ZTsNCgkJCX0gZWxzZSB7DQoJCQkJbm9kZS5pc1BhcmVudCA9IChub2RlLmlzUGFyZW50KSA/IHRydWU6IGZhbHNlOw0KCQkJfQ0KDQoJCQl2YXIgdXJsID0gbWFrZU5vZGVVcmwoc2V0dGluZywgbm9kZSk7DQoJCQl2YXIgZm9udGNzcyA9IG1ha2VOb2RlRm9udENzcyhzZXR0aW5nLCBub2RlKTsNCgkJCXZhciBmb250U3R5bGUgPSBbXTsNCgkJCWZvciAodmFyIGYgaW4gZm9udGNzcykgew0KCQkJCWZvbnRTdHlsZS5wdXNoKGYsICI6IiwgZm9udGNzc1tmXSwgIjsiKTsNCgkJCX0NCg0KCQkJdmFyIGNoaWxkSHRtbCA9IFtdOw0KCQkJaWYgKG5vZGVbc2V0dGluZy5ub2Rlc0NvbF0gJiYgbm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPiAwKSB7DQoJCQkJY2hpbGRIdG1sID0gYXBwZW5kVHJlZU5vZGVzKHNldHRpbmcsIGxldmVsICsgMSwgbm9kZVtzZXR0aW5nLm5vZGVzQ29sXSwgbm9kZSk7DQoJCQl9DQoJCQlodG1sLnB1c2goIjxsaSBpZD0nIiwgbm9kZS50SWQsICInIHRyZWVub2RlPiIsDQoJCQkJIjxidXR0b24gdHlwZT0nYnV0dG9uJyBpZD0nIiwgbm9kZS50SWQsIElETWFya19Td2l0Y2gsDQoJCQkJIicgdGl0bGU9JycgY2xhc3M9JyIsIG1ha2VOb2RlTGluZUNsYXNzKHNldHRpbmcsIG5vZGUpLCAiJyB0cmVlTm9kZSIsIElETWFya19Td2l0Y2gsIiBvbmZvY3VzPSd0aGlzLmJsdXIoKTsnPjwvYnV0dG9uPiIpOw0KCQkJaWYgKHNldHRpbmcuY2hlY2thYmxlKSB7DQoJCQkJbWFrZUNoa0ZsYWcoc2V0dGluZywgbm9kZSk7DQoJCQkJaWYgKHNldHRpbmcuY2hlY2tTdHlsZSA9PSBDaGVja19TdHlsZV9SYWRpbyAmJiBzZXR0aW5nLmNoZWNrUmFkaW9UeXBlID09IFJhZGlvX1R5cGVfQWxsICYmIG5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSApIHsNCgkJCQkJc2V0dGluZy5jaGVja1JhZGlvQ2hlY2tlZExpc3QgPSBzZXR0aW5nLmNoZWNrUmFkaW9DaGVja2VkTGlzdC5jb25jYXQoW25vZGVdKTsNCgkJCQl9DQoJCQkJaHRtbC5wdXNoKCI8YnV0dG9uIHR5cGU9J2J1dHRvbicgSUQ9JyIsIG5vZGUudElkLCBJRE1hcmtfQ2hlY2ssICInIGNsYXNzPSciLCBtYWtlQ2hrQ2xhc3Moc2V0dGluZywgbm9kZSksICInIHRyZWVOb2RlIiwgSURNYXJrX0NoZWNrLCIgb25mb2N1cz0ndGhpcy5ibHVyKCk7JyAiLChub2RlLm5vY2hlY2sgPT09IHRydWU/InN0eWxlPSdkaXNwbGF5Om5vbmU7JyI6IiIpLCI+PC9idXR0b24+Iik7DQoJCQl9DQogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZU5hbWUgPSBub2RlW3NldHRpbmcubmFtZUNvbF0ucmVwbGFjZSgvJi9nLCcmYW1wOycpLnJlcGxhY2UoLzwvZywnJmx0OycpLnJlcGxhY2UoLz4vZywnJmd0OycpOw0KCQkJaHRtbC5wdXNoKCI8YSBpZD0nIiwgbm9kZS50SWQsIElETWFya19BLCAiJyB0cmVlTm9kZSIsIElETWFya19BLCIgb25jbGljaz1cIiIsIChub2RlLmNsaWNrIHx8ICcnKSwNCgkJCQkiXCIgIiwgKCh1cmwgIT0gbnVsbCAmJiB1cmwubGVuZ3RoID4gMCkgPyAiaHJlZj0nIiArIHVybCArICInIiA6ICIiKSwgIiB0YXJnZXQ9JyIsbWFrZU5vZGVUYXJnZXQobm9kZSksIicgc3R5bGU9JyIsIGZvbnRTdHlsZS5qb2luKCcnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIicgdGl0bGU9JyIsbm9kZU5hbWUrJyMnK25vZGUuaWQsDQoJCQkJIic+PGJ1dHRvbiB0eXBlPSdidXR0b24nIGlkPSciLCBub2RlLnRJZCwgSURNYXJrX0ljb24sDQoJCQkJIicgdGl0bGU9JycgdHJlZU5vZGUiLCBJRE1hcmtfSWNvbiwiIG9uZm9jdXM9J3RoaXMuYmx1cigpOycgY2xhc3M9JyIsIG1ha2VOb2RlSWNvQ2xhc3Moc2V0dGluZywgbm9kZSksICInIHN0eWxlPSciLCBtYWtlTm9kZUljb1N0eWxlKHNldHRpbmcsIG5vZGUpLCAiJz48L2J1dHRvbj48c3BhbiBpZD0nIiwgbm9kZS50SWQsIElETWFya19TcGFuLA0KCQkJCSInPiIsbm9kZU5hbWUsIjwvc3Bhbj48L2E+PHVsIGlkPSciLCBub2RlLnRJZCwgSURNYXJrX1VsLCAiJyBjbGFzcz0nIiwgbWFrZVVsTGluZUNsYXNzKHNldHRpbmcsIG5vZGUpLCAiJyBzdHlsZT0nZGlzcGxheToiLCAobm9kZS5vcGVuID8gImJsb2NrIjogIm5vbmUiKSwiJz4iKTsNCgkJCWh0bWwucHVzaChjaGlsZEh0bWwuam9pbignJykpOw0KCQkJaHRtbC5wdXNoKCI8L3VsPjwvbGk+Iik7DQoJCX0NCgkJcmV0dXJuIGh0bWw7DQoJfQ0KDQoJZnVuY3Rpb24gZXZlbnRQcm94eShldmVudCkgew0KCQl2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0Ow0KCQl2YXIgcmVsYXRlZFRhcmdldCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7DQoJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQl2YXIgdElkID0gIiI7DQoJCXZhciBjaGlsZEV2ZW50VHlwZSA9ICIiLCBtYWluRXZlbnRUeXBlID0gIiI7DQoJCXZhciB0bXAgPSBudWxsOw0KDQoJCWlmICh0b29scy5lcXMoZXZlbnQudHlwZSwgIm1vdXNlb3ZlciIpKSB7DQoJCQlpZiAoc2V0dGluZy5jaGVja2FibGUgJiYgdG9vbHMuZXFzKHRhcmdldC50YWdOYW1lLCAiYnV0dG9uIikgJiYgdGFyZ2V0LmdldEF0dHJpYnV0ZSgidHJlZU5vZGUiK0lETWFya19DaGVjaykgIT09IG51bGwpIHsNCgkJCQl0SWQgPSB0YXJnZXQucGFyZW50Tm9kZS5pZDsNCgkJCQljaGlsZEV2ZW50VHlwZSA9ICJtb3VzZW92ZXJDaGVjayI7DQoJCQl9IGVsc2Ugew0KCQkJCXRtcCA9IHRvb2xzLmdldE1Eb20oc2V0dGluZywgdGFyZ2V0LCBbe3RhZ05hbWU6ImEiLCBhdHRyTmFtZToidHJlZU5vZGUiK0lETWFya19BfV0pOw0KCQkJCWlmICh0bXApIHsNCgkJCQkJdElkID0gdG1wLnBhcmVudE5vZGUuaWQ7DQoJCQkJCWNoaWxkRXZlbnRUeXBlID0gImhvdmVyT3Zlck5vZGUiOw0KCQkJCX0NCgkJCX0NCgkJfSBlbHNlIGlmICh0b29scy5lcXMoZXZlbnQudHlwZSwgIm1vdXNlb3V0IikpIHsNCgkJCWlmIChzZXR0aW5nLmNoZWNrYWJsZSAmJiB0b29scy5lcXModGFyZ2V0LnRhZ05hbWUsICJidXR0b24iKSAmJiB0YXJnZXQuZ2V0QXR0cmlidXRlKCJ0cmVlTm9kZSIrSURNYXJrX0NoZWNrKSAhPT0gbnVsbCkgew0KCQkJCXRJZCA9IHRhcmdldC5wYXJlbnROb2RlLmlkOw0KCQkJCWNoaWxkRXZlbnRUeXBlID0gIm1vdXNlb3V0Q2hlY2siOw0KCQkJfSBlbHNlIHsNCgkJCQl0bXAgPSB0b29scy5nZXRNRG9tKHNldHRpbmcsIHJlbGF0ZWRUYXJnZXQsIFt7dGFnTmFtZToiYSIsIGF0dHJOYW1lOiJ0cmVlTm9kZSIrSURNYXJrX0F9XSk7DQoJCQkJaWYgKCF0bXApIHsNCgkJCQkJdElkID0gInJlbW92ZSI7DQoJCQkJCWNoaWxkRXZlbnRUeXBlID0gImhvdmVyT3V0Tm9kZSI7DQoJCQkJfQ0KCQkJfQ0KCQl9IGVsc2UgaWYgKHRvb2xzLmVxcyhldmVudC50eXBlLCAibW91c2Vkb3duIikpIHsNCgkJCW1haW5FdmVudFR5cGUgPSAibW91c2Vkb3duIjsNCgkJCXRtcCA9IHRvb2xzLmdldE1Eb20oc2V0dGluZywgdGFyZ2V0LCBbe3RhZ05hbWU6ImEiLCBhdHRyTmFtZToidHJlZU5vZGUiK0lETWFya19BfV0pOw0KCQkJaWYgKHRtcCkgew0KCQkJCXRJZCA9IHRtcC5wYXJlbnROb2RlLmlkOw0KCQkJCWNoaWxkRXZlbnRUeXBlID0gIm1vdXNlZG93bk5vZGUiOw0KCQkJfQ0KCQl9IGVsc2UgaWYgKHRvb2xzLmVxcyhldmVudC50eXBlLCAibW91c2V1cCIpKSB7DQoJCQltYWluRXZlbnRUeXBlID0gIm1vdXNldXAiOw0KCQkJdG1wID0gdG9vbHMuZ2V0TURvbShzZXR0aW5nLCB0YXJnZXQsIFt7dGFnTmFtZToiYSIsIGF0dHJOYW1lOiJ0cmVlTm9kZSIrSURNYXJrX0F9XSk7DQoJCQlpZiAodG1wKSB7dElkID0gdG1wLnBhcmVudE5vZGUuaWQ7fQ0KCQl9IGVsc2UgaWYgKHRvb2xzLmVxcyhldmVudC50eXBlLCAiY29udGV4dG1lbnUiKSkgew0KCQkJbWFpbkV2ZW50VHlwZSA9ICJjb250ZXh0bWVudSI7DQoJCQl0bXAgPSB0b29scy5nZXRNRG9tKHNldHRpbmcsIHRhcmdldCwgW3t0YWdOYW1lOiJhIiwgYXR0ck5hbWU6InRyZWVOb2RlIitJRE1hcmtfQX1dKTsNCgkJCWlmICh0bXApIHt0SWQgPSB0bXAucGFyZW50Tm9kZS5pZDt9DQoJCX0gZWxzZSBpZiAodG9vbHMuZXFzKGV2ZW50LnR5cGUsICJjbGljayIpKSB7DQoJCQlpZiAodG9vbHMuZXFzKHRhcmdldC50YWdOYW1lLCAiYnV0dG9uIikgJiYgdGFyZ2V0LmdldEF0dHJpYnV0ZSgidHJlZU5vZGUiK0lETWFya19Td2l0Y2gpICE9PSBudWxsKSB7DQoJCQkJdElkID0gdGFyZ2V0LnBhcmVudE5vZGUuaWQ7DQoJCQkJY2hpbGRFdmVudFR5cGUgPSAic3dpdGNoTm9kZSI7DQoJCQl9IGVsc2UgaWYgKHNldHRpbmcuY2hlY2thYmxlICYmIHRvb2xzLmVxcyh0YXJnZXQudGFnTmFtZSwgImJ1dHRvbiIpICYmIHRhcmdldC5nZXRBdHRyaWJ1dGUoInRyZWVOb2RlIitJRE1hcmtfQ2hlY2spICE9PSBudWxsKSB7DQoJCQkJdElkID0gdGFyZ2V0LnBhcmVudE5vZGUuaWQ7DQoJCQkJY2hpbGRFdmVudFR5cGUgPSAiY2hlY2tOb2RlIjsNCgkJCX0gZWxzZSB7DQoJCQkJdG1wID0gdG9vbHMuZ2V0TURvbShzZXR0aW5nLCB0YXJnZXQsIFt7dGFnTmFtZToiYSIsIGF0dHJOYW1lOiJ0cmVlTm9kZSIrSURNYXJrX0F9XSk7DQoJCQkJaWYgKHRtcCkgew0KCQkJCQl0SWQgPSB0bXAucGFyZW50Tm9kZS5pZDsNCgkJCQkJY2hpbGRFdmVudFR5cGUgPSAiY2xpY2tOb2RlIjsNCgkJCQl9DQoJCQl9DQoJCX0gZWxzZSBpZiAodG9vbHMuZXFzKGV2ZW50LnR5cGUsICJkYmxjbGljayIpKSB7DQoJCQltYWluRXZlbnRUeXBlID0gImRibGNsaWNrIjsNCgkJCXRtcCA9IHRvb2xzLmdldE1Eb20oc2V0dGluZywgdGFyZ2V0LCBbe3RhZ05hbWU6ImEiLCBhdHRyTmFtZToidHJlZU5vZGUiK0lETWFya19BfV0pOw0KCQkJaWYgKHRtcCkgew0KCQkJCXRJZCA9IHRtcC5wYXJlbnROb2RlLmlkOw0KCQkJCWNoaWxkRXZlbnRUeXBlID0gInN3aXRjaE5vZGUiOw0KCQkJfQ0KCQl9DQoNCgkJaWYgKHRJZC5sZW5ndGg+MCB8fCBtYWluRXZlbnRUeXBlLmxlbmd0aD4wKSB7DQoJCQlpZiAoY2hpbGRFdmVudFR5cGUhPSJob3Zlck92ZXJOb2RlIiAmJiBjaGlsZEV2ZW50VHlwZSAhPSAiaG92ZXJPdXROb2RlIg0KCQkJCSYmIGNoaWxkRXZlbnRUeXBlIT0ibW91c2VvdmVyQ2hlY2siICYmIGNoaWxkRXZlbnRUeXBlICE9ICJtb3VzZW91dENoZWNrIg0KCQkJCSYmIHRhcmdldC5nZXRBdHRyaWJ1dGUoInRyZWVOb2RlIitJRE1hcmtfSW5wdXQpID09PSBudWxsDQoJCQkJJiYgIXN0LmNoZWNrRXZlbnQoc2V0dGluZykpIHJldHVybiBmYWxzZTsNCgkJfQ0KCQlpZiAodElkLmxlbmd0aD4wKSB7DQoJCQkvLwnnvJbovpHmoYZUZXh054q25oCB5LiLIOWFgeiuuOmAieaLqeaWh+acrA0KCQkJaWYgKCEoc2V0dGluZy5jdXJUcmVlTm9kZSAmJiBzZXR0aW5nLmN1clRyZWVOb2RlLmVkaXROYW1lU3RhdHVzKSkgew0KCQkJCXRvb2xzLm5vU2VsKCk7DQoJCQl9DQoJCQlldmVudC5kYXRhLnRyZWVOb2RlID0gZ2V0VHJlZU5vZGVCeVRJZChzZXR0aW5nLCB0SWQpOw0KCQkJc3dpdGNoIChjaGlsZEV2ZW50VHlwZSkgew0KCQkJCWNhc2UgInN3aXRjaE5vZGUiIDoNCgkJCQkJaGFuZGxlci5vblN3aXRjaE5vZGUoZXZlbnQpOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICJjbGlja05vZGUiIDoNCgkJCQkJaGFuZGxlci5vbkNsaWNrTm9kZShldmVudCk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgImNoZWNrTm9kZSIgOg0KCQkJCQloYW5kbGVyLm9uQ2hlY2tOb2RlKGV2ZW50KTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAibW91c2VvdmVyQ2hlY2siIDoNCgkJCQkJaGFuZGxlci5vbk1vdXNlb3ZlckNoZWNrKGV2ZW50KTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAibW91c2VvdXRDaGVjayIgOg0KCQkJCQloYW5kbGVyLm9uTW91c2VvdXRDaGVjayhldmVudCk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgIm1vdXNlZG93bk5vZGUiIDoNCgkJCQkJaGFuZGxlci5vbk1vdXNlZG93bk5vZGUoZXZlbnQpOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICJob3Zlck92ZXJOb2RlIiA6DQoJCQkJCWhhbmRsZXIub25Ib3Zlck92ZXJOb2RlKGV2ZW50KTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAiaG92ZXJPdXROb2RlIiA6DQoJCQkJCWhhbmRsZXIub25Ib3Zlck91dE5vZGUoZXZlbnQpOw0KCQkJCQlicmVhazsNCgkJCX0NCgkJfSBlbHNlIHsNCgkJCWV2ZW50LmRhdGEudHJlZU5vZGUgPSBudWxsOw0KCQl9DQoJCXN3aXRjaCAobWFpbkV2ZW50VHlwZSkgew0KCQkJY2FzZSAibW91c2Vkb3duIiA6DQoJCQkJcmV0dXJuIGhhbmRsZXIub25aVHJlZU1vdXNlZG93bihldmVudCk7DQoJCQkJYnJlYWs7DQoJCQljYXNlICJtb3VzZXVwIiA6DQoJCQkJcmV0dXJuIGhhbmRsZXIub25aVHJlZU1vdXNldXAoZXZlbnQpOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSAiZGJsY2xpY2siIDoNCgkJCQlyZXR1cm4gaGFuZGxlci5vblpUcmVlRGJsY2xpY2soZXZlbnQpOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSAiY29udGV4dG1lbnUiIDoNCgkJCQlyZXR1cm4gaGFuZGxlci5vblpUcmVlQ29udGV4dG1lbnUoZXZlbnQpOw0KCQkJCWJyZWFrOw0KCQl9DQoJfQ0KDQoJdmFyIHRvb2xzID0gew0KCQllcXM6IGZ1bmN0aW9uKHN0cjEsIHN0cjIpIHsNCgkJCXJldHVybiBzdHIxLnRvTG93ZXJDYXNlKCkgPT09IHN0cjIudG9Mb3dlckNhc2UoKTsNCgkJfSwNCgkJaXNBcnJheTogZnVuY3Rpb24oYXJyKSB7DQoJCQlyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShhcnIpID09PSAiW29iamVjdCBBcnJheV0iOw0KCQl9LA0KCQlub1NlbDogZnVuY3Rpb24oKSB7DQoJCQkvL+mZpOaOiem7mOiupOS6i+S7tu+8jOmYsuatouaWh+acrOiiq+mAieaLqQ0KCQkJdHJ5IHsNCgkJCQl3aW5kb3cuZ2V0U2VsZWN0aW9uID8gd2luZG93LmdldFNlbGVjdGlvbigpLnJlbW92ZUFsbFJhbmdlcygpIDogZG9jdW1lbnQuc2VsZWN0aW9uLmVtcHR5KCk7DQoJCQl9IGNhdGNoKGUpe30NCgkJfSwNCgkJaW5wdXRGb2N1czogZnVuY3Rpb24oaW5wdXRPYmopIHsNCgkJCWlmIChpbnB1dE9iai5nZXQoMCkpIHsNCgkJCQlpbnB1dE9iai5mb2N1cygpOw0KCQkJCXNldEN1cnNvclBvc2l0aW9uKGlucHV0T2JqLmdldCgwKSwgaW5wdXRPYmoudmFsKCkubGVuZ3RoKTsNCgkJCX0NCgkJfSwNCgkJYXBwbHk6IGZ1bmN0aW9uKGZ1biwgcGFyYW0sIGRlZmF1bHRWYWx1ZSkgew0KCQkJaWYgKCh0eXBlb2YgZnVuKSA9PSAiZnVuY3Rpb24iKSB7DQoJCQkJcmV0dXJuIGZ1bi5hcHBseSh0b29scywgcGFyYW0pOw0KCQkJfQ0KCQkJcmV0dXJuIGRlZmF1bHRWYWx1ZTsNCgkJfSwNCgkJZ2V0QWJzOiBmdW5jdGlvbiAob2JqKSB7DQoJCQkvL+iOt+WPluWvueixoeeahOe7neWvueWdkOaghw0KCQkJb1JlY3QgPSBvYmouZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQoJCQlyZXR1cm4gW29SZWN0LmxlZnQsb1JlY3QudG9wXQ0KCQl9LA0KCQlnZXRNRG9tOiBmdW5jdGlvbiAoc2V0dGluZywgY3VyRG9tLCB0YXJnZXRFeHByKSB7DQoJCQlpZiAoIWN1ckRvbSkgcmV0dXJuIG51bGw7DQoJCQl3aGlsZSAoY3VyRG9tICYmIGN1ckRvbS5pZCAhPT0gc2V0dGluZy50cmVlT2JqSWQpIHsNCgkJCQlmb3IgKHZhciBpPTAsIGw9dGFyZ2V0RXhwci5sZW5ndGg7IGN1ckRvbS50YWdOYW1lICYmIGk8bDsgaSsrKSB7DQoJCQkJCWlmICh0b29scy5lcXMoY3VyRG9tLnRhZ05hbWUsIHRhcmdldEV4cHJbaV0udGFnTmFtZSkgJiYgY3VyRG9tLmdldEF0dHJpYnV0ZSh0YXJnZXRFeHByW2ldLmF0dHJOYW1lKSAhPT0gbnVsbCkgew0KCQkJCQkJcmV0dXJuIGN1ckRvbTsNCgkJCQkJfQ0KCQkJCX0NCgkJCQljdXJEb20gPSBjdXJEb20ucGFyZW50Tm9kZTsNCgkJCX0NCgkJCXJldHVybiBudWxsOw0KCQl9LA0KCQljbG9uZTogZnVuY3Rpb24gKGpzb25PYmopIHsNCgkJCXZhciBidWY7DQoJCQlpZiAoanNvbk9iaiBpbnN0YW5jZW9mIEFycmF5KSB7DQoJCQkJYnVmID0gW107DQoJCQkJdmFyIGkgPSBqc29uT2JqLmxlbmd0aDsNCgkJCQl3aGlsZSAoaS0tKSB7DQoJCQkJCWJ1ZltpXSA9IGFyZ3VtZW50cy5jYWxsZWUoanNvbk9ialtpXSk7DQoJCQkJfQ0KCQkJCXJldHVybiBidWY7DQoJCQl9ZWxzZSBpZiAodHlwZW9mIGpzb25PYmogPT0gImZ1bmN0aW9uIil7DQoJCQkJcmV0dXJuIGpzb25PYmo7DQoJCQl9ZWxzZSBpZiAoanNvbk9iaiBpbnN0YW5jZW9mIE9iamVjdCl7DQoJCQkJYnVmID0ge307DQoJCQkJZm9yICh2YXIgayBpbiBqc29uT2JqKSB7DQoJCQkJCWlmIChrIT0icGFyZW50Tm9kZSIpIHsNCgkJCQkJCWJ1ZltrXSA9IGFyZ3VtZW50cy5jYWxsZWUoanNvbk9ialtrXSk7DQoJCQkJCX0NCgkJCQl9DQoJCQkJcmV0dXJuIGJ1ZjsNCgkJCX1lbHNlew0KCQkJCXJldHVybiBqc29uT2JqOw0KCQkJfQ0KCQl9DQoJfTsNCg0KCXZhciBzdCA9IHsNCgkJY2hlY2tFdmVudDogZnVuY3Rpb24oc2V0dGluZykgew0KCQkJcmV0dXJuIHN0LmNoZWNrQ2FuY2VsUHJlRWRpdE5vZGUoc2V0dGluZyk7DQoJCX0sDQoJCS8v5Y+W5raI5LmL5YmN6YCJ5Lit6IqC54K554q25oCBDQoJCWNhbmNlbFByZVNlbGVjdGVkTm9kZTogZnVuY3Rpb24gKHNldHRpbmcpIHsNCgkJCWlmIChzZXR0aW5nLmN1clRyZWVOb2RlKSB7DQoJCQkJJCgiIyIgKyBzZXR0aW5nLmN1clRyZWVOb2RlLnRJZCArIElETWFya19BKS5yZW1vdmVDbGFzcyhDbGFzc19DdXJTZWxlY3RlZE5vZGUpOw0KCQkJCXNldE5vZGVOYW1lKHNldHRpbmcsIHNldHRpbmcuY3VyVHJlZU5vZGUpOw0KCQkJCXJlbW92ZVRyZWVEb20oc2V0dGluZywgc2V0dGluZy5jdXJUcmVlTm9kZSk7DQoJCQkJc2V0dGluZy5jdXJUcmVlTm9kZSA9IG51bGw7DQoJCQl9DQoJCX0sDQoJCS8v5qCh6aqM5Y+W5raI5LmL5YmN57yW6L6R6IqC54K554q25oCBDQoJCWNoZWNrQ2FuY2VsUHJlRWRpdE5vZGU6IGZ1bmN0aW9uIChzZXR0aW5nKSB7DQoJCQlpZiAoc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUpIHsNCgkJCQl2YXIgaW5wdXRPYmogPSBzZXR0aW5nLmN1ckVkaXRJbnB1dDsNCgkJCQlpZiAoIHRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suY29uZmlybVJlbmFtZSwgW3NldHRpbmcudHJlZU9iaklkLCBzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSwgaW5wdXRPYmoudmFsKCldLCB0cnVlKSA9PT0gZmFsc2UpIHsNCgkJCQkJc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUuZWRpdE5hbWVTdGF0dXMgPSB0cnVlOw0KCQkJCQl0b29scy5pbnB1dEZvY3VzKGlucHV0T2JqKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0NCgkJCX0NCgkJCXJldHVybiB0cnVlOw0KCQl9LA0KCQkvL+WPlua2iOS5i+WJjee8lui+keiKgueCueeKtuaAgQ0KCQljYW5jZWxQcmVFZGl0Tm9kZTogZnVuY3Rpb24gKHNldHRpbmcsIG5ld05hbWUpIHsNCgkJCWlmIChzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSkgew0KCQkJCXZhciBpbnB1dE9iaiA9ICQoIiMiICsgc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUudElkICsgSURNYXJrX0lucHV0KTsNCgkJCQlzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZVtzZXR0aW5nLm5hbWVDb2xdID0gbmV3TmFtZSA/IG5ld05hbWU6aW5wdXRPYmoudmFsKCk7DQoJCQkJLy/op6blj5FyZW5hbWXkuovku7YNCgkJCQlzZXR0aW5nLnRyZWVPYmoudHJpZ2dlcihaVFJFRV9SRU5BTUUsIFtzZXR0aW5nLnRyZWVPYmpJZCwgc2V0dGluZy5jdXJFZGl0VHJlZU5vZGVdKTsNCg0KCQkJCSQoIiMiICsgc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUudElkICsgSURNYXJrX0EpLnJlbW92ZUNsYXNzKENsYXNzX0N1clNlbGVjdGVkTm9kZV9FZGl0KTsNCgkJCQlpbnB1dE9iai51bmJpbmQoKTsNCgkJCQlzZXROb2RlTmFtZShzZXR0aW5nLCBzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSk7DQoJCQkJc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUuZWRpdE5hbWVTdGF0dXMgPSBmYWxzZTsNCgkJCQlzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSA9IG51bGw7DQoJCQkJc2V0dGluZy5jdXJFZGl0SW5wdXQgPSBudWxsOw0KCQkJfQ0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCgl9DQoNCgl2YXIgaGFuZGxlciA9IHsNCgkJLy/ngrnlh7vlsZXlvIDjgIHmipjlj6DoioLngrkNCgkJb25Td2l0Y2hOb2RlOiBmdW5jdGlvbiAoZXZlbnQpIHsNCgkJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQkJdmFyIHRyZWVOb2RlID0gZXZlbnQuZGF0YS50cmVlTm9kZTsNCg0KCQkJaWYgKHRyZWVOb2RlLm9wZW4pIHsNCgkJCQlpZiAodG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5iZWZvcmVDb2xsYXBzZSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0sIHRydWUpID09IGZhbHNlKSByZXR1cm47DQoJCQkJc2V0dGluZy5leHBhbmRUcmlnZ2VyRmxhZyA9IHRydWU7DQoJCQkJc3dpdGNoTm9kZShzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQl9IGVsc2Ugew0KCQkJCWlmICh0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmJlZm9yZUV4cGFuZCwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0sIHRydWUpID09IGZhbHNlKSByZXR1cm47DQoJCQkJc2V0dGluZy5leHBhbmRUcmlnZ2VyRmxhZyA9IHRydWU7DQoJCQkJc3dpdGNoTm9kZShzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQl9DQoJCX0sDQoJCW9uQ2xpY2tOb2RlOiBmdW5jdGlvbiAoZXZlbnQpIHsNCgkJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQkJdmFyIHRyZWVOb2RlID0gZXZlbnQuZGF0YS50cmVlTm9kZTsNCgkJCWlmICh0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmJlZm9yZUNsaWNrLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSwgdHJ1ZSkgPT0gZmFsc2UpIHJldHVybjsNCgkJCS8v6K6+572u6IqC54K55Li66YCJ5Lit54q25oCBDQoJCQlzZWxlY3ROb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCS8v6Kem5Y+RY2xpY2vkuovku7YNCgkJCXNldHRpbmcudHJlZU9iai50cmlnZ2VyKFpUUkVFX0NMSUNLLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCX0sDQoJCW9uQ2hlY2tOb2RlOiBmdW5jdGlvbiAoZXZlbnQpIHsNCgkJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQkJdmFyIHRyZWVOb2RlID0gZXZlbnQuZGF0YS50cmVlTm9kZTsNCgkJCWlmICh0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmJlZm9yZUNoYW5nZSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0sIHRydWUpID09IGZhbHNlKSByZXR1cm47DQoNCgkJCXRyZWVOb2RlW3NldHRpbmcuY2hlY2tlZENvbF0gPSAhdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXTsNCgkJCWNoZWNrTm9kZVJlbGF0aW9uKHNldHRpbmcsIHRyZWVOb2RlKTsNCg0KCQkJdmFyIGNoZWNrT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfQ2hlY2spOw0KCQkJc2V0Q2hrQ2xhc3Moc2V0dGluZywgY2hlY2tPYmosIHRyZWVOb2RlKTsNCgkJCXJlcGFpclBhcmVudENoa0NsYXNzV2l0aFNlbGYoc2V0dGluZywgdHJlZU5vZGUpOw0KDQoJCQkvL+inpuWPkSBDaGVja0JveCDngrnlh7vkuovku7YNCgkJCXNldHRpbmcudHJlZU9iai50cmlnZ2VyKFpUUkVFX0NIQU5HRSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0pOw0KCQl9LA0KCQlvbk1vdXNlb3ZlckNoZWNrOiBmdW5jdGlvbihldmVudCkgew0KCQkJdmFyIHNldHRpbmcgPSBzZXR0aW5nc1tldmVudC5kYXRhLnRyZWVPYmpJZF07DQoJCQl2YXIgdHJlZU5vZGUgPSBldmVudC5kYXRhLnRyZWVOb2RlOw0KCQkJdmFyIGNoZWNrT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfQ2hlY2spOw0KCQkJdHJlZU5vZGUuY2hlY2tib3hGb2N1cyA9IHRydWU7DQoJCQlzZXRDaGtDbGFzcyhzZXR0aW5nLCBjaGVja09iaiwgdHJlZU5vZGUpOw0KCQl9LA0KCQlvbk1vdXNlb3V0Q2hlY2s6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQl2YXIgc2V0dGluZyA9IHNldHRpbmdzW2V2ZW50LmRhdGEudHJlZU9iaklkXTsNCgkJCXZhciB0cmVlTm9kZSA9IGV2ZW50LmRhdGEudHJlZU5vZGU7DQoJCQl2YXIgY2hlY2tPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19DaGVjayk7DQoJCQl0cmVlTm9kZS5jaGVja2JveEZvY3VzID0gZmFsc2U7DQoJCQlzZXRDaGtDbGFzcyhzZXR0aW5nLCBjaGVja09iaiwgdHJlZU5vZGUpOw0KCQl9LA0KCQlvbk1vdXNlZG93bk5vZGU6IGZ1bmN0aW9uKGV2ZW50TW91c2VEb3duKSB7DQoJCQl2YXIgc2V0dGluZyA9IHNldHRpbmdzW2V2ZW50TW91c2VEb3duLmRhdGEudHJlZU9iaklkXTsNCgkJCXZhciB0cmVlTm9kZSA9IGV2ZW50TW91c2VEb3duLmRhdGEudHJlZU5vZGU7DQoJCQkvL+WPs+mUruOAgeemgeeUqOaLluaLveWKn+iDvSDkuI3og73mi5bmi70NCgkJCWlmIChldmVudE1vdXNlRG93bi5idXR0b24gPT0gMiB8fCAhc2V0dGluZy5lZGl0YWJsZSB8fCAoIXNldHRpbmcuZHJhZ0NvcHkgJiYgIXNldHRpbmcuZHJhZ01vdmUpKSByZXR1cm47DQoJCQkvL+e8lui+kei+k+WFpeahhuWGheS4jeiDveaLluaLveiKgueCuQ0KCQkJdmFyIHRhcmdldCA9IGV2ZW50TW91c2VEb3duLnRhcmdldDsNCgkJCWlmICh0cmVlTm9kZS5lZGl0TmFtZVN0YXR1cyAmJiB0b29scy5lcXModGFyZ2V0LnRhZ05hbWUsICJpbnB1dCIpICYmIHRhcmdldC5nZXRBdHRyaWJ1dGUoInRyZWVOb2RlIitJRE1hcmtfSW5wdXQpICE9PSBudWxsKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQl2YXIgZG9jID0gZG9jdW1lbnQ7DQoJCQl2YXIgY3VyTm9kZTsNCgkJCXZhciB0bXBBcnJvdzsNCgkJCXZhciB0bXBUYXJnZXQ7DQoJCQl2YXIgaXNPdGhlclRyZWUgPSBmYWxzZTsNCgkJCXZhciB0YXJnZXRTZXR0aW5nID0gc2V0dGluZzsNCgkJCXZhciBwcmVUbXBUYXJnZXROb2RlSWQgPSBudWxsOw0KCQkJdmFyIHByZVRtcE1vdmVUeXBlID0gbnVsbDsNCgkJCXZhciB0bXBUYXJnZXROb2RlSWQgPSBudWxsOw0KCQkJdmFyIG1vdmVUeXBlID0gTW92ZVR5cGVfSW5uZXI7DQoJCQl2YXIgbW91c2VEb3duWCA9IGV2ZW50TW91c2VEb3duLmNsaWVudFg7DQoJCQl2YXIgbW91c2VEb3duWSA9IGV2ZW50TW91c2VEb3duLmNsaWVudFk7DQoJCQl2YXIgc3RhcnRUaW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTsNCg0KCQkJJChkb2MpLm1vdXNlbW92ZShmdW5jdGlvbihldmVudCkgew0KCQkJCXRvb2xzLm5vU2VsKCk7DQoNCgkJCQkvL+mBv+WFjem8oOagh+ivr+aTjeS9nO+8jOWvueS6juesrOS4gOasoeenu+WKqOWwj+S6jk1pbk1vdmVTaXpl5pe277yM5LiN5byA5ZCv5ouW5ou95Yqf6IO9DQoJCQkJaWYgKHNldHRpbmcuZHJhZ1N0YXR1cyA9PSAwICYmIE1hdGguYWJzKG1vdXNlRG93blggLSBldmVudC5jbGllbnRYKSA8IE1pbk1vdmVTaXplDQoJCQkJCSYmIE1hdGguYWJzKG1vdXNlRG93blkgLSBldmVudC5jbGllbnRZKSA8IE1pbk1vdmVTaXplKSB7DQoJCQkJCXJldHVybiB0cnVlOw0KCQkJCX0NCg0KCQkJCSQoImJvZHkiKS5jc3MoImN1cnNvciIsICJwb2ludGVyIik7DQoNCgkJCQlpZiAoc2V0dGluZy5kcmFnU3RhdHVzID09IDAgJiYgdHJlZU5vZGUuaXNQYXJlbnQgJiYgdHJlZU5vZGUub3Blbikgew0KCQkJCQlleHBhbmRBbmRDb2xsYXBzZU5vZGUoc2V0dGluZywgdHJlZU5vZGUsICF0cmVlTm9kZS5vcGVuKTsNCgkJCQkJc2V0dGluZy5kcmFnTm9kZVNob3dCZWZvcmUgPSB0cnVlOw0KCQkJCX0NCg0KCQkJCWlmIChzZXR0aW5nLmRyYWdTdGF0dXMgPT0gMCkgew0KCQkJCQkvL+mBv+WFjWJlZm9yZURyYWcgYWxlcnTml7bvvIzlvpfliLDov5Tlm57lgLzkuYvliY3ku43og73mi5bmi73nmoRCdWcNCgkJCQkJc2V0dGluZy5kcmFnU3RhdHVzID0gLTE7DQoJCQkJCWlmICh0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmJlZm9yZURyYWcsIFtzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGVdLCB0cnVlKSA9PSBmYWxzZSkgcmV0dXJuIHRydWU7DQoNCgkJCQkJc2V0dGluZy5kcmFnU3RhdHVzID0gMTsNCgkJCQkJc2hvd0lmYW1lTWFzayh0cnVlKTsNCg0KCQkJCQkvL+iuvue9ruiKgueCueS4uumAieS4reeKtuaAgQ0KCQkJCQl0cmVlTm9kZS5lZGl0TmFtZVN0YXR1cyA9IGZhbHNlOw0KCQkJCQlzZWxlY3ROb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQkJcmVtb3ZlVHJlZURvbShzZXR0aW5nLCB0cmVlTm9kZSk7DQoNCgkJCQkJdmFyIHRtcE5vZGUgPSAkKCIjIiArIHRyZWVOb2RlLnRJZCkuY2xvbmUoKTsNCgkJCQkJdG1wTm9kZS5hdHRyKCJpZCIsIHRyZWVOb2RlLnRJZCArICJfdG1wIik7DQoJCQkJCXRtcE5vZGUuY3NzKCJwYWRkaW5nIiwgIjAiKTsNCgkJCQkJdG1wTm9kZS5jaGlsZHJlbigiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfQSkucmVtb3ZlQ2xhc3MoQ2xhc3NfQ3VyU2VsZWN0ZWROb2RlKTsNCgkJCQkJdG1wTm9kZS5jaGlsZHJlbigiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfVWwpLmNzcygiZGlzcGxheSIsICJub25lIik7DQoNCgkJCQkJY3VyTm9kZSA9ICQoIjx1bCBjbGFzcz0nelRyZWVEcmFnVUwnPjwvdWw+IikuYXBwZW5kKHRtcE5vZGUpOw0KCQkJCQljdXJOb2RlLmF0dHIoImlkIiwgdHJlZU5vZGUudElkICsgSURNYXJrX1VsICsgIl90bXAiKTsNCgkJCQkJY3VyTm9kZS5hZGRDbGFzcyhzZXR0aW5nLnRyZWVPYmouYXR0cigiY2xhc3MiKSk7DQoJCQkJCWN1ck5vZGUuYXBwZW5kVG8oImJvZHkiKTsNCg0KCQkJCQl0bXBBcnJvdyA9ICQoIjxidXR0b24gY2xhc3M9J3RtcHpUcmVlTW92ZV9hcnJvdyc+PC9idXR0b24+Iik7DQoJCQkJCXRtcEFycm93LmF0dHIoImlkIiwgInpUcmVlTW92ZV9hcnJvd190bXAiKTsNCgkJCQkJdG1wQXJyb3cuYXBwZW5kVG8oImJvZHkiKTsNCg0KCQkJCQkvL+inpuWPkSBEUkFHIOaLluaLveS6i+S7tu+8jOi/lOWbnuato+WcqOaLluaLveeahOa6kOaVsOaNruWvueixoQ0KCQkJCQlzZXR0aW5nLnRyZWVPYmoudHJpZ2dlcihaVFJFRV9EUkFHLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCQkJfQ0KDQoJCQkJaWYgKHNldHRpbmcuZHJhZ1N0YXR1cyA9PSAxICYmIHRtcEFycm93LmF0dHIoImlkIikgIT0gZXZlbnQudGFyZ2V0LmlkKSB7DQoJCQkJCWlmICh0bXBUYXJnZXQpIHsNCgkJCQkJCXRtcFRhcmdldC5yZW1vdmVDbGFzcyhDbGFzc19UbXBUYXJnZXRUcmVlKTsNCgkJCQkJCWlmICh0bXBUYXJnZXROb2RlSWQpICQoIiMiICsgdG1wVGFyZ2V0Tm9kZUlkICsgSURNYXJrX0EsIHRtcFRhcmdldCkucmVtb3ZlQ2xhc3MoQ2xhc3NfVG1wVGFyZ2V0Tm9kZSk7DQoJCQkJCX0NCgkJCQkJdG1wVGFyZ2V0ID0gbnVsbDsNCgkJCQkJdG1wVGFyZ2V0Tm9kZUlkID0gbnVsbDsNCg0KCQkJCQkvL+WIpOaWreaYr+WQpuS4jeWQjOeahOagkQ0KCQkJCQlpc090aGVyVHJlZSA9IGZhbHNlOw0KCQkJCQl0YXJnZXRTZXR0aW5nID0gc2V0dGluZzsNCgkJCQkJZm9yICh2YXIgcyBpbiBzZXR0aW5ncykgew0KCQkJCQkJaWYgKHNldHRpbmdzW3NdLmVkaXRhYmxlICYmIHNldHRpbmdzW3NdLnRyZWVPYmpJZCAhPSBzZXR0aW5nLnRyZWVPYmpJZA0KCQkJCQkJCSYmIChldmVudC50YXJnZXQuaWQgPT0gc2V0dGluZ3Nbc10udHJlZU9iaklkIHx8ICQoZXZlbnQudGFyZ2V0KS5wYXJlbnRzKCIjIiArIHNldHRpbmdzW3NdLnRyZWVPYmpJZCkubGVuZ3RoPjApKSB7DQoJCQkJCQkJaXNPdGhlclRyZWUgPSB0cnVlOw0KCQkJCQkJCXRhcmdldFNldHRpbmcgPSBzZXR0aW5nc1tzXTsNCgkJCQkJCX0NCgkJCQkJfQ0KDQoJCQkJCXZhciBkb2NTY3JvbGxUb3AgPSAkKGRvYykuc2Nyb2xsVG9wKCk7DQoJCQkJCXZhciBkb2NTY3JvbGxMZWZ0ID0gJChkb2MpLnNjcm9sbExlZnQoKTsNCgkJCQkJdmFyIHRyZWVPZmZzZXQgPSB0YXJnZXRTZXR0aW5nLnRyZWVPYmoub2Zmc2V0KCk7DQoJCQkJCXZhciBzY3JvbGxIZWlnaHQgPSB0YXJnZXRTZXR0aW5nLnRyZWVPYmouZ2V0KDApLnNjcm9sbEhlaWdodDsNCgkJCQkJdmFyIHNjcm9sbFdpZHRoID0gdGFyZ2V0U2V0dGluZy50cmVlT2JqLmdldCgwKS5zY3JvbGxXaWR0aDsNCgkJCQkJdmFyIGRUb3AgPSAoZXZlbnQuY2xpZW50WSArIGRvY1Njcm9sbFRvcCAtIHRyZWVPZmZzZXQudG9wKTsNCgkJCQkJdmFyIGRCb3R0b20gPSAodGFyZ2V0U2V0dGluZy50cmVlT2JqLmhlaWdodCgpICsgdHJlZU9mZnNldC50b3AgLSBldmVudC5jbGllbnRZIC0gZG9jU2Nyb2xsVG9wKTsNCgkJCQkJdmFyIGRMZWZ0ID0gKGV2ZW50LmNsaWVudFggKyBkb2NTY3JvbGxMZWZ0IC0gdHJlZU9mZnNldC5sZWZ0KTsNCgkJCQkJdmFyIGRSaWdodCA9ICh0YXJnZXRTZXR0aW5nLnRyZWVPYmoud2lkdGgoKSArIHRyZWVPZmZzZXQubGVmdCAtIGV2ZW50LmNsaWVudFggLSBkb2NTY3JvbGxMZWZ0KTsNCgkJCQkJdmFyIGlzVG9wID0gKGRUb3AgPCAxMCAmJiBkVG9wID4gLTUpOw0KCQkJCQl2YXIgaXNCb3R0b20gPSAoZEJvdHRvbSA8IDEwICYmIGRCb3R0b20gPiAtNSk7DQoJCQkJCXZhciBpc0xlZnQgPSAoZExlZnQgPCAxMCAmJiBkTGVmdCA+IC01KTsNCgkJCQkJdmFyIGlzUmlnaHQgPSAoZFJpZ2h0IDwgMTAgJiYgZFJpZ2h0ID4gLTUpOw0KCQkJCQl2YXIgaXNUcmVlVG9wID0gKGlzVG9wICYmIHRhcmdldFNldHRpbmcudHJlZU9iai5zY3JvbGxUb3AoKSA8PSAwKTsNCgkJCQkJdmFyIGlzVHJlZUJvdHRvbSA9IChpc0JvdHRvbSAmJiAodGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbFRvcCgpICsgdGFyZ2V0U2V0dGluZy50cmVlT2JqLmhlaWdodCgpKzEwKSA+PSBzY3JvbGxIZWlnaHQpOw0KCQkJCQl2YXIgaXNUcmVlTGVmdCA9IChpc0xlZnQgJiYgdGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbExlZnQoKSA8PSAwKTsNCgkJCQkJdmFyIGlzVHJlZVJpZ2h0ID0gKGlzUmlnaHQgJiYgKHRhcmdldFNldHRpbmcudHJlZU9iai5zY3JvbGxMZWZ0KCkgKyB0YXJnZXRTZXR0aW5nLnRyZWVPYmoud2lkdGgoKSsxMCkgPj0gc2Nyb2xsV2lkdGgpOw0KDQoJCQkJCWlmIChldmVudC50YXJnZXQuaWQgJiYgdGFyZ2V0U2V0dGluZy50cmVlT2JqLmZpbmQoIiMiICsgZXZlbnQudGFyZ2V0LmlkKS5sZW5ndGggPiAwKSB7DQoJCQkJCQkvL+S7u+aEj+iKgueCuSDnp7vliLAg5YW25LuW6IqC54K5DQoJCQkJCQl2YXIgdGFyZ2V0T2JqID0gZXZlbnQudGFyZ2V0Ow0KCQkJCQkJd2hpbGUgKHRhcmdldE9iaiAmJiB0YXJnZXRPYmoudGFnTmFtZSAmJiAhdG9vbHMuZXFzKHRhcmdldE9iai50YWdOYW1lLCAibGkiKSAmJiB0YXJnZXRPYmouaWQgIT0gdGFyZ2V0U2V0dGluZy50cmVlT2JqSWQpIHsNCgkJCQkJCQl0YXJnZXRPYmogPSB0YXJnZXRPYmoucGFyZW50Tm9kZTsNCgkJCQkJCX0NCg0KCQkJCQkJdmFyIGNhbk1vdmUgPSBmYWxzZTsNCgkJCQkJCS8v5aaC5p6c56e75Yiw6Ieq5bexIOaIluiAheiHquW3seeahOWtkOmbhu+8jOWImeS4jeiDveW9k+WBmuS4tOaXtuebruaghw0KCQkJCQkJaWYgKHRyZWVOb2RlLnBhcmVudE5vZGUgJiYgdGFyZ2V0T2JqLmlkICE9IHRyZWVOb2RlLnRJZCAmJiAkKCIjIiArIHRyZWVOb2RlLnRJZCkuZmluZCgiIyIgKyB0YXJnZXRPYmouaWQpLmxlbmd0aCA9PSAwKSB7DQoJCQkJCQkJLy/pnZ7moLnoioLngrnnp7vliqgNCgkJCQkJCQljYW5Nb3ZlID0gdHJ1ZTsNCgkJCQkJCX0gZWxzZSBpZiAodHJlZU5vZGUucGFyZW50Tm9kZSA9PSBudWxsICYmIHRhcmdldE9iai5pZCAhPSB0cmVlTm9kZS50SWQgJiYgJCgiIyIgKyB0cmVlTm9kZS50SWQpLmZpbmQoIiMiICsgdGFyZ2V0T2JqLmlkKS5sZW5ndGggPT0gMCkgew0KCQkJCQkJCS8v5qC56IqC54K556e75YqoDQoJCQkJCQkJY2FuTW92ZSA9IHRydWU7DQoJCQkJCQl9DQoJCQkJCQlpZiAoY2FuTW92ZSkgew0KCQkJCQkJCWlmIChldmVudC50YXJnZXQuaWQgJiYNCgkJCQkJCQkJKGV2ZW50LnRhcmdldC5pZCA9PSAodGFyZ2V0T2JqLmlkICsgSURNYXJrX0EpIHx8ICQoZXZlbnQudGFyZ2V0KS5wYXJlbnRzKCIjIiArIHRhcmdldE9iai5pZCArIElETWFya19BKS5sZW5ndGggPiAwKSkgew0KCQkJCQkJCQl0bXBUYXJnZXQgPSAkKHRhcmdldE9iaik7DQoJCQkJCQkJCXRtcFRhcmdldE5vZGVJZCA9IHRhcmdldE9iai5pZDsNCgkJCQkJCQl9DQoJCQkJCQl9DQoJCQkJCX0NCg0KCQkJCQkvL+ehruS/nem8oOagh+WcqHpUcmVl5YaF6YOoDQoJCQkJCWlmIChldmVudC50YXJnZXQuaWQgPT0gdGFyZ2V0U2V0dGluZy50cmVlT2JqSWQgfHwgJChldmVudC50YXJnZXQpLnBhcmVudHMoIiMiICsgdGFyZ2V0U2V0dGluZy50cmVlT2JqSWQpLmxlbmd0aD4wKSB7DQoJCQkJCQkvL+WPquacieenu+WKqOWIsHpUcmVl5a655Zmo55qE6L6557yY5omN566X56e75YiwIOague+8iOaOkumZpOagueiKgueCueWcqOacrOajteagkeWGheeahOenu+WKqO+8iQ0KCQkJCQkJaWYgKCF0bXBUYXJnZXQgJiYgKGlzVHJlZVRvcCB8fCBpc1RyZWVCb3R0b20gfHwgaXNUcmVlTGVmdCB8fCBpc1RyZWVSaWdodCkgJiYgKGlzT3RoZXJUcmVlIHx8ICghaXNPdGhlclRyZWUgJiYgdHJlZU5vZGUucGFyZW50Tm9kZSAhPSBudWxsKSkpIHsNCgkJCQkJCQl0bXBUYXJnZXQgPSB0YXJnZXRTZXR0aW5nLnRyZWVPYmo7DQoJCQkJCQkJdG1wVGFyZ2V0LmFkZENsYXNzKENsYXNzX1RtcFRhcmdldFRyZWUpOw0KCQkJCQkJfQ0KCQkJCQkJLy/mu5rliqjmnaHoh6rliqjmu5rliqgNCgkJCQkJCWlmIChpc1RvcCkgew0KCQkJCQkJCXRhcmdldFNldHRpbmcudHJlZU9iai5zY3JvbGxUb3AodGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbFRvcCgpLTEwKTsNCgkJCQkJCX0gZWxzZSBpZiAoaXNCb3R0b20pICB7DQoJCQkJCQkJdGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbFRvcCh0YXJnZXRTZXR0aW5nLnRyZWVPYmouc2Nyb2xsVG9wKCkrMTApOw0KCQkJCQkJfQ0KCQkJCQkJaWYgKGlzTGVmdCkgew0KCQkJCQkJCXRhcmdldFNldHRpbmcudHJlZU9iai5zY3JvbGxMZWZ0KHRhcmdldFNldHRpbmcudHJlZU9iai5zY3JvbGxMZWZ0KCktMTApOw0KCQkJCQkJfSBlbHNlIGlmIChpc1JpZ2h0KSB7DQoJCQkJCQkJdGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbExlZnQodGFyZ2V0U2V0dGluZy50cmVlT2JqLnNjcm9sbExlZnQoKSsxMCk7DQoJCQkJCQl9DQoJCQkJCQkvL+ebruagh+iKgueCueWcqOWPr+inhuWMuuWfn+W3puS+p++8jOiHquWKqOenu+WKqOaoquWQkea7muWKqOadoQ0KCQkJCQkJaWYgKHRtcFRhcmdldCAmJiB0bXBUYXJnZXQgIT0gdGFyZ2V0U2V0dGluZy50cmVlT2JqICYmIHRtcFRhcmdldC5vZmZzZXQoKS5sZWZ0IDwgdGFyZ2V0U2V0dGluZy50cmVlT2JqLm9mZnNldCgpLmxlZnQpIHsNCgkJCQkJCQl0YXJnZXRTZXR0aW5nLnRyZWVPYmouc2Nyb2xsTGVmdCh0YXJnZXRTZXR0aW5nLnRyZWVPYmouc2Nyb2xsTGVmdCgpKyB0bXBUYXJnZXQub2Zmc2V0KCkubGVmdCAtIHRhcmdldFNldHRpbmcudHJlZU9iai5vZmZzZXQoKS5sZWZ0KTsNCgkJCQkJCX0NCgkJCQkJfQ0KDQoJCQkJCWN1ck5vZGUuY3NzKHsNCgkJCQkJCSJ0b3AiOiAoZXZlbnQuY2xpZW50WSArIGRvY1Njcm9sbFRvcCArIDMpICsgInB4IiwNCgkJCQkJCSJsZWZ0IjogKGV2ZW50LmNsaWVudFggKyBkb2NTY3JvbGxMZWZ0ICsgMykgKyAicHgiDQoJCQkJCX0pOw0KDQoJCQkJCXZhciBkWCA9IDA7DQoJCQkJCXZhciBkWSA9IDA7DQoJCQkJCWlmICh0bXBUYXJnZXQgJiYgdG1wVGFyZ2V0LmF0dHIoImlkIikhPXRhcmdldFNldHRpbmcudHJlZU9iaklkKSB7DQoJCQkJCQl2YXIgdG1wVGFyZ2V0Tm9kZSA9IHRtcFRhcmdldE5vZGVJZCA9PSBudWxsID8gbnVsbDogZ2V0VHJlZU5vZGVCeVRJZCh0YXJnZXRTZXR0aW5nLCB0bXBUYXJnZXROb2RlSWQpOw0KCQkJCQkJdmFyIHRtcE5vZGVPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCk7DQoJCQkJCQl2YXIgaXNQcmV2ID0gKHRtcE5vZGVPYmoucHJldigpLmF0dHIoImlkIikgPT0gdG1wVGFyZ2V0Tm9kZUlkKSA7DQoJCQkJCQl2YXIgaXNOZXh0ID0gKHRtcE5vZGVPYmoubmV4dCgpLmF0dHIoImlkIikgPT0gdG1wVGFyZ2V0Tm9kZUlkKSA7DQoJCQkJCQl2YXIgaXNJbm5lciA9ICh0cmVlTm9kZS5wYXJlbnROb2RlICYmIHRyZWVOb2RlLnBhcmVudE5vZGUudElkID09IHRtcFRhcmdldE5vZGVJZCkgOw0KDQoJCQkJCQl2YXIgY2FuUHJldiA9ICFpc05leHQ7DQoJCQkJCQl2YXIgY2FuTmV4dCA9ICFpc1ByZXY7DQoJCQkJCQl2YXIgY2FuSW5uZXIgPSAhaXNJbm5lciAmJiAhKHRhcmdldFNldHRpbmcua2VlcExlYWYgJiYgIXRtcFRhcmdldE5vZGUuaXNQYXJlbnQpOw0KCQkJCQkJaWYgKCFjYW5QcmV2ICYmICFjYW5OZXh0ICYmICFjYW5Jbm5lcikgew0KCQkJCQkJCXRtcFRhcmdldCA9IG51bGw7DQoJCQkJCQkJdG1wVGFyZ2V0Tm9kZUlkID0gIiI7DQoJCQkJCQkJbW92ZVR5cGUgPSBNb3ZlVHlwZV9Jbm5lcjsNCgkJCQkJCQl0bXBBcnJvdy5jc3Moew0KCQkJCQkJCQkiZGlzcGxheSI6Im5vbmUiDQoJCQkJCQkJfSk7DQoJCQkJCQkJaWYgKHdpbmRvdy56VHJlZU1vdmVUaW1lcikgew0KCQkJCQkJCQljbGVhclRpbWVvdXQod2luZG93LnpUcmVlTW92ZVRpbWVyKTsNCgkJCQkJCQl9DQoJCQkJCQl9IGVsc2Ugew0KCQkJCQkJCXZhciB0bXBUYXJnZXRBID0gJCgiIyIgKyB0bXBUYXJnZXROb2RlSWQgKyBJRE1hcmtfQSwgdG1wVGFyZ2V0KTsNCgkJCQkJCQl0bXBUYXJnZXRBLmFkZENsYXNzKENsYXNzX1RtcFRhcmdldE5vZGUpOw0KDQoJCQkJCQkJdmFyIHByZXZQZXJjZW50ID0gY2FuUHJldiA/IChjYW5Jbm5lciA/IDAuMjUgOiAoY2FuTmV4dCA/IDAuNSA6IDEpICkgOiAtMTsNCgkJCQkJCQl2YXIgbmV4dFBlcmNlbnQgPSBjYW5OZXh0ID8gKGNhbklubmVyID8gMC43NSA6IChjYW5QcmV2ID8gMC41IDogMCkgKSA6IC0xOw0KCQkJCQkJCXZhciBkWV9wZXJjZW50ID0gKGV2ZW50LmNsaWVudFkgKyBkb2NTY3JvbGxUb3AgLSB0bXBUYXJnZXRBLm9mZnNldCgpLnRvcCkvdG1wVGFyZ2V0QS5oZWlnaHQoKTsNCgkJCQkJCQlpZiAoKHByZXZQZXJjZW50PT0xIHx8ZFlfcGVyY2VudDw9cHJldlBlcmNlbnQgJiYgZFlfcGVyY2VudD49LS4yKSAmJiBjYW5QcmV2KSB7DQoJCQkJCQkJCWRYID0gMSAtIHRtcEFycm93LndpZHRoKCk7DQoJCQkJCQkJCWRZID0gMCAtIHRtcEFycm93LmhlaWdodCgpLzI7DQoJCQkJCQkJCW1vdmVUeXBlID0gTW92ZVR5cGVfQmVmb3JlOw0KCQkJCQkJCX0gZWxzZSBpZiAoKG5leHRQZXJjZW50PT0wIHx8IGRZX3BlcmNlbnQ+PW5leHRQZXJjZW50ICYmIGRZX3BlcmNlbnQ8PTEuMikgJiYgY2FuTmV4dCkgew0KCQkJCQkJCQlkWCA9IDEgLSB0bXBBcnJvdy53aWR0aCgpOw0KCQkJCQkJCQlkWSA9IHRtcFRhcmdldEEuaGVpZ2h0KCkgLSB0bXBBcnJvdy5oZWlnaHQoKS8yOw0KCQkJCQkJCQltb3ZlVHlwZSA9IE1vdmVUeXBlX0FmdGVyOw0KCQkJCQkJCX1lbHNlIHsNCgkJCQkJCQkJZFggPSA1IC0gdG1wQXJyb3cud2lkdGgoKTsNCgkJCQkJCQkJZFkgPSAwOw0KCQkJCQkJCQltb3ZlVHlwZSA9IE1vdmVUeXBlX0lubmVyOw0KCQkJCQkJCX0NCgkJCQkJCQl0bXBBcnJvdy5jc3Moew0KCQkJCQkJCQkiZGlzcGxheSI6ImJsb2NrIiwNCgkJCQkJCQkJInRvcCI6ICh0bXBUYXJnZXRBLm9mZnNldCgpLnRvcCArIGRZKSArICJweCIsDQoJCQkJCQkJCSJsZWZ0IjogKHRtcFRhcmdldEEub2Zmc2V0KCkubGVmdCArIGRYKSArICJweCINCgkJCQkJCQl9KTsNCg0KCQkJCQkJCWlmIChwcmVUbXBUYXJnZXROb2RlSWQgIT0gdG1wVGFyZ2V0Tm9kZUlkIHx8IHByZVRtcE1vdmVUeXBlICE9IG1vdmVUeXBlKSB7DQoJCQkJCQkJCXN0YXJ0VGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7DQoJCQkJCQkJfQ0KCQkJCQkJCWlmIChtb3ZlVHlwZSA9PSBNb3ZlVHlwZV9Jbm5lcikgew0KCQkJCQkJCQl3aW5kb3cuelRyZWVNb3ZlVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgew0KCQkJCQkJCQkJaWYgKG1vdmVUeXBlICE9IE1vdmVUeXBlX0lubmVyKSByZXR1cm47DQoJCQkJCQkJCQl2YXIgdGFyZ2V0Tm9kZSA9IGdldFRyZWVOb2RlQnlUSWQodGFyZ2V0U2V0dGluZywgdG1wVGFyZ2V0Tm9kZUlkKTsNCgkJCQkJCQkJCWlmICh0YXJnZXROb2RlICYmIHRhcmdldE5vZGUuaXNQYXJlbnQgJiYgIXRhcmdldE5vZGUub3BlbiAmJiAobmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gc3RhcnRUaW1lID4gNTAwDQoJCQkJCQkJCQkJJiYgdG9vbHMuYXBwbHkodGFyZ2V0U2V0dGluZy5jYWxsYmFjay5jb25maXJtRHJhZ09wZW4sIFt0YXJnZXRTZXR0aW5nLnRyZWVPYmpJZCwgdGFyZ2V0Tm9kZV0sIHRydWUpKSB7DQoJCQkJCQkJCQkJc3dpdGNoTm9kZSh0YXJnZXRTZXR0aW5nLCB0YXJnZXROb2RlKTsNCgkJCQkJCQkJCX0NCgkJCQkJCQkJfSwgNjAwKTsNCgkJCQkJCQl9DQoJCQkJCQl9DQoJCQkJCX0gZWxzZSB7DQoJCQkJCQltb3ZlVHlwZSA9IE1vdmVUeXBlX0lubmVyOw0KCQkJCQkJdG1wQXJyb3cuY3NzKHsNCgkJCQkJCQkiZGlzcGxheSI6Im5vbmUiDQoJCQkJCQl9KTsNCgkJCQkJCWlmICh3aW5kb3cuelRyZWVNb3ZlVGltZXIpIHsNCgkJCQkJCQljbGVhclRpbWVvdXQod2luZG93LnpUcmVlTW92ZVRpbWVyKTsNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQlwcmVUbXBUYXJnZXROb2RlSWQgPSB0bXBUYXJnZXROb2RlSWQ7DQoJCQkJCXByZVRtcE1vdmVUeXBlID0gbW92ZVR5cGU7DQoJCQkJfQ0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0pOw0KDQoJCQkkKGRvYykubW91c2V1cChmdW5jdGlvbihldmVudCkgew0KCQkJCWlmICh3aW5kb3cuelRyZWVNb3ZlVGltZXIpIHsNCgkJCQkJY2xlYXJUaW1lb3V0KHdpbmRvdy56VHJlZU1vdmVUaW1lcik7DQoJCQkJfQ0KCQkJCXByZVRtcFRhcmdldE5vZGVJZCA9IG51bGw7DQoJCQkJcHJlVG1wTW92ZVR5cGUgPSBudWxsOw0KCQkJCSQoZG9jKS51bmJpbmQoIm1vdXNlbW92ZSIpOw0KCQkJCSQoZG9jKS51bmJpbmQoIm1vdXNldXAiKTsNCgkJCQkkKCJib2R5IikuY3NzKCJjdXJzb3IiLCAiYXV0byIpOw0KCQkJCWlmICh0bXBUYXJnZXQpIHsNCgkJCQkJdG1wVGFyZ2V0LnJlbW92ZUNsYXNzKENsYXNzX1RtcFRhcmdldFRyZWUpOw0KCQkJCQlpZiAodG1wVGFyZ2V0Tm9kZUlkKSAkKCIjIiArIHRtcFRhcmdldE5vZGVJZCArIElETWFya19BLCB0bXBUYXJnZXQpLnJlbW92ZUNsYXNzKENsYXNzX1RtcFRhcmdldE5vZGUpOw0KCQkJCX0NCgkJCQlzaG93SWZhbWVNYXNrKGZhbHNlKTsNCg0KCQkJCWlmIChzZXR0aW5nLmRyYWdTdGF0dXMgPT0gMCkgcmV0dXJuOw0KCQkJCXNldHRpbmcuZHJhZ1N0YXR1cyA9IDA7DQoNCgkJCQlpZiAodHJlZU5vZGUuaXNQYXJlbnQgJiYgc2V0dGluZy5kcmFnTm9kZVNob3dCZWZvcmUgJiYgIXRyZWVOb2RlLm9wZW4pIHsNCgkJCQkJZXhwYW5kQW5kQ29sbGFwc2VOb2RlKHNldHRpbmcsIHRyZWVOb2RlLCAhdHJlZU5vZGUub3Blbik7DQoJCQkJCXNldHRpbmcuZHJhZ05vZGVTaG93QmVmb3JlID0gZmFsc2U7DQoJCQkJfQ0KDQoJCQkJaWYgKGN1ck5vZGUpIGN1ck5vZGUucmVtb3ZlKCk7DQoJCQkJaWYgKHRtcEFycm93KSB0bXBBcnJvdy5yZW1vdmUoKTsNCg0KCQkJCS8v5pi+56S65qCR5LiKIOenu+WKqOWQjueahOiKgueCuQ0KCQkJCWlmICh0bXBUYXJnZXQgJiYgdG1wVGFyZ2V0Tm9kZUlkICYmIHRyZWVOb2RlLnBhcmVudE5vZGUgJiYgdG1wVGFyZ2V0Tm9kZUlkPT10cmVlTm9kZS5wYXJlbnROb2RlLnRJZCAmJiBtb3ZlVHlwZSA9PSBNb3ZlVHlwZV9Jbm5lcikgew0KCQkJCQl0bXBUYXJnZXQgPSBudWxsOw0KCQkJCX0NCgkJCQlpZiAodG1wVGFyZ2V0KSB7DQoJCQkJCXZhciBkcmFnVGFyZ2V0Tm9kZSA9IHRtcFRhcmdldE5vZGVJZCA9PSBudWxsID8gbnVsbDogZ2V0VHJlZU5vZGVCeVRJZCh0YXJnZXRTZXR0aW5nLCB0bXBUYXJnZXROb2RlSWQpOw0KCQkJCQlpZiAodG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5iZWZvcmVEcm9wLCBbdGFyZ2V0U2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlLCBkcmFnVGFyZ2V0Tm9kZSwgbW92ZVR5cGVdLCB0cnVlKSA9PSBmYWxzZSkgcmV0dXJuOw0KCQkJCQl2YXIgaXNDb3B5ID0gKGV2ZW50LmN0cmxLZXkgJiYgc2V0dGluZy5kcmFnTW92ZSAmJiBzZXR0aW5nLmRyYWdDb3B5KSB8fCAoIXNldHRpbmcuZHJhZ01vdmUgJiYgc2V0dGluZy5kcmFnQ29weSk7DQoNCgkJCQkJdmFyIG5ld05vZGUgPSBpc0NvcHkgPyB0b29scy5jbG9uZSh0cmVlTm9kZSkgOiB0cmVlTm9kZTsNCgkJCQkJaWYgKGlzT3RoZXJUcmVlKSB7DQoJCQkJCQlpZiAoIWlzQ29weSkge3JlbW92ZVRyZWVOb2RlKHNldHRpbmcsIHRyZWVOb2RlKTt9DQoJCQkJCQlpZiAobW92ZVR5cGUgPT0gTW92ZVR5cGVfSW5uZXIpIHsNCgkJCQkJCQlhZGRUcmVlTm9kZXModGFyZ2V0U2V0dGluZywgZHJhZ1RhcmdldE5vZGUsIFtuZXdOb2RlXSk7DQoJCQkJCQl9IGVsc2Ugew0KCQkJCQkJCWFkZFRyZWVOb2Rlcyh0YXJnZXRTZXR0aW5nLCBkcmFnVGFyZ2V0Tm9kZS5wYXJlbnROb2RlLCBbbmV3Tm9kZV0pOw0KCQkJCQkJCW1vdmVUcmVlTm9kZSh0YXJnZXRTZXR0aW5nLCBkcmFnVGFyZ2V0Tm9kZSwgbmV3Tm9kZSwgbW92ZVR5cGUsIGZhbHNlKTsNCgkJCQkJCX0NCgkJCQkJfWVsc2Ugew0KCQkJCQkJaWYgKGlzQ29weSkgew0KCQkJCQkJCWlmIChtb3ZlVHlwZSA9PSBNb3ZlVHlwZV9Jbm5lcikgew0KCQkJCQkJCQlhZGRUcmVlTm9kZXModGFyZ2V0U2V0dGluZywgZHJhZ1RhcmdldE5vZGUsIFtuZXdOb2RlXSk7DQoJCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQkJYWRkVHJlZU5vZGVzKHRhcmdldFNldHRpbmcsIGRyYWdUYXJnZXROb2RlLnBhcmVudE5vZGUsIFtuZXdOb2RlXSk7DQoJCQkJCQkJCW1vdmVUcmVlTm9kZSh0YXJnZXRTZXR0aW5nLCBkcmFnVGFyZ2V0Tm9kZSwgbmV3Tm9kZSwgbW92ZVR5cGUsIGZhbHNlKTsNCgkJCQkJCQl9DQoJCQkJCQl9IGVsc2Ugew0KCQkJCQkJCW1vdmVUcmVlTm9kZSh0YXJnZXRTZXR0aW5nLCBkcmFnVGFyZ2V0Tm9kZSwgbmV3Tm9kZSwgbW92ZVR5cGUpOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCXNlbGVjdE5vZGUodGFyZ2V0U2V0dGluZywgbmV3Tm9kZSk7DQoJCQkJCSQoIiMiICsgbmV3Tm9kZS50SWQgKyBJRE1hcmtfSWNvbikuZm9jdXMoKS5ibHVyKCk7DQoNCgkJCQkJLy/op6blj5EgRFJPUCDmi5bmi73kuovku7bvvIzov5Tlm57mi5bmi73nmoTnm67moIfmlbDmja7lr7nosaENCgkJCQkJc2V0dGluZy50cmVlT2JqLnRyaWdnZXIoWlRSRUVfRFJPUCwgW3RhcmdldFNldHRpbmcudHJlZU9iaklkLCBuZXdOb2RlLCBkcmFnVGFyZ2V0Tm9kZSwgbW92ZVR5cGVdKTsNCg0KCQkJCX0gZWxzZSB7DQoJCQkJCS8v6Kem5Y+RIERST1Ag5ouW5ou95LqL5Lu277yM6L+U5ZuebnVsbA0KCQkJCQlzZXR0aW5nLnRyZWVPYmoudHJpZ2dlcihaVFJFRV9EUk9QLCBbc2V0dGluZy50cmVlT2JqSWQsIG51bGwsIG51bGwsIG51bGxdKTsNCgkJCQl9DQoJCQl9KTsNCg0KCQkJLy/pmLvmraLpu5jorqTkuovku7bkuJPpl6jnlKjkuo7lpITnkIYgRmlyZUZveCDnmoRCdWfvvIwNCgkJCS8v6K+lIEJ1ZyDlr7zoh7TlpoLmnpwgelRyZWUgRGl2IENTUyDkuK3lrZjlnKggb3ZlcmZsb3cg6K6+572u77yM5YiZ5ouW5ou96IqC54K556e75Ye6IHpUcmVlIOaXtu+8jOaXoOazleW+l+WIsOato+ehrueahGV2ZW50LnRhcmdldA0KCQkJaWYoZXZlbnRNb3VzZURvd24ucHJldmVudERlZmF1bHQpIHsNCgkJCQlldmVudE1vdXNlRG93bi5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJfQ0KCQl9LA0KCQlvbkhvdmVyT3Zlck5vZGU6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQl2YXIgc2V0dGluZyA9IHNldHRpbmdzW2V2ZW50LmRhdGEudHJlZU9iaklkXTsNCgkJCXZhciB0cmVlTm9kZSA9IGV2ZW50LmRhdGEudHJlZU5vZGU7DQoJCQlpZiAoc2V0dGluZy5jdXJIb3ZlclRyZWVOb2RlICE9IHRyZWVOb2RlKSB7DQoJCQkJZXZlbnQuZGF0YS50cmVlTm9kZSA9IHNldHRpbmcuY3VySG92ZXJUcmVlTm9kZTsNCgkJCQloYW5kbGVyLm9uSG92ZXJPdXROb2RlKGV2ZW50KTsNCgkJCX0NCgkJCXNldHRpbmcuY3VySG92ZXJUcmVlTm9kZSA9IHRyZWVOb2RlOw0KCQkJYWRkVHJlZURvbShzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCX0sDQoJCW9uSG92ZXJPdXROb2RlOiBmdW5jdGlvbihldmVudCkgew0KCQkJdmFyIHNldHRpbmcgPSBzZXR0aW5nc1tldmVudC5kYXRhLnRyZWVPYmpJZF07DQoJCQlpZiAoc2V0dGluZy5jdXJIb3ZlclRyZWVOb2RlICYmIHNldHRpbmcuY3VyVHJlZU5vZGUgIT0gc2V0dGluZy5jdXJIb3ZlclRyZWVOb2RlKSB7DQoJCQkJcmVtb3ZlVHJlZURvbShzZXR0aW5nLCBzZXR0aW5nLmN1ckhvdmVyVHJlZU5vZGUpOw0KCQkJCXNldHRpbmcuY3VySG92ZXJUcmVlTm9kZSA9IG51bGw7DQoJCQl9DQoJCX0sDQoJCW9uWlRyZWVNb3VzZWRvd246IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQl2YXIgc2V0dGluZyA9IHNldHRpbmdzW2V2ZW50LmRhdGEudHJlZU9iaklkXTsNCgkJCXZhciB0cmVlTm9kZSA9IGV2ZW50LmRhdGEudHJlZU5vZGU7DQoJCQkvL+inpuWPkW1vdXNlRG93buS6i+S7tg0KCQkJaWYgKHRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYmVmb3JlTW91c2VEb3duLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSwgdHJ1ZSkpIHsNCgkJCQl0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLm1vdXNlRG93biwgW2V2ZW50LCBzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGVdKTsNCgkJCX0NCgkJCXJldHVybiB0cnVlOw0KCQl9LA0KCQlvblpUcmVlTW91c2V1cDogZnVuY3Rpb24oZXZlbnQpIHsNCgkJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQkJdmFyIHRyZWVOb2RlID0gZXZlbnQuZGF0YS50cmVlTm9kZTsNCgkJCS8v6Kem5Y+RbW91c2VVcOS6i+S7tg0KCQkJaWYgKHRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYmVmb3JlTW91c2VVcCwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0sIHRydWUpKSB7DQoJCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5tb3VzZVVwLCBbZXZlbnQsIHNldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0pOw0KCQkJfQ0KCQkJcmV0dXJuIHRydWU7DQoJCX0sDQoJCW9uWlRyZWVEYmxjbGljazogZnVuY3Rpb24oZXZlbnQpIHsNCgkJCXZhciBzZXR0aW5nID0gc2V0dGluZ3NbZXZlbnQuZGF0YS50cmVlT2JqSWRdOw0KCQkJdmFyIHRyZWVOb2RlID0gZXZlbnQuZGF0YS50cmVlTm9kZTsNCgkJCS8v6Kem5Y+RbW91c2VVcOS6i+S7tg0KCQkJaWYgKHRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYmVmb3JlRGJsY2xpY2ssIFtzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGVdLCB0cnVlKSkgew0KCQkJCXRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suZGJsY2xpY2ssIFtldmVudCwgc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCQl9DQoJCQlyZXR1cm4gdHJ1ZTsNCgkJfSwNCgkJb25aVHJlZUNvbnRleHRtZW51OiBmdW5jdGlvbihldmVudCkgew0KCQkJdmFyIHNldHRpbmcgPSBzZXR0aW5nc1tldmVudC5kYXRhLnRyZWVPYmpJZF07DQoJCQl2YXIgdHJlZU5vZGUgPSBldmVudC5kYXRhLnRyZWVOb2RlOw0KCQkJLy/op6blj5FyaWdodENsaWNr5LqL5Lu2DQoJCQlpZiAodG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5iZWZvcmVSaWdodENsaWNrLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSwgdHJ1ZSkpIHsNCgkJCQl0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLnJpZ2h0Q2xpY2ssIFtldmVudCwgc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCQl9DQoJCQlyZXR1cm4gKHR5cGVvZiBzZXR0aW5nLmNhbGxiYWNrLnJpZ2h0Q2xpY2spICE9ICJmdW5jdGlvbiI7DQoJCX0NCgl9Ow0KDQoJLy/orr7nva7lhYnmoIfkvY3nva7lh73mlbANCglmdW5jdGlvbiBzZXRDdXJzb3JQb3NpdGlvbihvYmosIHBvcyl7DQoJCWlmKG9iai5zZXRTZWxlY3Rpb25SYW5nZSkgew0KCQkJb2JqLmZvY3VzKCk7DQoJCQlvYmouc2V0U2VsZWN0aW9uUmFuZ2UocG9zLHBvcyk7DQoJCX0gZWxzZSBpZiAob2JqLmNyZWF0ZVRleHRSYW5nZSkgew0KCQkJdmFyIHJhbmdlID0gb2JqLmNyZWF0ZVRleHRSYW5nZSgpOw0KCQkJcmFuZ2UuY29sbGFwc2UodHJ1ZSk7DQoJCQlyYW5nZS5tb3ZlRW5kKCdjaGFyYWN0ZXInLCBwb3MpOw0KCQkJcmFuZ2UubW92ZVN0YXJ0KCdjaGFyYWN0ZXInLCBwb3MpOw0KCQkJcmFuZ2Uuc2VsZWN0KCk7DQoJCX0NCgl9DQoNCgl2YXIgZHJhZ01hc2tMaXN0ID0gbmV3IEFycmF5KCk7DQoJLy/mmL7npLrjgIHpmpDol48gSWZyYW1l55qE6YGu572p5bGC77yI5Li76KaB55So5LqO6YG/5YWN5ouW5ou95LiN5rWB55WF77yJDQoJZnVuY3Rpb24gc2hvd0lmYW1lTWFzayhzaG93U2lnbikgew0KCQkvL+a4heepuuaJgOaciemBrue9qQ0KCQl3aGlsZSAoZHJhZ01hc2tMaXN0Lmxlbmd0aCA+IDApIHsNCgkJCWRyYWdNYXNrTGlzdFswXS5yZW1vdmUoKTsNCgkJCWRyYWdNYXNrTGlzdC5zaGlmdCgpOw0KCQl9DQoJCWlmIChzaG93U2lnbikgew0KCQkJLy/mmL7npLrpga7nvakNCgkJCXZhciBpZnJhbWVMaXN0ID0gJCgiaWZyYW1lIik7DQoJCQlmb3IgKHZhciBpID0gMCwgbCA9IGlmcmFtZUxpc3QubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQkJdmFyIG9iaiA9IGlmcmFtZUxpc3QuZ2V0KGkpOw0KCQkJCXZhciByID0gdG9vbHMuZ2V0QWJzKG9iaik7DQoJCQkJdmFyIGRyYWdNYXNrID0gJCgiPGRpdiBpZD0nelRyZWVNYXNrXyIgKyBpICsgIicgY2xhc3M9J3pUcmVlTWFzaycgc3R5bGU9J3RvcDoiICsgclsxXSArICJweDsgbGVmdDoiICsgclswXSArICJweDsgd2lkdGg6IiArIG9iai5vZmZzZXRXaWR0aCArICJweDsgaGVpZ2h0OiIgKyBvYmoub2Zmc2V0SGVpZ2h0ICsgInB4Oyc+PC9kaXY+Iik7DQoJCQkJZHJhZ01hc2suYXBwZW5kVG8oImJvZHkiKTsNCgkJCQlkcmFnTWFza0xpc3QucHVzaChkcmFnTWFzayk7DQoJCQl9DQoJCX0NCgl9DQoNCgkvL+iuvue9rk5hbWUNCglmdW5jdGlvbiBzZXROb2RlTmFtZShzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQl2YXIgbk9iaiA9ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX1NwYW4pOw0KCQluT2JqLnRleHQodHJlZU5vZGVbc2V0dGluZy5uYW1lQ29sXSk7DQoJfQ0KCS8v6K6+572uVGFyZ2V0DQoJZnVuY3Rpb24gc2V0Tm9kZVRhcmdldCh0cmVlTm9kZSkgew0KCQl2YXIgYU9iaiA9ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0EpOw0KCQlhT2JqLmF0dHIoInRhcmdldCIsIG1ha2VOb2RlVGFyZ2V0KHRyZWVOb2RlKSk7DQoJfQ0KCWZ1bmN0aW9uIG1ha2VOb2RlVGFyZ2V0KHRyZWVOb2RlKSB7DQoJCXJldHVybiAodHJlZU5vZGUudGFyZ2V0IHx8ICJfYmxhbmsiKTsNCgl9DQoJLy/orr7nva5VUkwNCglmdW5jdGlvbiBzZXROb2RlVXJsKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXZhciBhT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfQSk7DQoJCXZhciB1cmwgPSBtYWtlTm9kZVVybChzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCWlmICh1cmwgPT0gbnVsbCB8fCB1cmwubGVuZ3RoID09IDApIHsNCgkJCWFPYmoucmVtb3ZlQXR0cigiaHJlZiIpOw0KCQl9IGVsc2Ugew0KCQkJYU9iai5hdHRyKCJocmVmIiwgdXJsKTsNCgkJfQ0KCX0NCglmdW5jdGlvbiBtYWtlTm9kZVVybChzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQlyZXR1cm4gKHRyZWVOb2RlLnVybCAmJiAhc2V0dGluZy5lZGl0YWJsZSkgPyB0cmVlTm9kZS51cmwgOiBudWxsOw0KCX0NCgkvL+iuvue9rkxpbmXjgIFJY2/nrYljc3PlsZ7mgKcNCglmdW5jdGlvbiBzZXROb2RlTGluZUljb3Moc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJaWYgKCF0cmVlTm9kZSkgcmV0dXJuOw0KCQl2YXIgc3dpdGNoT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfU3dpdGNoKTsNCgkJdmFyIHVsT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfVWwpOw0KCQl2YXIgaWNvT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfSWNvbik7DQoNCgkJdmFyIHVsTGluZSA9IG1ha2VVbExpbmVDbGFzcyhzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCWlmICh1bExpbmUubGVuZ3RoPT0wKSB7DQoJCQl1bE9iai5yZW1vdmVDbGFzcyhMaW5lTWFya19MaW5lKTsNCgkJfSBlbHNlIHsNCgkJCXVsT2JqLmFkZENsYXNzKHVsTGluZSk7DQoJCX0NCg0KCQlzd2l0Y2hPYmouYXR0cigiY2xhc3MiLCBtYWtlTm9kZUxpbmVDbGFzcyhzZXR0aW5nLCB0cmVlTm9kZSkpOw0KCQlpY29PYmoucmVtb3ZlQXR0cigic3R5bGUiKTsNCgkJaWNvT2JqLmF0dHIoInN0eWxlIiwgbWFrZU5vZGVJY29TdHlsZShzZXR0aW5nLCB0cmVlTm9kZSkpOw0KCQlpY29PYmouYXR0cigiY2xhc3MiLCBtYWtlTm9kZUljb0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlKSk7DQoJfQ0KCWZ1bmN0aW9uIG1ha2VOb2RlTGluZUNsYXNzKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXZhciBsaW5lQ2xhc3MgPSBbInN3aXRjaCJdOw0KCQlpZiAoc2V0dGluZy5zaG93TGluZSkgew0KCQkJaWYgKHRyZWVOb2RlLmxldmVsID09IDAgJiYgdHJlZU5vZGUuaXNGaXJzdE5vZGUgJiYgdHJlZU5vZGUuaXNMYXN0Tm9kZSkgew0KCQkJCWxpbmVDbGFzcy5wdXNoKExpbmVNYXJrX1Jvb3QpOw0KCQkJfSBlbHNlIGlmICh0cmVlTm9kZS5sZXZlbCA9PSAwICYmIHRyZWVOb2RlLmlzRmlyc3ROb2RlKSB7DQoJCQkJbGluZUNsYXNzLnB1c2goTGluZU1hcmtfUm9vdHMpOw0KCQkJfSBlbHNlIGlmICh0cmVlTm9kZS5pc0xhc3ROb2RlKSB7DQoJCQkJbGluZUNsYXNzLnB1c2goTGluZU1hcmtfQm90dG9tKTsNCgkJCX0gZWxzZSB7DQoJCQkJbGluZUNsYXNzLnB1c2goTGluZU1hcmtfQ2VudGVyKTsNCgkJCX0NCg0KCQl9IGVsc2Ugew0KCQkJbGluZUNsYXNzLnB1c2goTGluZU1hcmtfTm9MaW5lKTsNCgkJfQ0KCQlpZiAodHJlZU5vZGUuaXNQYXJlbnQpIHsNCgkJCWxpbmVDbGFzcy5wdXNoKHRyZWVOb2RlLm9wZW4gPyBGb2xkZXJNYXJrX09wZW4gOiBGb2xkZXJNYXJrX0Nsb3NlKTsNCgkJfSBlbHNlIHsNCgkJCWxpbmVDbGFzcy5wdXNoKEZvbGRlck1hcmtfRG9jdSk7DQoJCX0NCgkJcmV0dXJuIGxpbmVDbGFzcy5qb2luKCdfJyk7DQoJfQ0KCWZ1bmN0aW9uIG1ha2VVbExpbmVDbGFzcyhzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQlyZXR1cm4gKHNldHRpbmcuc2hvd0xpbmUgJiYgIXRyZWVOb2RlLmlzTGFzdE5vZGUpID8gTGluZU1hcmtfTGluZSA6ICIiOw0KCX0NCglmdW5jdGlvbiBtYWtlTm9kZUljb0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXZhciBpY29Dc3MgPSBbImljbyJdOw0KCQlpZiAoIXRyZWVOb2RlLmlzQWpheGluZykgew0KCQkJaWNvQ3NzWzBdID0gKHRyZWVOb2RlLmljb25Ta2luID8gdHJlZU5vZGUuaWNvblNraW4gOiAiIikgKyAiICIgKyBpY29Dc3NbMF07DQoJCQlpZiAodHJlZU5vZGUuaXNQYXJlbnQpIHsNCgkJCQlpY29Dc3MucHVzaCh0cmVlTm9kZS5vcGVuID8gRm9sZGVyTWFya19PcGVuIDogRm9sZGVyTWFya19DbG9zZSk7DQoJCQl9IGVsc2Ugew0KCQkJCWljb0Nzcy5wdXNoKEZvbGRlck1hcmtfRG9jdSk7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIGljb0Nzcy5qb2luKCdfJyk7DQoJfQ0KCWZ1bmN0aW9uIG1ha2VOb2RlSWNvU3R5bGUoc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJdmFyIGljb1N0eWxlID0gW107DQoJCWlmICghdHJlZU5vZGUuaXNBamF4aW5nKSB7DQoJCQl2YXIgaWNvbiA9ICh0cmVlTm9kZS5pc1BhcmVudCAmJiB0cmVlTm9kZS5pY29uT3BlbiAmJiB0cmVlTm9kZS5pY29uQ2xvc2UpID8gKHRyZWVOb2RlLm9wZW4gPyB0cmVlTm9kZS5pY29uT3BlbiA6IHRyZWVOb2RlLmljb25DbG9zZSkgOiB0cmVlTm9kZS5pY29uOw0KCQkJaWYgKGljb24pIGljb1N0eWxlLnB1c2goImJhY2tncm91bmQ6dXJsKCIsIGljb24sICIpIDAgMCBuby1yZXBlYXQ7Iik7DQoJCQlpZiAoc2V0dGluZy5zaG93SWNvbiA9PSBmYWxzZSB8fCAhdG9vbHMuYXBwbHkoc2V0dGluZy5zaG93SWNvbiwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0sIHRydWUpKSB7DQoJCQkJaWNvU3R5bGUucHVzaCgid2lkdGg6MHB4O2hlaWdodDowcHg7Iik7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIGljb1N0eWxlLmpvaW4oJycpOw0KCX0NCg0KCS8v6K6+572u6Ieq5a6a5LmJ5a2X5L2T5qC35byPDQoJZnVuY3Rpb24gc2V0Tm9kZUZvbnRDc3Moc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJdmFyIGFPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19BKTsNCgkJdmFyIGZvbnRDc3MgPSBtYWtlTm9kZUZvbnRDc3Moc2V0dGluZywgdHJlZU5vZGUpOw0KCQlpZiAoZm9udENzcykgew0KCQkJYU9iai5jc3MoZm9udENzcyk7DQoJCX0NCgl9DQoJZnVuY3Rpb24gbWFrZU5vZGVGb250Q3NzKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXZhciBmb250Q3NzID0gdG9vbHMuYXBwbHkoc2V0dGluZy5mb250Q3NzLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCWlmIChmb250Q3NzID09IG51bGwpIHsNCgkJCWZvbnRDc3MgPSBzZXR0aW5nLmZvbnRDc3M7DQoJCX0NCgkJaWYgKGZvbnRDc3MpIHsNCgkJCXJldHVybiBmb250Q3NzOw0KCQl9IGVsc2Ugew0KCQkJcmV0dXJuIHt9Ow0KCQl9DQoJfQ0KDQoJLy/lr7nkuo5idXR0b27mm7/mjaJjbGFzcyDmi7zmjqXlrZfnrKbkuLINCglmdW5jdGlvbiByZXBsYWNlU3dpdGNoQ2xhc3Mob2JqLCBuZXdOYW1lKSB7DQoJCWlmICghb2JqKSByZXR1cm47DQoNCgkJdmFyIHRtcE5hbWUgPSBvYmouYXR0cigiY2xhc3MiKTsNCgkJaWYgKHRtcE5hbWUgPT0gdW5kZWZpbmVkKSByZXR1cm47DQoJCXZhciB0bXBMaXN0ID0gdG1wTmFtZS5zcGxpdCgiXyIpOw0KCQlzd2l0Y2ggKG5ld05hbWUpIHsNCgkJCWNhc2UgTGluZU1hcmtfUm9vdDoNCgkJCWNhc2UgTGluZU1hcmtfUm9vdHM6DQoJCQljYXNlIExpbmVNYXJrX0NlbnRlcjoNCgkJCWNhc2UgTGluZU1hcmtfQm90dG9tOg0KCQkJY2FzZSBMaW5lTWFya19Ob0xpbmU6DQoJCQkJdG1wTGlzdFsxXSA9IG5ld05hbWU7DQoJCQkJYnJlYWs7DQoJCQljYXNlIEZvbGRlck1hcmtfT3BlbjoNCgkJCWNhc2UgRm9sZGVyTWFya19DbG9zZToNCgkJCWNhc2UgRm9sZGVyTWFya19Eb2N1Og0KCQkJCXRtcExpc3RbMl0gPSBuZXdOYW1lOw0KCQkJCWJyZWFrOw0KCQl9DQoNCgkJb2JqLmF0dHIoImNsYXNzIiwgdG1wTGlzdC5qb2luKCJfIikpOw0KCX0NCglmdW5jdGlvbiByZXBsYWNlSWNvQ2xhc3ModHJlZU5vZGUsIG9iaiwgbmV3TmFtZSkgew0KCQlpZiAoIW9iaiB8fCB0cmVlTm9kZS5pc0FqYXhpbmcpIHJldHVybjsNCg0KCQl2YXIgdG1wTmFtZSA9IG9iai5hdHRyKCJjbGFzcyIpOw0KCQlpZiAodG1wTmFtZSA9PSB1bmRlZmluZWQpIHJldHVybjsNCgkJdmFyIHRtcExpc3QgPSB0bXBOYW1lLnNwbGl0KCJfIik7DQoJCXN3aXRjaCAobmV3TmFtZSkgew0KCQkJY2FzZSBGb2xkZXJNYXJrX09wZW46DQoJCQljYXNlIEZvbGRlck1hcmtfQ2xvc2U6DQoJCQljYXNlIEZvbGRlck1hcmtfRG9jdToNCgkJCQl0bXBMaXN0WzFdID0gbmV3TmFtZTsNCgkJCQlicmVhazsNCgkJfQ0KDQoJCW9iai5hdHRyKCJjbGFzcyIsIHRtcExpc3Quam9pbigiXyIpKTsNCgl9DQoNCgkvL+a3u+WKoHpUcmVl55qE5oyJ6ZKu5o6n5Lu2DQoJZnVuY3Rpb24gYWRkVHJlZURvbShzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQlpZiAoc2V0dGluZy5kcmFnU3RhdHVzID09IDApIHsNCgkJCXRyZWVOb2RlLmlzSG92ZXIgPSB0cnVlOw0KCQkJaWYgKHNldHRpbmcuZWRpdGFibGUpIHsNCgkJCQlhZGRFZGl0QnRuKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQlhZGRSZW1vdmVCdG4oc2V0dGluZywgdHJlZU5vZGUpOw0KCQkJfQ0KCQkJdG9vbHMuYXBwbHkoc2V0dGluZy5hZGRIb3ZlckRvbSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0pOw0KCQl9DQoJfQ0KCS8v5Yig6ZmkelRyZWXnmoTmjInpkq7mjqfku7YNCglmdW5jdGlvbiByZW1vdmVUcmVlRG9tKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXRyZWVOb2RlLmlzSG92ZXIgPSBmYWxzZTsNCgkJcmVtb3ZlRWRpdEJ0bih0cmVlTm9kZSk7DQoJCXJlbW92ZVJlbW92ZUJ0bih0cmVlTm9kZSk7DQoJCXRvb2xzLmFwcGx5KHNldHRpbmcucmVtb3ZlSG92ZXJEb20sIFtzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGVdKTsNCgl9DQoJLy/liKDpmaQg57yW6L6R44CB5Yig6Zmk5oyJ6ZKuDQoJZnVuY3Rpb24gcmVtb3ZlRWRpdEJ0bih0cmVlTm9kZSkgew0KCQkkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19FZGl0KS51bmJpbmQoKS5yZW1vdmUoKTsNCgl9DQoJZnVuY3Rpb24gcmVtb3ZlUmVtb3ZlQnRuKHRyZWVOb2RlKSB7DQoJCSQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX1JlbW92ZSkudW5iaW5kKCkucmVtb3ZlKCk7DQoJfQ0KCWZ1bmN0aW9uIGFkZEVkaXRCdG4oc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJaWYgKHRyZWVOb2RlLmVkaXROYW1lU3RhdHVzIHx8ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0VkaXQpLmxlbmd0aCA+IDApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIXRvb2xzLmFwcGx5KHNldHRpbmcuZWRpdF9yZW5hbWVCdG4sIFt0cmVlTm9kZV0sIHNldHRpbmcuZWRpdF9yZW5hbWVCdG4pKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJdmFyIG5PYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19TcGFuKTsNCgkJdmFyIGVkaXRTdHIgPSAiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSdlZGl0JyBpZD0nIiArIHRyZWVOb2RlLnRJZCArIElETWFya19FZGl0ICsgIicgdGl0bGU9JycgdHJlZU5vZGUiK0lETWFya19FZGl0KyIgb25mb2N1cz0ndGhpcy5ibHVyKCk7JyBzdHlsZT0nZGlzcGxheTpub25lOyc+PC9idXR0b24+IjsNCgkJbk9iai5hZnRlcihlZGl0U3RyKTsNCg0KCQkkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19FZGl0KS5iaW5kKCdjbGljaycsDQoJCQlmdW5jdGlvbigpIHsNCgkJCQlpZiAodG9vbHMuYXBwbHkoc2V0dGluZy5jYWxsYmFjay5iZWZvcmVSZW5hbWUsIFtzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGVdLCB0cnVlKSA9PSBmYWxzZSkgcmV0dXJuIHRydWU7DQoJCQkJZWRpdFRyZWVOb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQlyZXR1cm4gZmFsc2U7DQoJCQl9DQoJCQkpLnNob3coKTsNCgl9DQoJZnVuY3Rpb24gYWRkUmVtb3ZlQnRuKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmICghc2V0dGluZy5lZGl0X3JlbW92ZUJ0biB8fCAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19SZW1vdmUpLmxlbmd0aCA+IDApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIXRvb2xzLmFwcGx5KHNldHRpbmcuZWRpdF9yZW1vdmVCdG4sIFt0cmVlTm9kZV0sIHNldHRpbmcuZWRpdF9yZW1vdmVCdG4pKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJdmFyIGFPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19BKTsNCgkJdmFyIHJlbW92ZVN0ciA9ICI8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J3JlbW92ZScgaWQ9JyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfUmVtb3ZlICsgIicgdGl0bGU9JycgdHJlZU5vZGUiK0lETWFya19SZW1vdmUrIiBvbmZvY3VzPSd0aGlzLmJsdXIoKTsnIHN0eWxlPSdkaXNwbGF5Om5vbmU7Jz48L2J1dHRvbj4iOw0KCQlhT2JqLmFwcGVuZChyZW1vdmVTdHIpOw0KDQoJCSQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX1JlbW92ZSkuYmluZCgnY2xpY2snLA0KCQkJZnVuY3Rpb24oKSB7DQoJCQkJaWYgKHRvb2xzLmFwcGx5KHNldHRpbmcuY2FsbGJhY2suYmVmb3JlUmVtb3ZlLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSwgdHJ1ZSkgPT0gZmFsc2UpIHJldHVybiB0cnVlOw0KCQkJCXJlbW92ZVRyZWVOb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQkvL+inpuWPkXJlbW92ZeS6i+S7tg0KCQkJCXNldHRpbmcudHJlZU9iai50cmlnZ2VyKFpUUkVFX1JFTU9WRSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0pOw0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0NCgkJCSkuYmluZCgnbW91c2Vkb3duJywNCgkJCWZ1bmN0aW9uKGV2ZW50TW91c2VEb3duKSB7DQoJCQkJcmV0dXJuIHRydWU7DQoJCQl9DQoJCQkpLnNob3coKTsNCgl9DQoNCgkvL+iuvue9rmNoZWNr5ZCO77yM54i25a2Q6IqC54K56IGU5Yqo5YWz57O7DQoJZnVuY3Rpb24gY2hlY2tOb2RlUmVsYXRpb24oc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJdmFyIHBOb2RlLCBpLCBsOw0KCQlpZiAoc2V0dGluZy5jaGVja1N0eWxlID09IENoZWNrX1N0eWxlX1JhZGlvKSB7DQoJCQlpZiAodHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSkgew0KCQkJCWlmIChzZXR0aW5nLmNoZWNrUmFkaW9UeXBlID09IFJhZGlvX1R5cGVfQWxsKSB7DQoJCQkJCWZvciAoaSA9IHNldHRpbmcuY2hlY2tSYWRpb0NoZWNrZWRMaXN0Lmxlbmd0aC0xOyBpID49IDA7IGktLSkgew0KCQkJCQkJcE5vZGUgPSBzZXR0aW5nLmNoZWNrUmFkaW9DaGVja2VkTGlzdFtpXTsNCgkJCQkJCXBOb2RlW3NldHRpbmcuY2hlY2tlZENvbF0gPSBmYWxzZTsNCgkJCQkJCXNldHRpbmcuY2hlY2tSYWRpb0NoZWNrZWRMaXN0LnNwbGljZShpLCAxKTsNCg0KCQkJCQkJc2V0Q2hrQ2xhc3Moc2V0dGluZywgJCgiIyIgKyBwTm9kZS50SWQgKyBJRE1hcmtfQ2hlY2spLCBwTm9kZSk7DQoJCQkJCQlpZiAocE5vZGUucGFyZW50Tm9kZSAhPSB0cmVlTm9kZS5wYXJlbnROb2RlKSB7DQoJCQkJCQkJcmVwYWlyUGFyZW50Q2hrQ2xhc3NXaXRoU2VsZihzZXR0aW5nLCBwTm9kZSk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJc2V0dGluZy5jaGVja1JhZGlvQ2hlY2tlZExpc3QgPSBzZXR0aW5nLmNoZWNrUmFkaW9DaGVja2VkTGlzdC5jb25jYXQoW3RyZWVOb2RlXSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJdmFyIHBhcmVudE5vZGUgPSAodHJlZU5vZGUucGFyZW50Tm9kZSkgPyB0cmVlTm9kZS5wYXJlbnROb2RlIDogc2V0dGluZy5yb290Ow0KCQkJCQlmb3IgKGkgPSAwLCBsID0gcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCQkJCXBOb2RlID0gcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXTsNCgkJCQkJCWlmIChwTm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdICYmIHBOb2RlICE9IHRyZWVOb2RlKSB7DQoJCQkJCQkJcE5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA9IGZhbHNlOw0KCQkJCQkJCXNldENoa0NsYXNzKHNldHRpbmcsICQoIiMiICsgcE5vZGUudElkICsgSURNYXJrX0NoZWNrKSwgcE5vZGUpOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfSBlbHNlIGlmIChzZXR0aW5nLmNoZWNrUmFkaW9UeXBlID09IFJhZGlvX1R5cGVfQWxsKSB7DQoJCQkJZm9yIChpID0gMCwgbCA9IHNldHRpbmcuY2hlY2tSYWRpb0NoZWNrZWRMaXN0Lmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJCQlpZiAodHJlZU5vZGUgPT0gc2V0dGluZy5jaGVja1JhZGlvQ2hlY2tlZExpc3RbaV0pIHsNCgkJCQkJCXNldHRpbmcuY2hlY2tSYWRpb0NoZWNrZWRMaXN0LnNwbGljZShpLCAxKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KDQoJCX0gZWxzZSB7DQoJCQlpZiAodHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSAmJiBzZXR0aW5nLmNoZWNrVHlwZS5ZLmluZGV4T2YoInMiKSA+IC0xKSB7DQoJCQkJc2V0U29uTm9kZUNoZWNrQm94KHNldHRpbmcsIHRyZWVOb2RlLCB0cnVlKTsNCgkJCX0NCgkJCWlmICh0cmVlTm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdICYmIHNldHRpbmcuY2hlY2tUeXBlLlkuaW5kZXhPZigicCIpID4gLTEpIHsNCgkJCQlzZXRQYXJlbnROb2RlQ2hlY2tCb3goc2V0dGluZywgdHJlZU5vZGUsIHRydWUpOw0KCQkJfQ0KCQkJaWYgKCF0cmVlTm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdICYmIHNldHRpbmcuY2hlY2tUeXBlLk4uaW5kZXhPZigicyIpID4gLTEpIHsNCgkJCQlzZXRTb25Ob2RlQ2hlY2tCb3goc2V0dGluZywgdHJlZU5vZGUsIGZhbHNlKTsNCgkJCX0NCgkJCWlmICghdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSAmJiBzZXR0aW5nLmNoZWNrVHlwZS5OLmluZGV4T2YoInAiKSA+IC0xKSB7DQoJCQkJc2V0UGFyZW50Tm9kZUNoZWNrQm94KHNldHRpbmcsIHRyZWVOb2RlLCBmYWxzZSk7DQoJCQl9DQoJCX0NCgl9DQoNCgkvL+mBjeWOhueItuiKgueCueiuvue9rmNoZWNrYm94DQoJZnVuY3Rpb24gc2V0UGFyZW50Tm9kZUNoZWNrQm94T2xkKHNldHRpbmcsIHRyZWVOb2RlLCB2YWx1ZSkgew0KCQl2YXIgY2hlY2tPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19DaGVjayk7DQoJCXRyZWVOb2RlW3NldHRpbmcuY2hlY2tlZENvbF0gPSB2YWx1ZTsNCgkJc2V0Q2hrQ2xhc3Moc2V0dGluZywgY2hlY2tPYmosIHRyZWVOb2RlKTsNCgkJaWYgKHRyZWVOb2RlLnBhcmVudE5vZGUpIHsNCgkJCXZhciBwU2lnbiA9IHRydWU7DQoJCQlpZiAoIXZhbHVlKSB7DQoJCQkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZS5wYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJCQlpZiAodHJlZU5vZGUucGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXVtzZXR0aW5nLmNoZWNrZWRDb2xdKSB7DQoJCQkJCQlwU2lnbiA9IGZhbHNlOw0KCQkJCQkJYnJlYWs7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCQlpZiAocFNpZ24pIHsNCgkJCQlzZXRQYXJlbnROb2RlQ2hlY2tCb3goc2V0dGluZywgdHJlZU5vZGUucGFyZW50Tm9kZSwgdmFsdWUpOw0KCQkJfQ0KCQl9DQoJfQ0KDQogICAgICAgIC8v6YGN5Y6G54i26IqC54K56K6+572uY2hlY2tib3go5a2Q6IqC54K55YWo6YOoY2hlY2vvvIzliJljaGVja+eItuiKgueCuSkNCglmdW5jdGlvbiBzZXRQYXJlbnROb2RlQ2hlY2tCb3goc2V0dGluZywgdHJlZU5vZGUsIHZhbHVlKSB7DQoJCXZhciBjaGVja09iaiA9ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0NoZWNrKTsNCgkJdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA9IHZhbHVlOw0KCQlzZXRDaGtDbGFzcyhzZXR0aW5nLCBjaGVja09iaiwgdHJlZU5vZGUpOw0KCQlpZiAodHJlZU5vZGUucGFyZW50Tm9kZSkgew0KCQkJdmFyIHBTaWduID0gdHJ1ZTsNCgkJCWZvciAodmFyIHNvbiA9IDA7IHNvbiA8IHRyZWVOb2RlLnBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoOyBzb24rKykgew0KCQkJCWlmICghdHJlZU5vZGUucGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtzb25dW3NldHRpbmcuY2hlY2tlZENvbF0pIHsNCgkJCQkJcFNpZ24gPSBmYWxzZTsNCgkJCQkJYnJlYWs7DQoJCQkJfQ0KCQkJfQ0KCQkJc2V0UGFyZW50Tm9kZUNoZWNrQm94KHNldHRpbmcsIHRyZWVOb2RlLnBhcmVudE5vZGUsIHBTaWduKTsNCgkJfQ0KCX0NCg0KDQoJLy/pgY3ljoblrZDoioLngrnorr7nva5jaGVja2JveA0KCWZ1bmN0aW9uIHNldFNvbk5vZGVDaGVja0JveChzZXR0aW5nLCB0cmVlTm9kZSwgdmFsdWUpIHsNCgkJaWYgKCF0cmVlTm9kZSkgcmV0dXJuOw0KCQl2YXIgY2hlY2tPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19DaGVjayk7DQoNCgkJaWYgKHRyZWVOb2RlICE9IHNldHRpbmcucm9vdCkgew0KCQkJdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA9IHZhbHVlOw0KCQkJdHJlZU5vZGUuY2hlY2tfVHJ1ZV9GdWxsID0gdHJ1ZTsNCgkJCXRyZWVOb2RlLmNoZWNrX0ZhbHNlX0Z1bGwgPSB0cnVlOw0KCQkJc2V0Q2hrQ2xhc3Moc2V0dGluZywgY2hlY2tPYmosIHRyZWVOb2RlKTsNCgkJfQ0KDQoJCWlmICghdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0pIHJldHVybjsNCgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCWlmICh0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXSkgc2V0U29uTm9kZUNoZWNrQm94KHNldHRpbmcsIHRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdW2ldLCB2YWx1ZSk7DQoJCX0NCgl9DQoNCgkvL+iuvue9rkNoZWNrQm9455qEQ2xhc3PnsbvlnovvvIzkuLvopoHnlKjkuo7mmL7npLrlrZDoioLngrnmmK/lkKblhajpg6jooqvpgInmi6nnmoTmoLflvI8NCglmdW5jdGlvbiBzZXRDaGtDbGFzcyhzZXR0aW5nLCBvYmosIHRyZWVOb2RlKSB7DQoJCWlmICghb2JqKSByZXR1cm47DQoJCWlmICh0cmVlTm9kZS5ub2NoZWNrID09PSB0cnVlKSB7DQoJCQlvYmouaGlkZSgpOw0KCQl9IGVsc2Ugew0KCQkJb2JqLnNob3coKTsNCgkJfQ0KCQlvYmoucmVtb3ZlQ2xhc3MoKTsNCgkJb2JqLmFkZENsYXNzKG1ha2VDaGtDbGFzcyhzZXR0aW5nLCB0cmVlTm9kZSkpOw0KCX0NCglmdW5jdGlvbiBtYWtlQ2hrQ2xhc3Moc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJdmFyIGNoa05hbWUgPSBzZXR0aW5nLmNoZWNrU3R5bGUgKyAiXyIgKyAodHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA/IENoZWNrQm94X1RydWUgOiBDaGVja0JveF9GYWxzZSkNCgkJKyAiXyIgKyAoKHRyZWVOb2RlW3NldHRpbmcuY2hlY2tlZENvbF0gfHwgc2V0dGluZy5jaGVja1N0eWxlID09IENoZWNrX1N0eWxlX1JhZGlvKSA/ICh0cmVlTm9kZS5jaGVja19UcnVlX0Z1bGw/IENoZWNrQm94X0Z1bGw6Q2hlY2tCb3hfUGFydCkgOiAodHJlZU5vZGUuY2hlY2tfRmFsc2VfRnVsbD8gQ2hlY2tCb3hfRnVsbDpDaGVja0JveF9QYXJ0KSApOw0KCQljaGtOYW1lID0gdHJlZU5vZGUuY2hlY2tib3hGb2N1cyA/IGNoa05hbWUgKyAiXyIgKyBDaGVja0JveF9Gb2N1cyA6IGNoa05hbWU7DQoJCXJldHVybiBDaGVja0JveF9EZWZhdWx0ICsgIiAiICsgY2hrTmFtZTsNCgl9DQoNCglmdW5jdGlvbiByZXBhaXJBbGxDaGsoc2V0dGluZywgY2hlY2tlZCkgew0KCQlpZiAoc2V0dGluZy5jaGVja2FibGUpIHsNCgkJCWZvciAodmFyIHNvbiA9IDA7IHNvbiA8IHNldHRpbmcucm9vdFtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGg7IHNvbisrKSB7DQoJCQkJdmFyIHRyZWVOb2RlID0gc2V0dGluZy5yb290W3NldHRpbmcubm9kZXNDb2xdW3Nvbl07DQoJCQkJdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSA9IGNoZWNrZWQ7DQoJCQkJc2V0U29uTm9kZUNoZWNrQm94KHNldHRpbmcsIHRyZWVOb2RlLCBjaGVja2VkKTsNCgkJCX0NCgkJfQ0KCX0NCgkvL+S/ruato+eItuiKgueCuemAieaLqeeahOagt+W8jw0KCWZ1bmN0aW9uIHJlcGFpclBhcmVudENoa0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmICghdHJlZU5vZGUgfHwgIXRyZWVOb2RlLnBhcmVudE5vZGUpIHJldHVybjsNCgkJcmVwYWlyQ2hrQ2xhc3Moc2V0dGluZywgdHJlZU5vZGUucGFyZW50Tm9kZSk7DQoJCXJlcGFpclBhcmVudENoa0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlLnBhcmVudE5vZGUpOw0KCX0NCglmdW5jdGlvbiByZXBhaXJQYXJlbnRDaGtDbGFzc1dpdGhTZWxmKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmICghdHJlZU5vZGUpIHJldHVybjsNCgkJaWYgKHRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdICYmIHRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCA+IDApIHsNCgkJCXJlcGFpclBhcmVudENoa0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdWzBdKTsNCgkJfSBlbHNlIHsNCgkJCXJlcGFpclBhcmVudENoa0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJfQ0KCX0NCg0KCWZ1bmN0aW9uIHJlcGFpckNoa0NsYXNzKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmICghdHJlZU5vZGUpIHJldHVybjsNCgkJbWFrZUNoa0ZsYWcoc2V0dGluZywgdHJlZU5vZGUpOw0KCQl2YXIgY2hlY2tPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19DaGVjayk7DQoJCXNldENoa0NsYXNzKHNldHRpbmcsIGNoZWNrT2JqLCB0cmVlTm9kZSk7DQoJfQ0KCWZ1bmN0aW9uIG1ha2VDaGtGbGFnKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmICghdHJlZU5vZGUpIHJldHVybjsNCgkJdmFyIGNoa0ZsYWcgPSB7InRydWVGbGFnIjogdHJ1ZSwgImZhbHNlRmxhZyI6IHRydWV9Ow0KCQlpZiAodHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0pIHsNCgkJCWZvciAodmFyIGkgPSAwLCBsID0gdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQkJaWYgKHNldHRpbmcuY2hlY2tTdHlsZSA9PSBDaGVja19TdHlsZV9SYWRpbyAmJiAodHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF1baV1bc2V0dGluZy5jaGVja2VkQ29sXSB8fCAhdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF1baV0uY2hlY2tfVHJ1ZV9GdWxsKSkgew0KCQkJCQljaGtGbGFnLnRydWVGbGFnID0gZmFsc2U7DQoJCQkJfSBlbHNlIGlmIChzZXR0aW5nLmNoZWNrU3R5bGUgIT0gQ2hlY2tfU3R5bGVfUmFkaW8gJiYgdHJlZU5vZGVbc2V0dGluZy5jaGVja2VkQ29sXSAmJiAoIXRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdW2ldW3NldHRpbmcuY2hlY2tlZENvbF0gfHwgIXRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdW2ldLmNoZWNrX1RydWVfRnVsbCkpIHsNCgkJCQkJY2hrRmxhZy50cnVlRmxhZyA9IGZhbHNlOw0KCQkJCX0gZWxzZSBpZiAoc2V0dGluZy5jaGVja1N0eWxlICE9IENoZWNrX1N0eWxlX1JhZGlvICYmICF0cmVlTm9kZVtzZXR0aW5nLmNoZWNrZWRDb2xdICYmICh0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXVtzZXR0aW5nLmNoZWNrZWRDb2xdIHx8ICF0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXS5jaGVja19GYWxzZV9GdWxsKSkgew0KCQkJCQljaGtGbGFnLmZhbHNlRmxhZyA9IGZhbHNlOw0KCQkJCX0NCgkJCQlpZiAoIWNoa0ZsYWcudHJ1ZUZsYWcgfHwgIWNoa0ZsYWcuZmFsc2VGbGFnKSBicmVhazsNCgkJCX0NCgkJfQ0KCQl0cmVlTm9kZS5jaGVja19UcnVlX0Z1bGwgPSBjaGtGbGFnLnRydWVGbGFnOw0KCQl0cmVlTm9kZS5jaGVja19GYWxzZV9GdWxsID0gY2hrRmxhZy5mYWxzZUZsYWc7DQoJfQ0KDQoJZnVuY3Rpb24gc3dpdGNoTm9kZShzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQlpZiAodHJlZU5vZGUub3BlbiB8fCAodHJlZU5vZGUgJiYgdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0gJiYgdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID4gMCkpIHsNCgkJCWV4cGFuZEFuZENvbGxhcHNlTm9kZShzZXR0aW5nLCB0cmVlTm9kZSwgIXRyZWVOb2RlLm9wZW4pOw0KCQl9IGVsc2UgaWYgKHNldHRpbmcuYXN5bmMpIHsNCgkJCWlmICh0b29scy5hcHBseShzZXR0aW5nLmNhbGxiYWNrLmJlZm9yZUFzeW5jLCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSwgdHJ1ZSkgPT0gZmFsc2UpIHsNCgkJCQlleHBhbmRBbmRDb2xsYXBzZU5vZGUoc2V0dGluZywgdHJlZU5vZGUsICF0cmVlTm9kZS5vcGVuKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQlhc3luY0dldE5vZGUoc2V0dGluZywgdHJlZU5vZGUpOw0KCQl9IGVsc2UgaWYgKHRyZWVOb2RlKSB7DQoJCQlleHBhbmRBbmRDb2xsYXBzZU5vZGUoc2V0dGluZywgdHJlZU5vZGUsICF0cmVlTm9kZS5vcGVuKTsNCgkJfQ0KCX0NCg0KCWZ1bmN0aW9uIGFzeW5jR2V0Tm9kZShzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQl2YXIgaSwgbDsNCgkJaWYgKHRyZWVOb2RlICYmICh0cmVlTm9kZS5pc0FqYXhpbmcgfHwgIXRyZWVOb2RlLmlzUGFyZW50KSkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmICh0cmVlTm9kZSkgew0KCQkJdHJlZU5vZGUuaXNBamF4aW5nID0gdHJ1ZTsNCgkJCXZhciBpY29PYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19JY29uKTsNCgkJCWljb09iai5hdHRyKCJjbGFzcyIsICJpY29fbG9hZGluZyIpOw0KCQl9DQoNCgkJdmFyIHRtcFBhcmFtID0gIiI7DQoJCWZvciAoaSA9IDAsIGwgPSBzZXR0aW5nLmFzeW5jUGFyYW0ubGVuZ3RoOyB0cmVlTm9kZSAmJiBpIDwgbDsgaSsrKSB7DQoJCQl0bXBQYXJhbSArPSAodG1wUGFyYW0ubGVuZ3RoID4gMCA/ICImIjogIiIpICsgc2V0dGluZy5hc3luY1BhcmFtW2ldICsgIj0iICsgdHJlZU5vZGVbc2V0dGluZy5hc3luY1BhcmFtW2ldXTsNCgkJfQ0KCQlpZiAodG9vbHMuaXNBcnJheShzZXR0aW5nLmFzeW5jUGFyYW1PdGhlcikpIHsNCgkJCWZvciAoaSA9IDAsIGwgPSBzZXR0aW5nLmFzeW5jUGFyYW1PdGhlci5sZW5ndGg7IGkgPCBsOyBpICs9IDIpIHsNCgkJCQl0bXBQYXJhbSArPSAodG1wUGFyYW0ubGVuZ3RoID4gMCA/ICImIjogIiIpICsgc2V0dGluZy5hc3luY1BhcmFtT3RoZXJbaV0gKyAiPSIgKyBzZXR0aW5nLmFzeW5jUGFyYW1PdGhlcltpICsgMV07DQoJCQl9DQoJCX0gZWxzZSB7DQoJCQlmb3IgKHZhciBwIGluIHNldHRpbmcuYXN5bmNQYXJhbU90aGVyKSB7DQoJCQkJdG1wUGFyYW0gKz0gKHRtcFBhcmFtLmxlbmd0aCA+IDAgPyAiJiIgOiAiIikgKyBwICsgIj0iICsgc2V0dGluZy5hc3luY1BhcmFtT3RoZXJbcF07DQoJCQl9DQoJCX0NCg0KCQkkLmFqYXgoew0KCQkJdHlwZTogIlBPU1QiLA0KCQkJdXJsOiB0b29scy5hcHBseShzZXR0aW5nLmFzeW5jVXJsLCBbdHJlZU5vZGVdLCBzZXR0aW5nLmFzeW5jVXJsKSwNCgkJCWRhdGE6IHRtcFBhcmFtLA0KCQkJZGF0YVR5cGU6ICJ0ZXh0IiwNCgkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKG1zZykgew0KCQkJCXZhciBuZXdOb2RlcyA9IFtdOw0KCQkJCXRyeSB7DQoJCQkJCWlmICghbXNnIHx8IG1zZy5sZW5ndGggPT0gMCkgew0KCQkJCQkJbmV3Tm9kZXMgPSBbXTsNCgkJCQkJfSBlbHNlIGlmICh0eXBlb2YgbXNnID09ICJzdHJpbmciKSB7DQoJCQkJCQluZXdOb2RlcyA9IGV2YWwoIigiICsgbXNnICsgIikiKTsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCW5ld05vZGVzID0gbXNnOw0KCQkJCQl9DQoJCQkJfSBjYXRjaChlcnIpIHt9DQoNCgkJCQlpZiAodHJlZU5vZGUpIHRyZWVOb2RlLmlzQWpheGluZyA9IG51bGw7DQoJCQkJc2V0Tm9kZUxpbmVJY29zKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQlpZiAobmV3Tm9kZXMgJiYgbmV3Tm9kZXMgIT0gIiIpIHsNCgkJCQkJbmV3Tm9kZXMgPSB0b29scy5hcHBseShzZXR0aW5nLmFzeW5jRGF0YUZpbHRlciwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZSwgbmV3Tm9kZXNdLCBuZXdOb2Rlcyk7DQoJCQkJCWFkZFRyZWVOb2RlcyhzZXR0aW5nLCB0cmVlTm9kZSwgbmV3Tm9kZXMsIGZhbHNlKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQlhZGRUcmVlTm9kZXMoc2V0dGluZywgdHJlZU5vZGUsIFtdLCBmYWxzZSk7DQoJCQkJfQ0KCQkJCXNldHRpbmcudHJlZU9iai50cmlnZ2VyKFpUUkVFX0FTWU5DX1NVQ0NFU1MsIFtzZXR0aW5nLnRyZWVPYmpJZCwgdHJlZU5vZGUsIG1zZ10pOw0KDQoJCQl9LA0KCQkJZXJyb3I6IGZ1bmN0aW9uKFhNTEh0dHBSZXF1ZXN0LCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikgew0KCQkJCXNldHRpbmcuZXhwYW5kVHJpZ2dlckZsYWcgPSBmYWxzZTsNCgkJCQlzZXROb2RlTGluZUljb3Moc2V0dGluZywgdHJlZU5vZGUpOw0KCQkJCWlmICh0cmVlTm9kZSkgdHJlZU5vZGUuaXNBamF4aW5nID0gbnVsbDsNCgkJCQlzZXR0aW5nLnRyZWVPYmoudHJpZ2dlcihaVFJFRV9BU1lOQ19FUlJPUiwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZSwgWE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duXSk7DQoJCQl9DQoJCX0pOw0KCX0NCg0KCS8vIOWxleW8gCDmiJbogIUg5oqY5Y+gIOiKgueCueS4i+e6pw0KCWZ1bmN0aW9uIGV4cGFuZEFuZENvbGxhcHNlTm9kZShzZXR0aW5nLCB0cmVlTm9kZSwgZXhwYW5kU2lnbiwgYW5pbWF0ZVNpZ24sIGNhbGxiYWNrKSB7DQoJCWlmICghdHJlZU5vZGUgfHwgdHJlZU5vZGUub3BlbiA9PSBleHBhbmRTaWduKSB7DQoJCQl0b29scy5hcHBseShjYWxsYmFjaywgW10pOw0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmIChzZXR0aW5nLmV4cGFuZFRyaWdnZXJGbGFnKSB7DQoJCQljYWxsYmFjayA9IGZ1bmN0aW9uKCl7DQoJCQkJaWYgKHRyZWVOb2RlLm9wZW4pIHsNCgkJCQkJLy/op6blj5FleHBhbmTkuovku7YNCgkJCQkJc2V0dGluZy50cmVlT2JqLnRyaWdnZXIoWlRSRUVfRVhQQU5ELCBbc2V0dGluZy50cmVlT2JqSWQsIHRyZWVOb2RlXSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJLy/op6blj5Fjb2xsYXBzZeS6i+S7tg0KCQkJCQlzZXR0aW5nLnRyZWVPYmoudHJpZ2dlcihaVFJFRV9DT0xMQVBTRSwgW3NldHRpbmcudHJlZU9iaklkLCB0cmVlTm9kZV0pOw0KCQkJCX0NCgkJCX07DQoJCQlzZXR0aW5nLmV4cGFuZFRyaWdnZXJGbGFnID0gZmFsc2U7DQoJCX0NCg0KCQl2YXIgc3dpdGNoT2JqID0gJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfU3dpdGNoKTsNCgkJdmFyIGljb09iaiA9ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0ljb24pOw0KCQl2YXIgdWxPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19VbCk7DQoNCgkJaWYgKHRyZWVOb2RlLmlzUGFyZW50KSB7DQoJCQl0cmVlTm9kZS5vcGVuID0gIXRyZWVOb2RlLm9wZW47DQoJCQlpZiAodHJlZU5vZGUuaWNvbk9wZW4gJiYgdHJlZU5vZGUuaWNvbkNsb3NlKSB7DQoJCQkJaWNvT2JqLmF0dHIoInN0eWxlIiwgbWFrZU5vZGVJY29TdHlsZShzZXR0aW5nLCB0cmVlTm9kZSkpOw0KCQkJfQ0KDQoJCQlpZiAodHJlZU5vZGUub3Blbikgew0KCQkJCXJlcGxhY2VTd2l0Y2hDbGFzcyhzd2l0Y2hPYmosIEZvbGRlck1hcmtfT3Blbik7DQoJCQkJcmVwbGFjZUljb0NsYXNzKHRyZWVOb2RlLCBpY29PYmosIEZvbGRlck1hcmtfT3Blbik7DQoJCQkJaWYgKGFuaW1hdGVTaWduID09IGZhbHNlIHx8IHNldHRpbmcuZXhwYW5kU3BlZWQgPT0gIiIpIHsNCgkJCQkJdWxPYmouc2hvdygpOw0KCQkJCQl0b29scy5hcHBseShjYWxsYmFjaywgW10pOw0KCQkJCX0gZWxzZSB7DQoJCQkJCWlmICh0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXSAmJiB0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPiAwKSB7DQoJCQkJCQl1bE9iai5zaG93KHNldHRpbmcuZXhwYW5kU3BlZWQsIGNhbGxiYWNrKTsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCXVsT2JqLnNob3coKTsNCgkJCQkJCXRvb2xzLmFwcGx5KGNhbGxiYWNrLCBbXSk7DQoJCQkJCX0NCgkJCQl9DQoJCQl9IGVsc2Ugew0KCQkJCXJlcGxhY2VTd2l0Y2hDbGFzcyhzd2l0Y2hPYmosIEZvbGRlck1hcmtfQ2xvc2UpOw0KCQkJCXJlcGxhY2VJY29DbGFzcyh0cmVlTm9kZSwgaWNvT2JqLCBGb2xkZXJNYXJrX0Nsb3NlKTsNCgkJCQlpZiAoYW5pbWF0ZVNpZ24gPT0gZmFsc2UgfHwgc2V0dGluZy5leHBhbmRTcGVlZCA9PSAiIikgew0KCQkJCQl1bE9iai5oaWRlKCk7DQoJCQkJCXRvb2xzLmFwcGx5KGNhbGxiYWNrLCBbXSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJdWxPYmouaGlkZShzZXR0aW5nLmV4cGFuZFNwZWVkLCBjYWxsYmFjayk7DQoJCQkJfQ0KCQkJfQ0KCQl9IGVsc2Ugew0KCQkJdG9vbHMuYXBwbHkoY2FsbGJhY2ssIFtdKTsNCgkJfQ0KCX0NCg0KCS8v6YGN5Y6G5a2Q6IqC54K55bGV5byAIOaIliDmipjlj6ANCglmdW5jdGlvbiBleHBhbmRDb2xsYXBzZVNvbk5vZGUoc2V0dGluZywgdHJlZU5vZGUsIGV4cGFuZFNpZ24sIGFuaW1hdGVTaWduLCBjYWxsYmFjaykgew0KCQl2YXIgdHJlZU5vZGVzID0gKHRyZWVOb2RlKSA/IHRyZWVOb2RlW3NldHRpbmcubm9kZXNDb2xdOiBzZXR0aW5nLnJvb3Rbc2V0dGluZy5ub2Rlc0NvbF07DQoNCgkJLy/pkojlr7nliqjnlLvov5vooYzkvJjljJYs5LiA6Iis5p2l6K+05Y+q5pyJ5Zyo56ys5LiA5bGC55qE5pe25YCZ77yM5omN6L+b6KGM5Yqo55S75pWI5p6cDQoJCXZhciBzZWxmQW5pbWF0ZVNpZ24gPSAodHJlZU5vZGUpID8gZmFsc2UgOiBhbmltYXRlU2lnbjsNCgkJaWYgKHRyZWVOb2Rlcykgew0KCQkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQkJaWYgKHRyZWVOb2Rlc1tpXSkgZXhwYW5kQ29sbGFwc2VTb25Ob2RlKHNldHRpbmcsIHRyZWVOb2Rlc1tpXSwgZXhwYW5kU2lnbiwgc2VsZkFuaW1hdGVTaWduKTsNCgkJCX0NCgkJfQ0KCQkvL+S/neivgWNhbGxiYWNr5Y+q5omn6KGM5LiA5qyhDQoJCWV4cGFuZEFuZENvbGxhcHNlTm9kZShzZXR0aW5nLCB0cmVlTm9kZSwgZXhwYW5kU2lnbiwgYW5pbWF0ZVNpZ24sIGNhbGxiYWNrICk7DQoNCgl9DQoNCgkvL+mBjeWOhueItuiKgueCueWxleW8gCDmiJYg5oqY5Y+gDQoJZnVuY3Rpb24gZXhwYW5kQ29sbGFwc2VQYXJlbnROb2RlKHNldHRpbmcsIHRyZWVOb2RlLCBleHBhbmRTaWduLCBhbmltYXRlU2lnbiwgY2FsbGJhY2spIHsNCgkJLy/pkojlr7nliqjnlLvov5vooYzkvJjljJYs5LiA6Iis5p2l6K+05Y+q5pyJ5Zyo56ys5LiA5bGC55qE5pe25YCZ77yM5omN6L+b6KGM5Yqo55S75pWI5p6cDQoJCWlmICghdHJlZU5vZGUpIHJldHVybjsNCgkJaWYgKCF0cmVlTm9kZS5wYXJlbnROb2RlKSB7DQoJCQkvL+S/neivgWNhbGxiYWNr5Y+q5omn6KGM5LiA5qyhDQoJCQlleHBhbmRBbmRDb2xsYXBzZU5vZGUoc2V0dGluZywgdHJlZU5vZGUsIGV4cGFuZFNpZ24sIGFuaW1hdGVTaWduLCBjYWxsYmFjayk7DQoJCQlyZXR1cm4gOw0KCQl9IGVsc2Ugew0KCQkJZXhwYW5kQW5kQ29sbGFwc2VOb2RlKHNldHRpbmcsIHRyZWVOb2RlLCBleHBhbmRTaWduLCBhbmltYXRlU2lnbik7DQoJCX0NCg0KCQlpZiAodHJlZU5vZGUucGFyZW50Tm9kZSkgew0KCQkJZXhwYW5kQ29sbGFwc2VQYXJlbnROb2RlKHNldHRpbmcsIHRyZWVOb2RlLnBhcmVudE5vZGUsIGV4cGFuZFNpZ24sIGFuaW1hdGVTaWduLCBjYWxsYmFjayk7DQoJCX0NCgl9DQoNCgkvL+mBjeWOhuWtkOiKgueCueiuvue9rmxldmVsLOS4u+imgeeUqOS6juenu+WKqOiKgueCueWQjueahOWkhOeQhg0KCWZ1bmN0aW9uIHNldFNvbk5vZGVMZXZlbChzZXR0aW5nLCBwYXJlbnROb2RlLCB0cmVlTm9kZSkgew0KCQlpZiAoIXRyZWVOb2RlKSByZXR1cm47DQoJCXRyZWVOb2RlLmxldmVsID0gKHBhcmVudE5vZGUpPyBwYXJlbnROb2RlLmxldmVsICsgMSA6IDA7DQoJCWlmICghdHJlZU5vZGVbc2V0dGluZy5ub2Rlc0NvbF0pIHJldHVybjsNCgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCWlmICh0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXSkgc2V0U29uTm9kZUxldmVsKHNldHRpbmcsIHRyZWVOb2RlLCB0cmVlTm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXSk7DQoJCX0NCgl9DQoNCgkvL+WinuWKoOWtkOiKgueCuQ0KCWZ1bmN0aW9uIGFkZFRyZWVOb2RlcyhzZXR0aW5nLCBwYXJlbnROb2RlLCBuZXdOb2RlcywgaXNTaWxlbnQpIHsNCgkJaWYgKHNldHRpbmcua2VlcExlYWYgJiYgcGFyZW50Tm9kZSAmJiAhcGFyZW50Tm9kZS5pc1BhcmVudCkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmIChzZXR0aW5nLmlzU2ltcGxlRGF0YSkgew0KCQkJbmV3Tm9kZXMgPSB0cmFuc2Zvcm1Ub3pUcmVlRm9ybWF0KHNldHRpbmcsIG5ld05vZGVzKTsNCgkJfQ0KCQlpZiAocGFyZW50Tm9kZSkgew0KCQkJLy/nm67moIfoioLngrnlv4XpobvlnKjlvZPliY3moJHlhoUNCgkJCWlmIChzZXR0aW5nLnRyZWVPYmouZmluZCgiIyIgKyBwYXJlbnROb2RlLnRJZCkubGVuZ3RoID09IDApIHJldHVybjsNCg0KCQkJdmFyIHRhcmdldF9zd2l0Y2hPYmogPSAkKCIjIiArIHBhcmVudE5vZGUudElkICsgSURNYXJrX1N3aXRjaCk7DQoJCQl2YXIgdGFyZ2V0X2ljb09iaiA9ICQoIiMiICsgcGFyZW50Tm9kZS50SWQgKyBJRE1hcmtfSWNvbik7DQoJCQl2YXIgdGFyZ2V0X3VsT2JqID0gJCgiIyIgKyBwYXJlbnROb2RlLnRJZCArIElETWFya19VbCk7DQoNCgkJCS8v5aSE55CG6IqC54K55Zyo55uu5qCH6IqC54K555qE5Zu+54mH44CB57q/DQoJCQlpZiAoIXBhcmVudE5vZGUub3Blbikgew0KCQkJCXJlcGxhY2VTd2l0Y2hDbGFzcyh0YXJnZXRfc3dpdGNoT2JqLCBGb2xkZXJNYXJrX0Nsb3NlKTsNCgkJCQlyZXBsYWNlSWNvQ2xhc3MocGFyZW50Tm9kZSwgdGFyZ2V0X2ljb09iaiwgRm9sZGVyTWFya19DbG9zZSk7DQoJCQkJcGFyZW50Tm9kZS5vcGVuID0gZmFsc2U7DQoJCQkJdGFyZ2V0X3VsT2JqLmNzcyh7ImRpc3BsYXkiOiAibm9uZSJ9KTsNCgkJCX0NCg0KCQkJYWRkVHJlZU5vZGVzRGF0YShzZXR0aW5nLCBwYXJlbnROb2RlLCBuZXdOb2Rlcyk7DQoJCQlpbml0VHJlZU5vZGVzKHNldHRpbmcsIHBhcmVudE5vZGUubGV2ZWwgKyAxLCBuZXdOb2RlcywgcGFyZW50Tm9kZSk7DQoJCQkvL+WmguaenOmAieaLqeafkOiKgueCue+8jOWImeW/hemhu+WxleW8gOWFtuWFqOmDqOeItuiKgueCuQ0KCQkJaWYgKCFpc1NpbGVudCkgew0KCQkJCWV4cGFuZENvbGxhcHNlUGFyZW50Tm9kZShzZXR0aW5nLCBwYXJlbnROb2RlLCB0cnVlKTsNCgkJCX0NCgkJfSBlbHNlIHsNCgkJCWFkZFRyZWVOb2Rlc0RhdGEoc2V0dGluZywgc2V0dGluZy5yb290LCBuZXdOb2Rlcyk7DQoJCQlpbml0VHJlZU5vZGVzKHNldHRpbmcsIDAsIG5ld05vZGVzLCBudWxsKTsNCgkJfQ0KCX0NCg0KCS8v5aKe5Yqg6IqC54K55pWw5o2uDQoJZnVuY3Rpb24gYWRkVHJlZU5vZGVzRGF0YShzZXR0aW5nLCBwYXJlbnROb2RlLCB0cmVlbm9kZXMpIHsNCgkJaWYgKCFwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdKSBwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdID0gW107DQoJCWlmIChwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCA+IDApIHsNCgkJCXBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1bcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggLSAxXS5pc0xhc3ROb2RlID0gZmFsc2U7DQoJCQlzZXROb2RlTGluZUljb3Moc2V0dGluZywgcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCAtIDFdKTsNCgkJfQ0KCQlwYXJlbnROb2RlLmlzUGFyZW50ID0gdHJ1ZTsNCgkJcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXSA9IHBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0uY29uY2F0KHRyZWVub2Rlcyk7DQoJfQ0KDQoJLy/np7vliqjlrZDoioLngrkNCglmdW5jdGlvbiBtb3ZlVHJlZU5vZGUoc2V0dGluZywgdGFyZ2V0Tm9kZSwgdHJlZU5vZGUsIG1vdmVUeXBlLCBhbmltYXRlU2lnbikgew0KCQlpZiAodGFyZ2V0Tm9kZSA9PSB0cmVlTm9kZSkgcmV0dXJuOw0KCQlpZiAoc2V0dGluZy5rZWVwTGVhZiAmJiB0YXJnZXROb2RlICYmICF0YXJnZXROb2RlLmlzUGFyZW50ICYmIG1vdmVUeXBlID09IE1vdmVUeXBlX0lubmVyKSByZXR1cm47DQoJCXZhciBvbGRQYXJlbnROb2RlID0gdHJlZU5vZGUucGFyZW50Tm9kZSA9PSBudWxsID8gc2V0dGluZy5yb290OiB0cmVlTm9kZS5wYXJlbnROb2RlOw0KDQoJCXZhciB0YXJnZXROb2RlSXNSb290ID0gKHRhcmdldE5vZGUgPT09IG51bGwgfHwgdGFyZ2V0Tm9kZSA9PSBzZXR0aW5nLnJvb3QpOw0KCQlpZiAodGFyZ2V0Tm9kZUlzUm9vdCAmJiB0YXJnZXROb2RlID09PSBudWxsKSB0YXJnZXROb2RlID0gc2V0dGluZy5yb290Ow0KCQlpZiAodGFyZ2V0Tm9kZUlzUm9vdCkgbW92ZVR5cGUgPSBNb3ZlVHlwZV9Jbm5lcjsNCgkJdmFyIHRhcmdldFBhcmVudE5vZGUgPSAodGFyZ2V0Tm9kZS5wYXJlbnROb2RlID8gdGFyZ2V0Tm9kZS5wYXJlbnROb2RlIDogc2V0dGluZy5yb290KTsNCg0KCQlpZiAobW92ZVR5cGUgIT0gTW92ZVR5cGVfQmVmb3JlICYmIG1vdmVUeXBlICE9IE1vdmVUeXBlX0FmdGVyKSB7DQoJCQltb3ZlVHlwZSA9IE1vdmVUeXBlX0lubmVyOw0KCQl9DQoNCgkJLy/ov5vooYzmlbDmja7nu5PmnoTkv67mraMNCgkJdmFyIGksbDsNCgkJdmFyIHRtcFNyY0luZGV4ID0gLTE7DQoJCXZhciB0bXBUYXJnZXRJbmRleCA9IDA7DQoJCXZhciBvbGROZWlnaGJvciA9IG51bGw7DQoJCXZhciBuZXdOZWlnaGJvciA9IG51bGw7DQoJCWlmICh0cmVlTm9kZS5pc0ZpcnN0Tm9kZSkgew0KCQkJdG1wU3JjSW5kZXggPSAwOw0KCQkJaWYgKG9sZFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID4gMSApIHsNCgkJCQlvbGROZWlnaGJvciA9IG9sZFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1bMV07DQoJCQkJb2xkTmVpZ2hib3IuaXNGaXJzdE5vZGUgPSB0cnVlOw0KCQkJfQ0KCQl9IGVsc2UgaWYgKHRyZWVOb2RlLmlzTGFzdE5vZGUpIHsNCgkJCXRtcFNyY0luZGV4ID0gb2xkUGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggLTE7DQoJCQlvbGROZWlnaGJvciA9IG9sZFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1bdG1wU3JjSW5kZXggLSAxXTsNCgkJCW9sZE5laWdoYm9yLmlzTGFzdE5vZGUgPSB0cnVlOw0KCQl9IGVsc2Ugew0KCQkJZm9yIChpID0gMCwgbCA9IG9sZFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQkJaWYgKG9sZFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1baV0udElkID09IHRyZWVOb2RlLnRJZCkgdG1wU3JjSW5kZXggPSBpOw0KCQkJfQ0KCQl9DQoJCWlmICh0bXBTcmNJbmRleCA+PSAwKSB7DQoJCQlvbGRQYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLnNwbGljZSh0bXBTcmNJbmRleCwgMSk7DQoJCX0NCgkJaWYgKG1vdmVUeXBlICE9IE1vdmVUeXBlX0lubmVyKSB7DQoJCQlmb3IgKGkgPSAwLCBsID0gdGFyZ2V0UGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCQlpZiAodGFyZ2V0UGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtpXS50SWQgPT0gdGFyZ2V0Tm9kZS50SWQpIHRtcFRhcmdldEluZGV4ID0gaTsNCgkJCX0NCgkJfQ0KCQlpZiAobW92ZVR5cGUgPT0gTW92ZVR5cGVfSW5uZXIpIHsNCgkJCWlmICh0YXJnZXROb2RlSXNSb290KSB7DQoJCQkJLy/miJDkuLrmoLnoioLngrnvvIzliJnkuI3mk43kvZznm67moIfoioLngrnmlbDmja4NCgkJCQl0cmVlTm9kZS5wYXJlbnROb2RlID0gbnVsbDsNCgkJCX0gZWxzZSB7DQoJCQkJdGFyZ2V0Tm9kZS5pc1BhcmVudCA9IHRydWU7DQoJCQkJdHJlZU5vZGUucGFyZW50Tm9kZSA9IHRhcmdldE5vZGU7DQoJCQl9DQoNCgkJCWlmICghdGFyZ2V0Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXSkgdGFyZ2V0Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXSA9IG5ldyBBcnJheSgpOw0KCQkJaWYgKHRhcmdldE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID4gMCkgew0KCQkJCW5ld05laWdoYm9yID0gdGFyZ2V0Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVt0YXJnZXROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCAtIDFdOw0KCQkJCW5ld05laWdoYm9yLmlzTGFzdE5vZGUgPSBmYWxzZTsNCgkJCX0NCgkJCXRhcmdldE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0uc3BsaWNlKHRhcmdldE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoLCAwLCB0cmVlTm9kZSk7DQoJCQl0cmVlTm9kZS5pc0xhc3ROb2RlID0gdHJ1ZTsNCgkJCXRyZWVOb2RlLmlzRmlyc3ROb2RlID0gKHRhcmdldE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID09IDEpOw0KCQl9IGVsc2UgaWYgKHRhcmdldE5vZGUuaXNGaXJzdE5vZGUgJiYgbW92ZVR5cGUgPT0gTW92ZVR5cGVfQmVmb3JlKSB7DQoJCQl0YXJnZXRQYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLnNwbGljZSh0bXBUYXJnZXRJbmRleCwgMCwgdHJlZU5vZGUpOw0KCQkJbmV3TmVpZ2hib3IgPSB0YXJnZXROb2RlOw0KCQkJbmV3TmVpZ2hib3IuaXNGaXJzdE5vZGUgPSBmYWxzZTsNCgkJCXRyZWVOb2RlLnBhcmVudE5vZGUgPSB0YXJnZXROb2RlLnBhcmVudE5vZGU7DQoJCQl0cmVlTm9kZS5pc0ZpcnN0Tm9kZSA9IHRydWU7DQoJCQl0cmVlTm9kZS5pc0xhc3ROb2RlID0gZmFsc2U7DQoNCgkJfSBlbHNlIGlmICh0YXJnZXROb2RlLmlzTGFzdE5vZGUgJiYgbW92ZVR5cGUgPT0gTW92ZVR5cGVfQWZ0ZXIpIHsNCgkJCXRhcmdldFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0uc3BsaWNlKHRtcFRhcmdldEluZGV4ICsgMSwgMCwgdHJlZU5vZGUpOw0KCQkJbmV3TmVpZ2hib3IgPSB0YXJnZXROb2RlOw0KCQkJbmV3TmVpZ2hib3IuaXNMYXN0Tm9kZSA9IGZhbHNlOw0KCQkJdHJlZU5vZGUucGFyZW50Tm9kZSA9IHRhcmdldE5vZGUucGFyZW50Tm9kZTsNCgkJCXRyZWVOb2RlLmlzRmlyc3ROb2RlID0gZmFsc2U7DQoJCQl0cmVlTm9kZS5pc0xhc3ROb2RlID0gdHJ1ZTsNCg0KCQl9IGVsc2Ugew0KCQkJaWYgKG1vdmVUeXBlID09IE1vdmVUeXBlX0JlZm9yZSkgew0KCQkJCXRhcmdldFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0uc3BsaWNlKHRtcFRhcmdldEluZGV4LCAwLCB0cmVlTm9kZSk7DQoJCQl9IGVsc2Ugew0KCQkJCXRhcmdldFBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0uc3BsaWNlKHRtcFRhcmdldEluZGV4ICsgMSwgMCwgdHJlZU5vZGUpOw0KCQkJfQ0KCQkJdHJlZU5vZGUucGFyZW50Tm9kZSA9IHRhcmdldE5vZGUucGFyZW50Tm9kZTsNCgkJCXRyZWVOb2RlLmlzRmlyc3ROb2RlID0gZmFsc2U7DQoJCQl0cmVlTm9kZS5pc0xhc3ROb2RlID0gZmFsc2U7DQoJCX0NCgkJZml4UGFyZW50S2V5VmFsdWUoc2V0dGluZywgdHJlZU5vZGUpOw0KDQoJCXNldFNvbk5vZGVMZXZlbChzZXR0aW5nLCB0cmVlTm9kZS5wYXJlbnROb2RlLCB0cmVlTm9kZSk7DQoNCgkJLy/ov5vooYxIVE1M57uT5p6E5L+u5q2jDQoJCXZhciB0YXJnZXRPYmo7DQoJCXZhciB0YXJnZXRfc3dpdGNoT2JqOw0KCQl2YXIgdGFyZ2V0X2ljb09iajsNCgkJdmFyIHRhcmdldF91bE9iajsNCg0KCQlpZiAodGFyZ2V0Tm9kZUlzUm9vdCkgew0KCQkJLy/ovaznp7vliLDmoLnoioLngrkNCgkJCXRhcmdldE9iaiA9IHNldHRpbmcudHJlZU9iajsNCgkJCXRhcmdldF91bE9iaiA9IHRhcmdldE9iajsNCgkJfSBlbHNlIHsNCgkJCS8v6L2s56e75Yiw5a2Q6IqC54K5DQoJCQl0YXJnZXRPYmogPSAkKCIjIiArIHRhcmdldE5vZGUudElkKTsNCgkJCXRhcmdldF9zd2l0Y2hPYmogPSAkKCIjIiArIHRhcmdldE5vZGUudElkICsgSURNYXJrX1N3aXRjaCk7DQoJCQl0YXJnZXRfaWNvT2JqID0gJCgiIyIgKyB0YXJnZXROb2RlLnRJZCArIElETWFya19JY29uKTsNCgkJCXRhcmdldF91bE9iaiA9ICQoIiMiICsgdGFyZ2V0Tm9kZS50SWQgKyBJRE1hcmtfVWwpOw0KCQl9DQoNCgkJLy/lpITnkIbnm67moIfoioLngrkNCgkJaWYgKG1vdmVUeXBlID09IE1vdmVUeXBlX0lubmVyKSB7DQoJCQlyZXBsYWNlU3dpdGNoQ2xhc3ModGFyZ2V0X3N3aXRjaE9iaiwgRm9sZGVyTWFya19PcGVuKTsNCgkJCXJlcGxhY2VJY29DbGFzcyh0YXJnZXROb2RlLCB0YXJnZXRfaWNvT2JqLCBGb2xkZXJNYXJrX09wZW4pOw0KCQkJdGFyZ2V0Tm9kZS5vcGVuID0gdHJ1ZTsNCgkJCXRhcmdldF91bE9iai5jc3Moew0KCQkJCSJkaXNwbGF5IjoiYmxvY2siDQoJCQl9KTsNCgkJCXRhcmdldF91bE9iai5hcHBlbmQoJCgiIyIgKyB0cmVlTm9kZS50SWQpLnJlbW92ZShudWxsLCB0cnVlKSk7DQoJCX0gZWxzZSBpZiAobW92ZVR5cGUgPT0gTW92ZVR5cGVfQmVmb3JlKSB7DQoJCQl0YXJnZXRPYmouYmVmb3JlKCQoIiMiICsgdHJlZU5vZGUudElkKS5yZW1vdmUobnVsbCwgdHJ1ZSkpOw0KDQoJCX0gZWxzZSBpZiAobW92ZVR5cGUgPT0gTW92ZVR5cGVfQWZ0ZXIpIHsNCgkJCXRhcmdldE9iai5hZnRlcigkKCIjIiArIHRyZWVOb2RlLnRJZCkucmVtb3ZlKG51bGwsIHRydWUpKTsNCgkJfQ0KDQoJCS8v5aSE55CG6KKr56e75Yqo55qE6IqC54K5DQoJCXNldE5vZGVMaW5lSWNvcyhzZXR0aW5nLCB0cmVlTm9kZSk7DQoNCgkJLy/lpITnkIbljp/oioLngrnnmoTniLboioLngrkNCgkJaWYgKCFzZXR0aW5nLmtlZXBQYXJlbnQgJiYgb2xkUGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPCAxKSB7DQoJCQkvL+WOn+aJgOWcqOeItuiKgueCueaXoOWtkOiKgueCuQ0KCQkJb2xkUGFyZW50Tm9kZS5pc1BhcmVudCA9IGZhbHNlOw0KCQkJdmFyIHRtcF91bE9iaiA9ICQoIiMiICsgb2xkUGFyZW50Tm9kZS50SWQgKyBJRE1hcmtfVWwpOw0KCQkJdmFyIHRtcF9zd2l0Y2hPYmogPSAkKCIjIiArIG9sZFBhcmVudE5vZGUudElkICsgSURNYXJrX1N3aXRjaCk7DQoJCQl2YXIgdG1wX2ljb09iaiA9ICQoIiMiICsgb2xkUGFyZW50Tm9kZS50SWQgKyBJRE1hcmtfSWNvbik7DQoJCQlyZXBsYWNlU3dpdGNoQ2xhc3ModG1wX3N3aXRjaE9iaiwgRm9sZGVyTWFya19Eb2N1KTsNCgkJCXJlcGxhY2VJY29DbGFzcyhvbGRQYXJlbnROb2RlLCB0bXBfaWNvT2JqLCBGb2xkZXJNYXJrX0RvY3UpOw0KCQkJdG1wX3VsT2JqLmNzcygiZGlzcGxheSIsICJub25lIik7DQoNCgkJfSBlbHNlIGlmIChvbGROZWlnaGJvcikgew0KCQkJLy/ljp/miYDlnKjkvY3nva7pnIDopoHlpITnkIbnmoTnm7jpgrvoioLngrkNCgkJCXNldE5vZGVMaW5lSWNvcyhzZXR0aW5nLCBvbGROZWlnaGJvcik7DQoJCX0NCg0KCQkvL+WkhOeQhuebruagh+iKgueCueeahOebuOmCu+iKgueCuQ0KCQlpZiAobmV3TmVpZ2hib3IpIHsNCgkJCXNldE5vZGVMaW5lSWNvcyhzZXR0aW5nLCBuZXdOZWlnaGJvcik7DQoJCX0NCg0KCQkvL+S/ruato+eItuiKgueCuUNoZWNr54q25oCBDQoJCWlmIChzZXR0aW5nLmNoZWNrYWJsZSkgew0KCQkJcmVwYWlyQ2hrQ2xhc3Moc2V0dGluZywgb2xkUGFyZW50Tm9kZSk7DQoJCQlyZXBhaXJQYXJlbnRDaGtDbGFzc1dpdGhTZWxmKHNldHRpbmcsIG9sZFBhcmVudE5vZGUpOw0KCQkJaWYgKG9sZFBhcmVudE5vZGUgIT0gdHJlZU5vZGUucGFyZW50KQ0KCQkJCXJlcGFpclBhcmVudENoa0NsYXNzV2l0aFNlbGYoc2V0dGluZywgdHJlZU5vZGUpOw0KCQl9DQoNCgkJLy/np7vliqjlkI7vvIzliJnlv4XpobvlsZXlvIDmlrDkvY3nva7nmoTlhajpg6jniLboioLngrkNCgkJZXhwYW5kQ29sbGFwc2VQYXJlbnROb2RlKHNldHRpbmcsIHRyZWVOb2RlLnBhcmVudE5vZGUsIHRydWUsIGFuaW1hdGVTaWduKTsNCgl9DQoNCgkvL+S/ruato3BJZA0KCWZ1bmN0aW9uIGZpeFBhcmVudEtleVZhbHVlKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCWlmIChzZXR0aW5nLmlzU2ltcGxlRGF0YSkgew0KCQkJdHJlZU5vZGVbc2V0dGluZy50cmVlTm9kZVBhcmVudEtleV0gPSB0cmVlTm9kZS5wYXJlbnROb2RlID8gdHJlZU5vZGUucGFyZW50Tm9kZVtzZXR0aW5nLnRyZWVOb2RlS2V5XSA6IHNldHRpbmcucm9vdFBJRDsNCgkJfQ0KCX0NCg0KCS8v57yW6L6R5a2Q6IqC54K55ZCN56ewDQoJZnVuY3Rpb24gZWRpdFRyZWVOb2RlKHNldHRpbmcsIHRyZWVOb2RlKSB7DQoJCXRyZWVOb2RlLmVkaXROYW1lU3RhdHVzID0gdHJ1ZTsNCgkJcmVtb3ZlVHJlZURvbShzZXR0aW5nLCB0cmVlTm9kZSk7DQoJCXNlbGVjdE5vZGUoc2V0dGluZywgdHJlZU5vZGUpOw0KCX0NCg0KCS8v5Yig6Zmk5a2Q6IqC54K5DQoJZnVuY3Rpb24gcmVtb3ZlVHJlZU5vZGUoc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJdmFyIHBhcmVudE5vZGUgPSB0cmVlTm9kZS5wYXJlbnROb2RlID09IG51bGwgPyBzZXR0aW5nLnJvb3Q6IHRyZWVOb2RlLnBhcmVudE5vZGU7DQoJCWlmIChzZXR0aW5nLmN1clRyZWVOb2RlID09PSB0cmVlTm9kZSkgc2V0dGluZy5jdXJUcmVlTm9kZSA9IG51bGw7DQoJCWlmIChzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSA9PT0gdHJlZU5vZGUpIHNldHRpbmcuY3VyRWRpdFRyZWVOb2RlID0gbnVsbDsNCg0KCQkkKCIjIiArIHRyZWVOb2RlLnRJZCkucmVtb3ZlKCk7DQoJCXJlbW92ZUNhY2hlKHNldHRpbmcsIHRyZWVOb2RlKTsNCg0KCQkvL+i/m+ihjOaVsOaNrue7k+aehOS/ruatow0KCQl2YXIgdG1wU3JjSW5kZXggPSAtMTsNCgkJZm9yICh2YXIgaSA9IDAsIGwgPSBwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJaWYgKHBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1baV0udElkID09IHRyZWVOb2RlLnRJZCkgdG1wU3JjSW5kZXggPSBpOw0KCQl9DQoJCWlmICh0bXBTcmNJbmRleCA+PSAwKSB7DQoJCQlwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLnNwbGljZSh0bXBTcmNJbmRleCwgMSk7DQoJCX0NCgkJdmFyIHRtcF91bE9iaix0bXBfc3dpdGNoT2JqLHRtcF9pY29PYmo7DQoNCgkJLy/lpITnkIbljp/oioLngrnnmoTniLboioLngrnnmoTlm77moIfjgIHnur8NCgkJaWYgKCFzZXR0aW5nLmtlZXBQYXJlbnQgJiYgcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPCAxKSB7DQoJCQkvL+WOn+aJgOWcqOeItuiKgueCueaXoOWtkOiKgueCuQ0KCQkJcGFyZW50Tm9kZS5pc1BhcmVudCA9IGZhbHNlOw0KCQkJcGFyZW50Tm9kZS5vcGVuID0gZmFsc2U7DQoJCQl0bXBfdWxPYmogPSAkKCIjIiArIHBhcmVudE5vZGUudElkICsgSURNYXJrX1VsKTsNCgkJCXRtcF9zd2l0Y2hPYmogPSAkKCIjIiArIHBhcmVudE5vZGUudElkICsgSURNYXJrX1N3aXRjaCk7DQoJCQl0bXBfaWNvT2JqID0gJCgiIyIgKyBwYXJlbnROb2RlLnRJZCArIElETWFya19JY29uKTsNCgkJCXJlcGxhY2VTd2l0Y2hDbGFzcyh0bXBfc3dpdGNoT2JqLCBGb2xkZXJNYXJrX0RvY3UpOw0KCQkJcmVwbGFjZUljb0NsYXNzKHBhcmVudE5vZGUsIHRtcF9pY29PYmosIEZvbGRlck1hcmtfRG9jdSk7DQoJCQl0bXBfdWxPYmouY3NzKCJkaXNwbGF5IiwgIm5vbmUiKTsNCg0KCQl9IGVsc2UgaWYgKHNldHRpbmcuc2hvd0xpbmUgJiYgcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPiAwKSB7DQoJCQkvL+WOn+aJgOWcqOeItuiKgueCueacieWtkOiKgueCuQ0KCQkJcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCAtIDFdLmlzTGFzdE5vZGUgPSB0cnVlOw0KCQkJcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXVtwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdLmxlbmd0aCAtIDFdLmlzRmlyc3ROb2RlID0gKHBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoID09IDEpOw0KCQkJdG1wX3VsT2JqID0gJCgiIyIgKyBwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdW3BhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoIC0gMV0udElkICsgSURNYXJrX1VsKTsNCgkJCXRtcF9zd2l0Y2hPYmogPSAkKCIjIiArIHBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1bcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggLSAxXS50SWQgKyBJRE1hcmtfU3dpdGNoKTsNCgkJCXRtcF9pY29PYmogPSAkKCIjIiArIHBhcmVudE5vZGVbc2V0dGluZy5ub2Rlc0NvbF1bcGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggLSAxXS50SWQgKyBJRE1hcmtfSWNvbik7DQoJCQlpZiAocGFyZW50Tm9kZSA9PSBzZXR0aW5nLnJvb3QpIHsNCgkJCQlpZiAocGFyZW50Tm9kZVtzZXR0aW5nLm5vZGVzQ29sXS5sZW5ndGggPT0gMSkgew0KCQkJCQkvL+WOn+S4uuagueiKgueCuSDvvIzkuJTnp7vliqjlkI7lj6rmnInkuIDkuKrmoLnoioLngrkNCgkJCQkJcmVwbGFjZVN3aXRjaENsYXNzKHRtcF9zd2l0Y2hPYmosIExpbmVNYXJrX1Jvb3QpOw0KCQkJCX0gZWxzZSB7DQoJCQkJCXZhciB0bXBfZmlyc3Rfc3dpdGNoT2JqID0gJCgiIyIgKyBwYXJlbnROb2RlW3NldHRpbmcubm9kZXNDb2xdWzBdLnRJZCArIElETWFya19Td2l0Y2gpOw0KCQkJCQlyZXBsYWNlU3dpdGNoQ2xhc3ModG1wX2ZpcnN0X3N3aXRjaE9iaiwgTGluZU1hcmtfUm9vdHMpOw0KCQkJCQlyZXBsYWNlU3dpdGNoQ2xhc3ModG1wX3N3aXRjaE9iaiwgTGluZU1hcmtfQm90dG9tKTsNCgkJCQl9DQoJCQl9IGVsc2Ugew0KCQkJCXJlcGxhY2VTd2l0Y2hDbGFzcyh0bXBfc3dpdGNoT2JqLCBMaW5lTWFya19Cb3R0b20pOw0KCQkJfQ0KDQoJCQl0bXBfdWxPYmoucmVtb3ZlQ2xhc3MoTGluZU1hcmtfTGluZSk7DQoJCX0NCgl9DQoNCgkvL+agueaNriB0SWQg6I635Y+WIOiKgueCueeahOaVsOaNruWvueixoQ0KCWZ1bmN0aW9uIGdldFRyZWVOb2RlQnlUSWQoc2V0dGluZywgdHJlZUlkKSB7DQoJCXJldHVybiB6VHJlZU5vZGVDYWNoZVtzZXR0aW5nLnRyZWVPYmpJZF1bdHJlZUlkXTsNCgl9DQoJZnVuY3Rpb24gYWRkQ2FjaGUoc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJelRyZWVOb2RlQ2FjaGVbc2V0dGluZy50cmVlT2JqSWRdW3RyZWVOb2RlLnRJZF0gPSB0cmVlTm9kZTsNCgl9DQoJZnVuY3Rpb24gcmVtb3ZlQ2FjaGUoc2V0dGluZywgdHJlZU5vZGUpIHsNCgkJZGVsZXRlIHpUcmVlTm9kZUNhY2hlW3NldHRpbmcudHJlZU9iaklkXVt0cmVlTm9kZS50SWRdOw0KCX0NCgkvL+agueaNruWUr+S4gOWxnuaApyDojrflj5Yg6IqC54K555qE5pWw5o2u5a+56LGhDQoJZnVuY3Rpb24gZ2V0VHJlZU5vZGVCeVBhcmFtKHNldHRpbmcsIHRyZWVOb2Rlcywga2V5LCB2YWx1ZSkgew0KCQlpZiAoIXRyZWVOb2RlcyB8fCAha2V5KSByZXR1cm4gbnVsbDsNCgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQlpZiAodHJlZU5vZGVzW2ldW2tleV0gPT0gdmFsdWUpIHsNCgkJCQlyZXR1cm4gdHJlZU5vZGVzW2ldOw0KCQkJfQ0KCQkJdmFyIHRtcCA9IGdldFRyZWVOb2RlQnlQYXJhbShzZXR0aW5nLCB0cmVlTm9kZXNbaV1bc2V0dGluZy5ub2Rlc0NvbF0sIGtleSwgdmFsdWUpOw0KCQkJaWYgKHRtcCkgcmV0dXJuIHRtcDsNCgkJfQ0KCQlyZXR1cm4gbnVsbDsNCgl9DQoJLy/moLnmja7lsZ7mgKcg6I635Y+WIOiKgueCueeahOaVsOaNruWvueixoembhuWQiA0KCWZ1bmN0aW9uIGdldFRyZWVOb2Rlc0J5UGFyYW0oc2V0dGluZywgdHJlZU5vZGVzLCBrZXksIHZhbHVlKSB7DQoJCWlmICghdHJlZU5vZGVzIHx8ICFrZXkpIHJldHVybiBbXTsNCgkJdmFyIHJlc3VsdCA9IFtdOw0KCQlmb3IgKHZhciBpID0gMCwgbCA9IHRyZWVOb2Rlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCgkJCWlmICh0cmVlTm9kZXNbaV1ba2V5XSA9PSB2YWx1ZSkgew0KCQkJCXJlc3VsdC5wdXNoKHRyZWVOb2Rlc1tpXSk7DQoJCQl9DQoJCQlyZXN1bHQgPSByZXN1bHQuY29uY2F0KGdldFRyZWVOb2Rlc0J5UGFyYW0oc2V0dGluZywgdHJlZU5vZGVzW2ldW3NldHRpbmcubm9kZXNDb2xdLCBrZXksIHZhbHVlKSk7DQoJCX0NCgkJcmV0dXJuIHJlc3VsdDsNCgl9DQoJLy/moLnmja7lsZ7mgKcg5qih57OK5pCc57Si6I635Y+WIOiKgueCueeahOaVsOaNruWvueixoembhuWQiO+8iOS7hemZkFN0cmluZ++8iQ0KCWZ1bmN0aW9uIGdldFRyZWVOb2Rlc0J5UGFyYW1GdXp6eShzZXR0aW5nLCB0cmVlTm9kZXMsIGtleSwgdmFsdWUpIHsNCgkJaWYgKCF0cmVlTm9kZXMgfHwgIWtleSkgcmV0dXJuIFtdOw0KCQl2YXIgcmVzdWx0ID0gW107DQoJCWZvciAodmFyIGkgPSAwLCBsID0gdHJlZU5vZGVzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJaWYgKHR5cGVvZiB0cmVlTm9kZXNbaV1ba2V5XSA9PSAic3RyaW5nIiAmJiB0cmVlTm9kZXNbaV1ba2V5XS5pbmRleE9mKHZhbHVlKT4tMSkgew0KCQkJCXJlc3VsdC5wdXNoKHRyZWVOb2Rlc1tpXSk7DQoJCQl9DQoJCQlyZXN1bHQgPSByZXN1bHQuY29uY2F0KGdldFRyZWVOb2Rlc0J5UGFyYW1GdXp6eShzZXR0aW5nLCB0cmVlTm9kZXNbaV1bc2V0dGluZy5ub2Rlc0NvbF0sIGtleSwgdmFsdWUpKTsNCgkJfQ0KCQlyZXR1cm4gcmVzdWx0Ow0KCX0NCg0KCS8v6K6+572u6IqC54K55Li65b2T5YmN6YCJ5Lit6IqC54K5DQoJZnVuY3Rpb24gc2VsZWN0Tm9kZShzZXR0aW5nLCB0cmVlTm9kZSkgew0KCQlpZiAoc2V0dGluZy5jdXJUcmVlTm9kZSA9PSB0cmVlTm9kZSAmJiAoKHNldHRpbmcuY3VyRWRpdFRyZWVOb2RlID09IHRyZWVOb2RlICYmIHRyZWVOb2RlLmVkaXROYW1lU3RhdHVzKSkpIHtyZXR1cm47fQ0KCQlzdC5jYW5jZWxQcmVFZGl0Tm9kZShzZXR0aW5nKTsNCgkJc3QuY2FuY2VsUHJlU2VsZWN0ZWROb2RlKHNldHRpbmcpOw0KDQoJCWlmIChzZXR0aW5nLmVkaXRhYmxlICYmIHRyZWVOb2RlLmVkaXROYW1lU3RhdHVzKSB7DQoJCQkkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19TcGFuKS5odG1sKCI8aW5wdXQgdHlwZT10ZXh0IGNsYXNzPSdyZW5hbWUnIGlkPSciICsgdHJlZU5vZGUudElkICsgSURNYXJrX0lucHV0ICsgIicgdHJlZU5vZGUiICsgSURNYXJrX0lucHV0ICsgIiA+Iik7DQoNCgkJCXZhciBpbnB1dE9iaiA9ICQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0lucHV0KTsNCgkJCXNldHRpbmcuY3VyRWRpdElucHV0ID0gaW5wdXRPYmo7DQoJCQlpbnB1dE9iai5hdHRyKCJ2YWx1ZSIsIHRyZWVOb2RlW3NldHRpbmcubmFtZUNvbF0pOw0KCQkJdG9vbHMuaW5wdXRGb2N1cyhpbnB1dE9iaik7DQoNCgkJCS8v5oum5oiqQeeahGNsaWNrIGRibGNsaWNr55uR5ZCsDQoJCQlpbnB1dE9iai5iaW5kKCdibHVyJywgZnVuY3Rpb24oZXZlbnQpIHsNCgkJCQlpZiAoc3QuY2hlY2tFdmVudChzZXR0aW5nKSkgew0KCQkJCQl0cmVlTm9kZS5lZGl0TmFtZVN0YXR1cyA9IGZhbHNlOw0KCQkJCQlzZWxlY3ROb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQl9DQoJCQl9KS5iaW5kKCdrZXl1cCcsIGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQkJaWYgKGV2ZW50LmtleUNvZGU9PSIxMyIpIHsNCgkJCQkJaWYgKHN0LmNoZWNrRXZlbnQoc2V0dGluZykpIHsNCgkJCQkJCXRyZWVOb2RlLmVkaXROYW1lU3RhdHVzID0gZmFsc2U7DQoJCQkJCQlzZWxlY3ROb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQkJfQ0KCQkJCX0gZWxzZSBpZiAoZXZlbnQua2V5Q29kZT09IjI3Iikgew0KCQkJCQlpbnB1dE9iai5hdHRyKCJ2YWx1ZSIsIHRyZWVOb2RlW3NldHRpbmcubmFtZUNvbF0pOw0KCQkJCQl0cmVlTm9kZS5lZGl0TmFtZVN0YXR1cyA9IGZhbHNlOw0KCQkJCQlzZWxlY3ROb2RlKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQl9DQoJCQl9KS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQkJcmV0dXJuIGZhbHNlOw0KCQkJfSkuYmluZCgnZGJsY2xpY2snLCBmdW5jdGlvbihldmVudCkgew0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0pOw0KDQoJCQkkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19BKS5hZGRDbGFzcyhDbGFzc19DdXJTZWxlY3RlZE5vZGVfRWRpdCk7DQoJCQlzZXR0aW5nLmN1ckVkaXRUcmVlTm9kZSA9IHRyZWVOb2RlOw0KCQl9IGVsc2Ugew0KCQkJJCgiIyIgKyB0cmVlTm9kZS50SWQgKyBJRE1hcmtfQSkuYWRkQ2xhc3MoQ2xhc3NfQ3VyU2VsZWN0ZWROb2RlKTsNCgkJfQ0KCQlhZGRUcmVlRG9tKHNldHRpbmcsIHRyZWVOb2RlKTsNCgkJc2V0dGluZy5jdXJUcmVlTm9kZSA9IHRyZWVOb2RlOw0KCX0NCg0KCS8v6I635Y+W5YWo6YOoIGNoZWNrZWQgPSB0cnVlIG9yIGZhbHNlIOeahOiKgueCuembhuWQiA0KCWZ1bmN0aW9uIGdldFRyZWVDaGVja2VkTm9kZXNPbGQoc2V0dGluZywgdHJlZU5vZGVzLCBjaGVja2VkKSB7DQoJCWlmICghdHJlZU5vZGVzKSByZXR1cm4gW107DQoJCXZhciByZXN1bHRzID0gW107DQoJCWZvciAodmFyIGkgPSAwLCBsID0gdHJlZU5vZGVzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJaWYgKHRyZWVOb2Rlc1tpXS5ub2NoZWNrICE9PSB0cnVlICYmIHRyZWVOb2Rlc1tpXVtzZXR0aW5nLmNoZWNrZWRDb2xdID09IGNoZWNrZWQpIHsNCgkJCQlyZXN1bHRzID0gcmVzdWx0cy5jb25jYXQoW3RyZWVOb2Rlc1tpXV0pOw0KCQkJfQ0KCQkJdmFyIHRtcCA9IGdldFRyZWVDaGVja2VkTm9kZXMoc2V0dGluZywgdHJlZU5vZGVzW2ldW3NldHRpbmcubm9kZXNDb2xdLCBjaGVja2VkKTsNCgkJCWlmICh0bXAubGVuZ3RoID4gMCkgcmVzdWx0cyA9IHJlc3VsdHMuY29uY2F0KHRtcCk7DQoJCX0NCgkJcmV0dXJuIHJlc3VsdHM7DQoJfQ0KICAgICAgICAvL+iOt+WPluWFqOmDqCBjaGVja2VkID0gdHJ1ZSBvciBmYWxzZSDnmoToioLngrnpm4blkIgo54i26IqC54K5Y2hlY2vliJnkuI3pnIDopoHov5Tlm57lrZDoioLngrnkv6Hmga8pDQoJZnVuY3Rpb24gZ2V0VHJlZUNoZWNrZWROb2RlcyhzZXR0aW5nLCB0cmVlTm9kZXMsIGNoZWNrZWQpIHsNCgkJaWYgKCF0cmVlTm9kZXMpIHJldHVybiBbXTsNCgkJdmFyIHJlc3VsdHMgPSBbXTsNCgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0cmVlTm9kZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQlpZiAodHJlZU5vZGVzW2ldLm5vY2hlY2sgIT09IHRydWUgJiYgdHJlZU5vZGVzW2ldW3NldHRpbmcuY2hlY2tlZENvbF0gPT0gY2hlY2tlZCkgew0KCQkJCXJlc3VsdHMgPSByZXN1bHRzLmNvbmNhdChbdHJlZU5vZGVzW2ldXSk7DQoJCQl9DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXAgPSBnZXRUcmVlQ2hlY2tlZE5vZGVzKHNldHRpbmcsIHRyZWVOb2Rlc1tpXVtzZXR0aW5nLm5vZGVzQ29sXSwgY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXAubGVuZ3RoID4gMCkgcmVzdWx0cyA9IHJlc3VsdHMuY29uY2F0KHRtcCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCgkJfQ0KCQlyZXR1cm4gcmVzdWx0czsNCgl9DQoNCg0KCS8v6I635Y+W5YWo6YOoIOiiq+S/ruaUuUNoZWNr54q25oCBIOeahOiKgueCuembhuWQiA0KCWZ1bmN0aW9uIGdldFRyZWVDaGFuZ2VDaGVja2VkTm9kZXMoc2V0dGluZywgdHJlZU5vZGVzKSB7DQoJCWlmICghdHJlZU5vZGVzKSByZXR1cm4gW107DQoJCXZhciByZXN1bHRzID0gW107DQoJCWZvciAodmFyIGkgPSAwLCBsID0gdHJlZU5vZGVzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KCQkJaWYgKHRyZWVOb2Rlc1tpXS5ub2NoZWNrICE9PSB0cnVlICYmIHRyZWVOb2Rlc1tpXVtzZXR0aW5nLmNoZWNrZWRDb2xdICE9IHRyZWVOb2Rlc1tpXS5jaGVja2VkT2xkKSB7DQoJCQkJcmVzdWx0cyA9IHJlc3VsdHMuY29uY2F0KFt0cmVlTm9kZXNbaV1dKTsNCgkJCX0NCgkJCXZhciB0bXAgPSBnZXRUcmVlQ2hhbmdlQ2hlY2tlZE5vZGVzKHNldHRpbmcsIHRyZWVOb2Rlc1tpXVtzZXR0aW5nLm5vZGVzQ29sXSk7DQoJCQlpZiAodG1wLmxlbmd0aCA+IDApIHJlc3VsdHMgPSByZXN1bHRzLmNvbmNhdCh0bXApOw0KCQl9DQoJCXJldHVybiByZXN1bHRzOw0KCX0NCg0KCS8v566A6KaB5pWw5o2u6L2s5o2i5Li65qCH5YeGSlNPTuaVsOe7hA0KCWZ1bmN0aW9uIHRyYW5zZm9ybVRvelRyZWVGb3JtYXQoc2V0dGluZywgc2ltcGxlVHJlZU5vZGVzKSB7DQoJCXZhciBpLGw7DQoJCXZhciBrZXkgPSBzZXR0aW5nLnRyZWVOb2RlS2V5Ow0KCQl2YXIgcGFyZW50S2V5ID0gc2V0dGluZy50cmVlTm9kZVBhcmVudEtleTsNCgkJaWYgKCFrZXkgfHwga2V5PT0iIiB8fCAhc2ltcGxlVHJlZU5vZGVzKSByZXR1cm4gW107DQoNCgkJaWYgKHRvb2xzLmlzQXJyYXkoc2ltcGxlVHJlZU5vZGVzKSkgew0KCQkJdmFyIHIgPSBbXTsNCgkJCXZhciB0bXBNYXAgPSBbXTsNCgkJCWZvciAoaT0wLCBsPXNpbXBsZVRyZWVOb2Rlcy5sZW5ndGg7IGk8bDsgaSsrKSB7DQoJCQkJdG1wTWFwW3NpbXBsZVRyZWVOb2Rlc1tpXVtrZXldXSA9IHNpbXBsZVRyZWVOb2Rlc1tpXTsNCgkJCX0NCgkJCWZvciAoaT0wLCBsPXNpbXBsZVRyZWVOb2Rlcy5sZW5ndGg7IGk8bDsgaSsrKSB7DQoJCQkJaWYgKHRtcE1hcFtzaW1wbGVUcmVlTm9kZXNbaV1bcGFyZW50S2V5XV0pIHsNCgkJCQkJaWYgKCF0bXBNYXBbc2ltcGxlVHJlZU5vZGVzW2ldW3BhcmVudEtleV1dW3NldHRpbmcubm9kZXNDb2xdKQ0KCQkJCQkJdG1wTWFwW3NpbXBsZVRyZWVOb2Rlc1tpXVtwYXJlbnRLZXldXVtzZXR0aW5nLm5vZGVzQ29sXSA9IFtdOw0KCQkJCQl0bXBNYXBbc2ltcGxlVHJlZU5vZGVzW2ldW3BhcmVudEtleV1dW3NldHRpbmcubm9kZXNDb2xdLnB1c2goc2ltcGxlVHJlZU5vZGVzW2ldKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQlyLnB1c2goc2ltcGxlVHJlZU5vZGVzW2ldKTsNCgkJCQl9DQoJCQl9DQoJCQlyZXR1cm4gcjsNCgkJfWVsc2Ugew0KCQkJcmV0dXJuIFtzaW1wbGVUcmVlTm9kZXNdOw0KCQl9DQoJfQ0KDQoJLy/moIflh4ZKU09OIHpUcmVlTm9kZSDmlbDnu4TovazmjaLkuLrmma7pgJpBcnJheeeugOimgeaVsOaNrg0KCWZ1bmN0aW9uIHRyYW5zZm9ybVRvQXJyYXlGb3JtYXQoc2V0dGluZywgdHJlZU5vZGVzKSB7DQoJCWlmICghdHJlZU5vZGVzKSByZXR1cm4gW107DQoJCXZhciByID0gW107DQoJCWlmICh0b29scy5pc0FycmF5KHRyZWVOb2RlcykpIHsNCgkJCWZvciAodmFyIGk9MCwgbD10cmVlTm9kZXMubGVuZ3RoOyBpPGw7IGkrKykgew0KCQkJCXIucHVzaCh0cmVlTm9kZXNbaV0pOw0KCQkJCWlmICh0cmVlTm9kZXNbaV1bc2V0dGluZy5ub2Rlc0NvbF0pDQoJCQkJCXIgPSByLmNvbmNhdCh0cmFuc2Zvcm1Ub0FycmF5Rm9ybWF0KHNldHRpbmcsIHRyZWVOb2Rlc1tpXVtzZXR0aW5nLm5vZGVzQ29sXSkpOw0KCQkJfQ0KCQl9IGVsc2Ugew0KCQkJci5wdXNoKHRyZWVOb2Rlcyk7DQoJCQlpZiAodHJlZU5vZGVzW3NldHRpbmcubm9kZXNDb2xdKQ0KCQkJCXIgPSByLmNvbmNhdCh0cmFuc2Zvcm1Ub0FycmF5Rm9ybWF0KHNldHRpbmcsIHRyZWVOb2Rlc1tzZXR0aW5nLm5vZGVzQ29sXSkpOw0KCQl9DQoJCXJldHVybiByOw0KCX0NCg0KCWZ1bmN0aW9uIHpUcmVlUGx1Z2luKCl7DQoJCXJldHVybiB7DQoJCQljb250YWluZXI6bnVsbCwNCgkJCXNldHRpbmc6bnVsbCwNCg0KCQkJaW5pdDogZnVuY3Rpb24ob2JqKSB7DQoJCQkJdGhpcy5jb250YWluZXIgPSBvYmo7DQoJCQkJdGhpcy5zZXR0aW5nID0gc2V0dGluZ3Nbb2JqLmF0dHIoImlkIildOw0KCQkJCXJldHVybiB0aGlzOw0KCQkJfSwNCg0KCQkJcmVmcmVzaCA6IGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMuc2V0dGluZy50cmVlT2JqLmVtcHR5KCk7DQoJCQkJelRyZWVOb2RlQ2FjaGVbdGhpcy5zZXR0aW5nLnRyZWVPYmpJZF0gPSBbXTsNCgkJCQl0aGlzLnNldHRpbmcuY3VyVHJlZU5vZGUgPSBudWxsOw0KCQkJCXRoaXMuc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUgPSBudWxsOw0KCQkJCXRoaXMuc2V0dGluZy5kcmFnU3RhdHVzID0gMDsNCgkJCQl0aGlzLnNldHRpbmcuZHJhZ05vZGVTaG93QmVmb3JlID0gZmFsc2U7DQoJCQkJdGhpcy5zZXR0aW5nLmNoZWNrUmFkaW9DaGVja2VkTGlzdCA9IFtdOw0KCQkJCWluaXRUcmVlTm9kZXModGhpcy5zZXR0aW5nLCAwLCB0aGlzLnNldHRpbmcucm9vdFt0aGlzLnNldHRpbmcubm9kZXNDb2xdKTsNCgkJCX0sDQoNCgkJCXNldEVkaXRhYmxlIDogZnVuY3Rpb24oZWRpdGFibGUpIHsNCgkJCQl0aGlzLnNldHRpbmcuZWRpdGFibGUgPSBlZGl0YWJsZTsNCgkJCQlyZXR1cm4gdGhpcy5yZWZyZXNoKCk7DQoJCQl9LA0KDQoJCQl0cmFuc2Zvcm1Ub3pUcmVlTm9kZXMgOiBmdW5jdGlvbihzaW1wbGVUcmVlTm9kZXMpIHsNCgkJCQlyZXR1cm4gdHJhbnNmb3JtVG96VHJlZUZvcm1hdCh0aGlzLnNldHRpbmcsIHNpbXBsZVRyZWVOb2Rlcyk7DQoJCQl9LA0KDQoJCQl0cmFuc2Zvcm1Ub0FycmF5IDogZnVuY3Rpb24odHJlZU5vZGVzKSB7DQoJCQkJcmV0dXJuIHRyYW5zZm9ybVRvQXJyYXlGb3JtYXQodGhpcy5zZXR0aW5nLCB0cmVlTm9kZXMpOw0KCQkJfSwNCg0KCQkJZ2V0Tm9kZXMgOiBmdW5jdGlvbigpIHsNCgkJCQlyZXR1cm4gdGhpcy5zZXR0aW5nLnJvb3RbdGhpcy5zZXR0aW5nLm5vZGVzQ29sXTsNCgkJCX0sDQoNCgkJCWdldFNlbGVjdGVkTm9kZSA6IGZ1bmN0aW9uKCkgew0KCQkJCXJldHVybiB0aGlzLnNldHRpbmcuY3VyVHJlZU5vZGU7DQoJCQl9LA0KDQoJCQlnZXRDaGVja2VkTm9kZXMgOiBmdW5jdGlvbihjaGVja2VkKSB7DQoJCQkJY2hlY2tlZCA9IChjaGVja2VkICE9IGZhbHNlKTsNCgkJCQlyZXR1cm4gZ2V0VHJlZUNoZWNrZWROb2Rlcyh0aGlzLnNldHRpbmcsIHRoaXMuc2V0dGluZy5yb290W3RoaXMuc2V0dGluZy5ub2Rlc0NvbF0sIGNoZWNrZWQpOw0KCQkJfSwNCg0KCQkJZ2V0Q2hhbmdlQ2hlY2tlZE5vZGVzIDogZnVuY3Rpb24oKSB7DQoJCQkJcmV0dXJuIGdldFRyZWVDaGFuZ2VDaGVja2VkTm9kZXModGhpcy5zZXR0aW5nLCB0aGlzLnNldHRpbmcucm9vdFt0aGlzLnNldHRpbmcubm9kZXNDb2xdKTsNCgkJCX0sDQoNCgkJCWdldE5vZGVCeVRJZCA6IGZ1bmN0aW9uKHRyZWVJZCkgew0KCQkJCWlmICghdHJlZUlkKSByZXR1cm4gbnVsbDsNCgkJCQlyZXR1cm4gZ2V0VHJlZU5vZGVCeVRJZCh0aGlzLnNldHRpbmcsIHRyZWVJZCk7DQoJCQl9LA0KCQkJZ2V0Tm9kZUJ5UGFyYW0gOiBmdW5jdGlvbihrZXksIHZhbHVlKSB7DQoJCQkJaWYgKCFrZXkpIHJldHVybiBudWxsOw0KCQkJCXJldHVybiBnZXRUcmVlTm9kZUJ5UGFyYW0odGhpcy5zZXR0aW5nLCB0aGlzLnNldHRpbmcucm9vdFt0aGlzLnNldHRpbmcubm9kZXNDb2xdLCBrZXksIHZhbHVlKTsNCgkJCX0sDQoJCQlnZXROb2Rlc0J5UGFyYW0gOiBmdW5jdGlvbihrZXksIHZhbHVlLCBwYXJlbnROb2RlKSB7DQoJCQkJaWYgKCFrZXkpIHJldHVybiBudWxsOw0KCQkJCXJldHVybiBnZXRUcmVlTm9kZXNCeVBhcmFtKHRoaXMuc2V0dGluZywgcGFyZW50Tm9kZT9wYXJlbnROb2RlW3RoaXMuc2V0dGluZy5ub2Rlc0NvbF06dGhpcy5zZXR0aW5nLnJvb3RbdGhpcy5zZXR0aW5nLm5vZGVzQ29sXSwga2V5LCB2YWx1ZSk7DQoJCQl9LA0KCQkJZ2V0Tm9kZXNCeVBhcmFtRnV6enkgOiBmdW5jdGlvbihrZXksIHZhbHVlLCBwYXJlbnROb2RlKSB7DQoJCQkJaWYgKCFrZXkpIHJldHVybiBudWxsOw0KCQkJCXJldHVybiBnZXRUcmVlTm9kZXNCeVBhcmFtRnV6enkodGhpcy5zZXR0aW5nLCBwYXJlbnROb2RlP3BhcmVudE5vZGVbdGhpcy5zZXR0aW5nLm5vZGVzQ29sXTp0aGlzLnNldHRpbmcucm9vdFt0aGlzLnNldHRpbmcubm9kZXNDb2xdLCBrZXksIHZhbHVlKTsNCgkJCX0sDQoNCgkJCWdldE5vZGVJbmRleCA6IGZ1bmN0aW9uKHRyZWVOb2RlKSB7DQoJCQkJaWYgKCF0cmVlTm9kZSkgcmV0dXJuIG51bGw7DQoJCQkJdmFyIHBhcmVudE5vZGUgPSAodHJlZU5vZGUucGFyZW50Tm9kZSA9PSBudWxsKSA/IHRoaXMuc2V0dGluZy5yb290IDogdHJlZU5vZGUucGFyZW50Tm9kZTsNCgkJCQlmb3IgKHZhciBpPTAsIGwgPSBwYXJlbnROb2RlW3RoaXMuc2V0dGluZy5ub2Rlc0NvbF0ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQkJCWlmIChwYXJlbnROb2RlW3RoaXMuc2V0dGluZy5ub2Rlc0NvbF1baV0gPT0gdHJlZU5vZGUpIHJldHVybiBpOw0KCQkJCX0NCgkJCQlyZXR1cm4gLTE7DQoJCQl9LA0KDQoJCQlnZXRTZXR0aW5nIDogZnVuY3Rpb24oKSB7DQoJCQkJdmFyIHpUcmVlU2V0dGluZyA9IHRoaXMuc2V0dGluZzsNCgkJCQl2YXIgc2V0dGluZyA9IHsNCgkJCQkJY2hlY2tUeXBlOnt9LA0KCQkJCQljYWxsYmFjazp7fQ0KCQkJCX07DQoNCgkJCQl2YXIgdG1wX2NoZWNrVHlwZSA9IHpUcmVlU2V0dGluZy5jaGVja1R5cGU7DQoJCQkJelRyZWVTZXR0aW5nLmNoZWNrVHlwZSA9IHVuZGVmaW5lZDsNCgkJCQl2YXIgdG1wX2NhbGxiYWNrID0gelRyZWVTZXR0aW5nLmNhbGxiYWNrOw0KCQkJCXpUcmVlU2V0dGluZy5jYWxsYmFjayA9IHVuZGVmaW5lZDsNCgkJCQl2YXIgdG1wX3Jvb3QgPSB6VHJlZVNldHRpbmcucm9vdDsNCgkJCQl6VHJlZVNldHRpbmcucm9vdCA9IHVuZGVmaW5lZDsNCg0KCQkJCSQuZXh0ZW5kKHNldHRpbmcsIHpUcmVlU2V0dGluZyk7DQoNCgkJCQl6VHJlZVNldHRpbmcuY2hlY2tUeXBlID0gdG1wX2NoZWNrVHlwZTsNCgkJCQl6VHJlZVNldHRpbmcuY2FsbGJhY2sgPSB0bXBfY2FsbGJhY2s7DQoJCQkJelRyZWVTZXR0aW5nLnJvb3QgPSB0bXBfcm9vdDsNCg0KCQkJCS8v5LiN6IO96I635Y+Wcm9vdOS/oeaBrw0KCQkJCSQuZXh0ZW5kKHRydWUsIHNldHRpbmcuY2hlY2tUeXBlLCB0bXBfY2hlY2tUeXBlKTsNCgkJCQkkLmV4dGVuZChzZXR0aW5nLmNhbGxiYWNrLCB0bXBfY2FsbGJhY2spOw0KDQoJCQkJcmV0dXJuIHNldHRpbmc7DQoJCQl9LA0KDQoJCQl1cGRhdGVTZXR0aW5nIDogZnVuY3Rpb24oelRyZWVTZXR0aW5nKSB7DQoJCQkJaWYgKCF6VHJlZVNldHRpbmcpIHJldHVybjsNCgkJCQl2YXIgc2V0dGluZyA9IHRoaXMuc2V0dGluZzsNCgkJCQl2YXIgdHJlZU9iaklkID0gc2V0dGluZy50cmVlT2JqSWQ7DQoNCgkJCQl2YXIgdG1wX2NoZWNrVHlwZSA9IHpUcmVlU2V0dGluZy5jaGVja1R5cGU7DQoJCQkJelRyZWVTZXR0aW5nLmNoZWNrVHlwZSA9IHVuZGVmaW5lZDsNCgkJCQl2YXIgdG1wX2NhbGxiYWNrID0gelRyZWVTZXR0aW5nLmNhbGxiYWNrOw0KCQkJCXpUcmVlU2V0dGluZy5jYWxsYmFjayA9IHVuZGVmaW5lZDsNCgkJCQl2YXIgdG1wX3Jvb3QgPSB6VHJlZVNldHRpbmcucm9vdDsNCgkJCQl6VHJlZVNldHRpbmcucm9vdCA9IHVuZGVmaW5lZDsNCg0KCQkJCSQuZXh0ZW5kKHNldHRpbmcsIHpUcmVlU2V0dGluZyk7DQoNCgkJCQl6VHJlZVNldHRpbmcuY2hlY2tUeXBlID0gdG1wX2NoZWNrVHlwZTsNCgkJCQl6VHJlZVNldHRpbmcuY2FsbGJhY2sgPSB0bXBfY2FsbGJhY2s7DQoJCQkJelRyZWVTZXR0aW5nLnJvb3QgPSB0bXBfcm9vdDsNCg0KCQkJCS8v5LiN5o+Q5L6bcm9vdOS/oeaBr3VwZGF0ZQ0KCQkJCSQuZXh0ZW5kKHRydWUsIHNldHRpbmcuY2hlY2tUeXBlLCB0bXBfY2hlY2tUeXBlKTsNCgkJCQkkLmV4dGVuZChzZXR0aW5nLmNhbGxiYWNrLCB0bXBfY2FsbGJhY2spOw0KCQkJCXNldHRpbmcudHJlZU9iaklkID0gdHJlZU9iaklkOw0KCQkJCXNldHRpbmcudHJlZU9iaiA9IHRoaXMuY29udGFpbmVyOw0KDQoJCQl9LA0KDQoJCQlleHBhbmRBbGwgOiBmdW5jdGlvbihleHBhbmRTaWduKSB7DQoJCQkJZXhwYW5kQ29sbGFwc2VTb25Ob2RlKHRoaXMuc2V0dGluZywgbnVsbCwgZXhwYW5kU2lnbiwgdHJ1ZSk7DQoJCQl9LA0KDQoJCQlleHBhbmROb2RlIDogZnVuY3Rpb24odHJlZU5vZGUsIGV4cGFuZFNpZ24sIHNvblNpZ24sIGZvY3VzKSB7DQoJCQkJaWYgKCF0cmVlTm9kZSkgcmV0dXJuOw0KDQoJCQkJaWYgKGV4cGFuZFNpZ24pIHsNCgkJCQkJLy/lpoLmnpzlsZXlvIDmn5DoioLngrnvvIzliJnlv4XpobvlsZXlvIDlhbblhajpg6jniLboioLngrkNCgkJCQkJLy/kuLrkuobkv53or4HmlYjnjocs5bGV5byA54i26IqC54K55pe25LiN5L2/55So5Yqo55S7DQoJCQkJCWlmICh0cmVlTm9kZS5wYXJlbnROb2RlKSBleHBhbmRDb2xsYXBzZVBhcmVudE5vZGUodGhpcy5zZXR0aW5nLCB0cmVlTm9kZS5wYXJlbnROb2RlLCBleHBhbmRTaWduLCBmYWxzZSk7DQoJCQkJfQ0KCQkJCWlmIChzb25TaWduKSB7DQoJCQkJCS8v5aSa5Liq5Zu+5bGC5ZCM5pe26L+b6KGM5Yqo55S777yM5a+86Ie05Lqn55Sf55qE5bu26L+f5b6I6Zq+55So5Luj56CB5YeG56Gu5o2V6I635Yqo55S75pyA57uI57uT5p2f5pe26Ze0DQoJCQkJCS8v5Zug5q2k5Li65LqG5L+d6K+B5YeG56Gu5bCG6IqC54K5Zm9jdXPov5vooYzlrprkvY3vvIzliJnlr7nkuo5qc+aTjeS9nOiKgueCueaXtu+8jOS4jei/m+ihjOWKqOeUuw0KCQkJCQlleHBhbmRDb2xsYXBzZVNvbk5vZGUodGhpcy5zZXR0aW5nLCB0cmVlTm9kZSwgZXhwYW5kU2lnbiwgZmFsc2UsIGZ1bmN0aW9uKCkgew0KCQkJCQkJaWYgKGZvY3VzICE9PSBmYWxzZSkgeyQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0ljb24pLmZvY3VzKCkuYmx1cigpO30NCgkJCQkJfSk7DQoJCQkJfSBlbHNlIGlmICh0cmVlTm9kZS5vcGVuICE9IGV4cGFuZFNpZ24pIHsNCgkJCQkJc3dpdGNoTm9kZSh0aGlzLnNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQkJaWYgKGZvY3VzICE9PSBmYWxzZSkgeyQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0ljb24pLmZvY3VzKCkuYmx1cigpO30NCgkJCQl9DQoJCQl9LA0KDQoJCQlzZWxlY3ROb2RlIDogZnVuY3Rpb24odHJlZU5vZGUpIHsNCgkJCQlpZiAoIXRyZWVOb2RlKSByZXR1cm47DQoNCgkJCQlpZiAoc3QuY2hlY2tFdmVudCh0aGlzLnNldHRpbmcpKSB7DQoJCQkJCXNlbGVjdE5vZGUodGhpcy5zZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQkJCS8v5aaC5p6c6YCJ5oup5p+Q6IqC54K577yM5YiZ5b+F6aG75bGV5byA5YW25YWo6YOo54i26IqC54K5DQoJCQkJCS8v5aSa5Liq5Zu+5bGC5ZCM5pe26L+b6KGM5Yqo55S777yM5a+86Ie05Lqn55Sf55qE5bu26L+f5b6I6Zq+55So5Luj56CB5YeG56Gu5o2V6I635Yqo55S75pyA57uI57uT5p2f5pe26Ze0DQoJCQkJCS8v5Zug5q2k5Li65LqG5L+d6K+B5YeG56Gu5bCG6IqC54K5Zm9jdXPov5vooYzlrprkvY3vvIzliJnlr7nkuo5qc+aTjeS9nOiKgueCueaXtu+8jOS4jei/m+ihjOWKqOeUuw0KCQkJCQlpZiAodHJlZU5vZGUucGFyZW50Tm9kZSkgew0KCQkJCQkJZXhwYW5kQ29sbGFwc2VQYXJlbnROb2RlKHRoaXMuc2V0dGluZywgdHJlZU5vZGUucGFyZW50Tm9kZSwgdHJ1ZSwgZmFsc2UsIGZ1bmN0aW9uKCkgew0KCQkJCQkJCSQoIiMiICsgdHJlZU5vZGUudElkICsgSURNYXJrX0ljb24pLmZvY3VzKCkuYmx1cigpOw0KCQkJCQkJfSk7DQoJCQkJCX0gZWxzZSB7DQoJCQkJCQkkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19JY29uKS5mb2N1cygpLmJsdXIoKTsNCgkJCQkJfQ0KCQkJCX0NCgkJCX0sDQoNCgkJCWNhbmNsZVNlbGVjdGVkTm9kZSA6IGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMuY2FuY2VsU2VsZWN0ZWROb2RlKCk7DQoJCQl9LA0KCQkJY2FuY2VsU2VsZWN0ZWROb2RlIDogZnVuY3Rpb24oKSB7DQoJCQkJc3QuY2FuY2VsUHJlU2VsZWN0ZWROb2RlKHRoaXMuc2V0dGluZyk7DQoJCQl9LA0KDQoJCQljaGVja0FsbE5vZGVzIDogZnVuY3Rpb24oY2hlY2tlZCkgew0KCQkJCXJlcGFpckFsbENoayh0aGlzLnNldHRpbmcsIGNoZWNrZWQpOw0KCQkJfSwNCg0KCQkJcmVBc3luY0NoaWxkTm9kZXMgOiBmdW5jdGlvbihwYXJlbnROb2RlLCByZWxvYWRUeXBlKSB7DQoJCQkJaWYgKCF0aGlzLnNldHRpbmcuYXN5bmMpIHJldHVybjsNCgkJCQl2YXIgaXNSb290ID0gIXBhcmVudE5vZGU7DQoJCQkJaWYgKGlzUm9vdCkgew0KCQkJCQlwYXJlbnROb2RlID0gdGhpcy5zZXR0aW5nLnJvb3Q7DQoJCQkJfQ0KCQkJCWlmIChyZWxvYWRUeXBlPT0icmVmcmVzaCIpIHsNCgkJCQkJcGFyZW50Tm9kZVt0aGlzLnNldHRpbmcubm9kZXNDb2xdID0gW107DQoJCQkJCWlmIChpc1Jvb3QpIHsNCgkJCQkJCXRoaXMuc2V0dGluZy50cmVlT2JqLmVtcHR5KCk7DQoJCQkJCX0gZWxzZSB7DQoJCQkJCQl2YXIgdWxPYmogPSAkKCIjIiArIHBhcmVudE5vZGUudElkICsgSURNYXJrX1VsKTsNCgkJCQkJCXVsT2JqLmVtcHR5KCk7DQoJCQkJCX0NCgkJCQl9DQoJCQkJYXN5bmNHZXROb2RlKHRoaXMuc2V0dGluZywgaXNSb290PyBudWxsOnBhcmVudE5vZGUpOw0KCQkJfSwNCg0KCQkJYWRkTm9kZXMgOiBmdW5jdGlvbihwYXJlbnROb2RlLCBuZXdOb2RlcywgaXNTaWxlbnQpIHsNCgkJCQlpZiAoIW5ld05vZGVzKSByZXR1cm47DQoJCQkJaWYgKCFwYXJlbnROb2RlKSBwYXJlbnROb2RlID0gbnVsbDsNCgkJCQl2YXIgeE5ld05vZGVzID0gdG9vbHMuaXNBcnJheShuZXdOb2Rlcyk/IG5ld05vZGVzOiBbbmV3Tm9kZXNdOw0KCQkJCWFkZFRyZWVOb2Rlcyh0aGlzLnNldHRpbmcsIHBhcmVudE5vZGUsIHhOZXdOb2RlcywgKGlzU2lsZW50PT10cnVlKSk7DQoJCQl9LA0KCQkJaW5wdXROb2RlTmFtZTogZnVuY3Rpb24odHJlZU5vZGUpIHsNCgkJCQlpZiAoIXRyZWVOb2RlKSByZXR1cm47DQoJCQkJaWYgKHN0LmNoZWNrRXZlbnQodGhpcy5zZXR0aW5nKSkgew0KCQkJCQllZGl0VHJlZU5vZGUodGhpcy5zZXR0aW5nLCB0cmVlTm9kZSkNCgkJCQl9DQoJCQl9LA0KCQkJY2FuY2VsSW5wdXQ6IGZ1bmN0aW9uKG5ld05hbWUpIHsNCgkJCQlpZiAoIXRoaXMuc2V0dGluZy5jdXJFZGl0VHJlZU5vZGUpIHJldHVybjsNCgkJCQl2YXIgdHJlZU5vZGUgPSB0aGlzLnNldHRpbmcuY3VyRWRpdFRyZWVOb2RlOw0KCQkJCXN0LmNhbmNlbFByZUVkaXROb2RlKHRoaXMuc2V0dGluZywgbmV3TmFtZT9uZXdOYW1lOnRyZWVOb2RlW3RoaXMuc2V0dGluZy5uYW1lQ29sXSk7DQoJCQkJdGhpcy5zZWxlY3ROb2RlKHRyZWVOb2RlKTsNCgkJCX0sDQoJCQl1cGRhdGVOb2RlIDogZnVuY3Rpb24odHJlZU5vZGUsIGNoZWNrVHlwZUZsYWcpIHsNCgkJCQlpZiAoIXRyZWVOb2RlKSByZXR1cm47DQoJCQkJaWYgKHN0LmNoZWNrRXZlbnQodGhpcy5zZXR0aW5nKSkgew0KCQkJCQl2YXIgY2hlY2tPYmogPSAkKCIjIiArIHRyZWVOb2RlLnRJZCArIElETWFya19DaGVjayk7DQoJCQkJCWlmICh0aGlzLnNldHRpbmcuY2hlY2thYmxlKSB7DQoJCQkJCQlpZiAoY2hlY2tUeXBlRmxhZyA9PSB0cnVlKSBjaGVja05vZGVSZWxhdGlvbih0aGlzLnNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCQkJCXNldENoa0NsYXNzKHRoaXMuc2V0dGluZywgY2hlY2tPYmosIHRyZWVOb2RlKTsNCgkJCQkJCXJlcGFpclBhcmVudENoa0NsYXNzV2l0aFNlbGYodGhpcy5zZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQkJCX0NCgkJCQkJc2V0Tm9kZU5hbWUodGhpcy5zZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQkJCXNldE5vZGVUYXJnZXQodHJlZU5vZGUpOw0KCQkJCQlzZXROb2RlVXJsKHRoaXMuc2V0dGluZywgdHJlZU5vZGUpOw0KCQkJCQlzZXROb2RlTGluZUljb3ModGhpcy5zZXR0aW5nLCB0cmVlTm9kZSk7DQoJCQkJCXNldE5vZGVGb250Q3NzKHRoaXMuc2V0dGluZywgdHJlZU5vZGUpOw0KCQkJCX0NCgkJCX0sDQoNCgkJCW1vdmVOb2RlIDogZnVuY3Rpb24odGFyZ2V0Tm9kZSwgdHJlZU5vZGUsIG1vdmVUeXBlKSB7DQoJCQkJaWYgKCF0cmVlTm9kZSkgcmV0dXJuOw0KDQoJCQkJaWYgKHRhcmdldE5vZGUgJiYgKCh0cmVlTm9kZS5wYXJlbnROb2RlID09IHRhcmdldE5vZGUgJiYgbW92ZVR5cGUgPT0gTW92ZVR5cGVfSW5uZXIpIHx8ICQoIiMiICsgdHJlZU5vZGUudElkKS5maW5kKCIjIiArIHRhcmdldE5vZGUudElkKS5sZW5ndGggPiAwKSkgew0KCQkJCQlyZXR1cm47DQoJCQkJfSBlbHNlIGlmICghdGFyZ2V0Tm9kZSkgew0KCQkJCQl0YXJnZXROb2RlID0gbnVsbDsNCgkJCQl9DQoJCQkJbW92ZVRyZWVOb2RlKHRoaXMuc2V0dGluZywgdGFyZ2V0Tm9kZSwgdHJlZU5vZGUsIG1vdmVUeXBlLCBmYWxzZSk7DQoJCQl9LA0KDQoJCQljb3B5Tm9kZSA6IGZ1bmN0aW9uKHRhcmdldE5vZGUsIHRyZWVOb2RlLCBtb3ZlVHlwZSkgew0KCQkJCWlmICghdHJlZU5vZGUpIHJldHVybiBudWxsOw0KCQkJCXZhciBuZXdOb2RlID0gdG9vbHMuY2xvbmUodHJlZU5vZGUpOw0KCQkJCWlmICghdGFyZ2V0Tm9kZSkgew0KCQkJCQl0YXJnZXROb2RlID0gbnVsbDsNCgkJCQkJbW92ZVR5cGUgPSBNb3ZlVHlwZV9Jbm5lcjsNCgkJCQl9DQoJCQkJaWYgKG1vdmVUeXBlID09IE1vdmVUeXBlX0lubmVyKSB7DQoJCQkJCWFkZFRyZWVOb2Rlcyh0aGlzLnNldHRpbmcsIHRhcmdldE5vZGUsIFtuZXdOb2RlXSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJYWRkVHJlZU5vZGVzKHRoaXMuc2V0dGluZywgdGFyZ2V0Tm9kZS5wYXJlbnROb2RlLCBbbmV3Tm9kZV0pOw0KCQkJCQltb3ZlVHJlZU5vZGUodGhpcy5zZXR0aW5nLCB0YXJnZXROb2RlLCBuZXdOb2RlLCBtb3ZlVHlwZSwgZmFsc2UpOw0KCQkJCX0NCgkJCQlyZXR1cm4gbmV3Tm9kZTsNCgkJCX0sDQoNCgkJCXJlbW92ZU5vZGUgOiBmdW5jdGlvbih0cmVlTm9kZSkgew0KCQkJCWlmICghdHJlZU5vZGUpIHJldHVybjsNCgkJCQlyZW1vdmVUcmVlTm9kZSh0aGlzLnNldHRpbmcsIHRyZWVOb2RlKTsNCgkJCX0NCgkJfTsNCgl9DQp9KShqUXVlcnkpOw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>