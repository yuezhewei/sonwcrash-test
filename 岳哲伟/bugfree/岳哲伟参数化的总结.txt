1.顺序+每次迭代
只是在迭代的时候更新用户值，并且多用户每次迭代取值都是一样的
（由于用户名和密码只有一个是正确的，相当于单用户，其他用户的用户名和密码不正确无法执行后续操作）
只有每次迭代是才会更新取值，且每次取值时都按照顺序来取
如参数assign_to_name的参数：admin1，admin2，admin3
每次执行时如果不迭代则取值都是第一个，迭代一次依次取下一个值
2.顺序+每次出现
在每次出现取值时都会顺序的更新取值
如参数bugtype：代码错误、用户界面、需求变动
在每次都要取值时，第一次取到代码错误，下一次执行取值时会依次取到用户界面・・・
3.顺序+仅一次
多用户和单用户情况一样，都只取唯一值
每个参数列表的参数值只能取一次不能重复再取
4.随机+每次迭代 
取值的方式形同第一种情况，都是在每次迭代时候才会更新取值，
但是取值的方式发生改变，当迭代后在取值时，以随机的方式，随机所有可选取值中的任意一个
5.随机+仅一次
只取一次值，参数不再改变（无论发生什么情况取值不再更新）
6.随机+每次出现
每次执行取值操作时都会更新取值，取值的方式是随机的
如"Name=Custom[BugType]", "Value={bugtype}", ENDITEM,
设置有三个取值，每次执行这段语句都会取一个随机的值
7.唯一取值+每次迭代/每次出现/仅一次
每个参数只能使用一次
在Vuser数和参数值总量固定的情况下，每个Vuser分配的参数值数量实际就是迭代次数。迭代次数小于或等于3（设置的参数的个数）时，参数值总量是够用的；迭代次数大于3时，参数值总量就不够用了，执行压力测试时就会报错，故我们需要保证参数值总量够用。那么该选项：allocate _____values for each Vuser的数值，必须小于等于100。
也可以设置when out of values ：Continue with last value
这样即使参数不足的情况，超出的部分使用最后一个参数
